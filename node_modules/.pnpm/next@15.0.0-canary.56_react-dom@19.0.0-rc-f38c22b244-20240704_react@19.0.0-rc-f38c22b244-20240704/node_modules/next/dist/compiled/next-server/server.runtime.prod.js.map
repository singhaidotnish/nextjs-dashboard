{"version":3,"file":"server.runtime.prod.js","mappings":"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","sources":["webpack://next/../next-env/dist/index.js","webpack://next/./dist/compiled/@edge-runtime/cookies/index.js","webpack://next/./dist/compiled/cookie/index.js","webpack://next/./dist/compiled/fresh/index.js","webpack://next/./dist/compiled/lru-cache/index.js","webpack://next/./dist/compiled/src/index.ts","webpack://next/./dist/src/lib/constants.ts","webpack://next/./dist/src/server/api-utils/index.ts","webpack://next/./dist/src/server/api-utils/node/try-get-preview-data.ts","webpack://next/./dist/src/server/crypto-utils.ts","webpack://next/./dist/src/server/lib/trace/constants.ts","webpack://next/./dist/src/server/node-environment.ts","webpack://next/./dist/src/server/node-polyfill-crypto.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/reflect.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/headers.ts","webpack://next/./dist/src/shared/lib/isomorphic/path.js","webpack://next/./dist/src/shared/lib/modern-browserslist-target.js","webpack://next/./dist/esm/server/ sync","webpack://next/external commonjs \"next/dist/server/lib/trace/tracer\"","webpack://next/external commonjs2 \"next/dist/compiled/jsonwebtoken\"","webpack://next/external commonjs2 \"next/dist/compiled/node-html-parser\"","webpack://next/external commonjs2 \"next/dist/compiled/ws\"","webpack://next/external commonjs2 \"next/dist/server/web/sandbox\"","webpack://next/external node-commonjs \"async_hooks\"","webpack://next/external node-commonjs \"crypto\"","webpack://next/external node-commonjs \"fs\"","webpack://next/external node-commonjs \"module\"","webpack://next/external node-commonjs \"node:crypto\"","webpack://next/external node-commonjs \"os\"","webpack://next/external node-commonjs \"path\"","webpack://next/webpack/bootstrap","webpack://next/webpack/runtime/compat get default export","webpack://next/webpack/runtime/define property getters","webpack://next/webpack/runtime/hasOwnProperty shorthand","webpack://next/webpack/runtime/make namespace object","webpack://next/./dist/src/server/lib/incremental-cache/fetch-cache.ts","webpack://next/./dist/src/server/lib/incremental-cache/file-system-cache.ts","webpack://next/./dist/src/lib/picocolors.ts","webpack://next/./dist/src/server/require-hook.ts","webpack://next/./dist/src/shared/lib/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/route-matcher.ts","webpack://next/./dist/src/server/request-meta.ts","webpack://next/./dist/src/shared/lib/constants.ts","webpack://next/./dist/src/lib/find-pages-dir.ts","webpack://next/./dist/src/server/api-utils/get-cookie-parser.ts","webpack://next/./dist/src/client/components/redirect-status-code.ts","webpack://next/./dist/src/server/base-http/index.ts","webpack://next/./dist/src/server/base-http/node.ts","webpack://next/./dist/src/server/lib/etag.ts","webpack://next/./dist/src/server/lib/revalidate.ts","webpack://next/./dist/src/client/components/app-router-headers.ts","webpack://next/./dist/src/server/send-payload.ts","webpack://next/./dist/src/shared/lib/router/utils/querystring.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-url.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-relative-url.ts","webpack://next/./dist/src/build/output/log.ts","webpack://next/external node-commonjs \"url\"","webpack://next/./dist/src/server/lib/is-ipv6.ts","webpack://next/./dist/src/shared/lib/page-path/ensure-leading-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/app-paths.ts","webpack://next/./dist/src/shared/lib/segment.ts","webpack://next/./dist/src/server/lib/interception-routes.ts","webpack://next/./dist/src/shared/lib/router/utils/is-dynamic.ts","webpack://next/external commonjs \"next/dist/shared/lib/runtime-config.external.js\"","webpack://next/./dist/src/shared/lib/router/utils/is-bot.ts","webpack://next/./dist/src/server/stream-utils/node-web-streams-helper.ts","webpack://next/./dist/src/server/stream-utils/encodedTags.ts","webpack://next/./dist/src/server/web/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-path.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-suffix.ts","webpack://next/./dist/src/shared/lib/router/utils/path-has-prefix.ts","webpack://next/./dist/src/shared/lib/get-hostname.ts","webpack://next/./dist/src/shared/lib/i18n/normalize-locale-path.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://next/./dist/src/server/web/next-url.ts","webpack://next/./dist/src/shared/lib/i18n/detect-domain-locale.ts","webpack://next/./dist/src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://next/./dist/src/shared/lib/router/utils/add-locale.ts","webpack://next/./dist/src/server/web/error.ts","webpack://next/./dist/src/server/web/spec-extension/request.ts","webpack://next/./dist/src/server/base-http/helpers.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/next-request.ts","webpack://next/./dist/src/lib/detached-promise.ts","webpack://next/./dist/src/server/client-component-renderer-logger.ts","webpack://next/./dist/src/server/pipe-readable.ts","webpack://next/./dist/src/server/render-result.ts","webpack://next/./dist/src/shared/lib/page-path/denormalize-page-path.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-path-sep.ts","webpack://next/./dist/src/shared/lib/router/utils/path-match.ts","webpack://next/./dist/src/shared/lib/escape-regexp.ts","webpack://next/./dist/src/shared/lib/router/utils/route-regex.ts","webpack://next/./dist/src/shared/lib/router/utils/prepare-destination.ts","webpack://next/./dist/src/lib/is-error.ts","webpack://next/./dist/src/shared/lib/is-plain-object.ts","webpack://next/./dist/src/server/normalizers/locale-route-normalizer.ts","webpack://next/./dist/src/shared/lib/router/utils/sorted-routes.ts","webpack://next/./dist/src/server/route-matchers/route-matcher.ts","webpack://next/./dist/src/server/route-matchers/locale-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-managers/default-route-matcher-manager.ts","webpack://next/./dist/src/server/normalizers/normalizers.ts","webpack://next/./dist/src/server/normalizers/prefixing-normalizer.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-page-path.ts","webpack://next/./dist/src/server/normalizers/built/app/app-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-filename-normalizer.ts","webpack://next/./dist/src/server/normalizers/wrap-normalizer-fn.ts","webpack://next/./dist/src/lib/page-types.ts","webpack://next/./dist/src/server/normalizers/underscore-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-pathname-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/index.ts","webpack://next/./dist/src/server/route-kind.ts","webpack://next/./dist/src/server/route-matchers/app-page-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/cached-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/manifest-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/app-page-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-app-page-route.ts","webpack://next/./dist/src/server/route-matchers/app-route-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/app-route-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-app-route-route.ts","webpack://next/./dist/src/lib/is-api-route.ts","webpack://next/./dist/src/server/route-matchers/pages-api-route-matcher.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-filename-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/index.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-api-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matchers/pages-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.ts","webpack://next/./dist/src/server/lib/i18n-provider.ts","webpack://next/./dist/src/server/send-response.ts","webpack://next/external commonjs \"next/dist/client/components/static-generation-async-storage.external.js\"","webpack://next/./dist/src/server/web/spec-extension/adapters/request-cookies.ts","webpack://next/./dist/src/server/lib/match-next-data-pathname.ts","webpack://next/./dist/src/server/normalizers/request/suffix.ts","webpack://next/./dist/src/server/normalizers/request/rsc.ts","webpack://next/./dist/src/server/normalizers/request/prefix.ts","webpack://next/./dist/src/server/normalizers/request/postponed.ts","webpack://next/./dist/src/server/normalizers/request/action.ts","webpack://next/./dist/src/server/app-render/strip-flight-headers.ts","webpack://next/./dist/src/server/route-modules/checks.ts","webpack://next/./dist/src/server/normalizers/request/prefetch-rsc.ts","webpack://next/./dist/src/server/normalizers/request/next-data.ts","webpack://next/./dist/src/server/lib/to-route.ts","webpack://next/./dist/src/server/after/builtin-request-context.ts","webpack://next/./dist/src/server/base-server.ts","webpack://next/./dist/src/shared/lib/router/utils/get-route-from-asset-path.ts","webpack://next/./dist/src/server/lib/format-hostname.ts","webpack://next/./dist/src/server/lib/experimental/ppr.ts","webpack://next/./dist/src/server/lib/patch-set-header.ts","webpack://next/./dist/src/server/server-utils.ts","webpack://next/./dist/src/server/utils.ts","webpack://next/./dist/src/lib/is-edge-runtime.ts","webpack://next/./dist/src/server/lib/server-action-request-meta.ts","webpack://next/./dist/src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://next/./dist/src/server/route-modules/helpers/response-handlers.ts","webpack://next/./dist/src/lib/redirect-status.ts","webpack://next/external node-commonjs \"vm\"","webpack://next/./dist/src/shared/lib/deep-freeze.ts","webpack://next/./dist/src/server/load-manifest.ts","webpack://next/./dist/src/server/require.ts","webpack://next/./dist/src/lib/interop-default.ts","webpack://next/./dist/src/lib/wait.ts","webpack://next/./dist/src/server/app-render/encryption-utils.ts","webpack://next/./dist/src/server/load-components.ts","webpack://next/./dist/src/server/app-render/action-utils.ts","webpack://next/external node-commonjs \"stream\"","webpack://next/./dist/src/lib/batcher.ts","webpack://next/./dist/src/lib/scheduler.ts","webpack://next/./dist/src/server/response-cache/utils.ts","webpack://next/./dist/src/server/response-cache/index.ts","webpack://next/./dist/src/server/lib/incremental-cache/shared-revalidate-timings.ts","webpack://next/./dist/src/server/lib/incremental-cache/index.ts","webpack://next/external node-commonjs \"http\"","webpack://next/external node-commonjs \"https\"","webpack://next/./dist/src/server/lib/node-fs-methods.ts","webpack://next/./dist/src/server/lib/mock-request.ts","webpack://next/./dist/src/server/lib/module-loader/node-module-loader.ts","webpack://next/./dist/src/server/lib/module-loader/route-module-loader.ts","webpack://next/./dist/src/lib/format-dynamic-import-path.ts","webpack://next/./dist/src/lib/generate-interception-routes-rewrites.ts","webpack://next/./dist/src/server/next-server.ts","webpack://next/./dist/src/server/route-matches/pages-api-route-match.ts","webpack://next/./dist/src/server/setup-http-agent-env.ts","webpack://next/./dist/src/shared/lib/router/utils/middleware-route-matcher.ts","webpack://next/./dist/src/server/body-streams.ts"],"sourcesContent":["(()=>{var e={383:e=>{\"use strict\";function _searchLast(e,t){const n=Array.from(e.matchAll(t));return n.length>0?n.slice(-1)[0].index:-1}function _interpolate(e,t,n){const r=_searchLast(e,/(?!(?<=\\\\))\\$/g);if(r===-1)return e;const o=e.slice(r);const s=/((?!(?<=\\\\))\\${?([\\w]+)(?::-([^}\\\\]*))?}?)/;const i=o.match(s);if(i!=null){const[,r,o,s]=i;return _interpolate(e.replace(r,t[o]||s||n.parsed[o]||\"\"),t,n)}return e}function _resolveEscapeSequences(e){return e.replace(/\\\\\\$/g,\"$\")}function expand(e){const t=e.ignoreProcessEnv?{}:process.env;for(const n in e.parsed){const r=Object.prototype.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=_resolveEscapeSequences(_interpolate(r,t,e))}for(const n in e.parsed){t[n]=e.parsed[n]}return e}e.exports.j=expand},234:(e,t,n)=>{const r=n(147);const o=n(17);const s=n(37);const i=n(113);const c=n(803);const a=c.version;const l=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let n=e.toString();n=n.replace(/\\r\\n?/gm,\"\\n\");let r;while((r=l.exec(n))!=null){const e=r[1];let n=r[2]||\"\";n=n.trim();const o=n[0];n=n.replace(/^(['\"`])([\\s\\S]*)\\1$/gm,\"$2\");if(o==='\"'){n=n.replace(/\\\\n/g,\"\\n\");n=n.replace(/\\\\r/g,\"\\r\")}t[e]=n}return t}function _parseVault(e){const t=_vaultPath(e);const n=p.configDotenv({path:t});if(!n.parsed){throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`)}const r=_dotenvKey(e).split(\",\");const o=r.length;let s;for(let e=0;e<o;e++){try{const t=r[e].trim();const o=_instructions(n,t);s=p.decrypt(o.ciphertext,o.key);break}catch(t){if(e+1>=o){throw t}}}return p.parse(s)}function _log(e){console.log(`[dotenv@${a}][INFO] ${e}`)}function _warn(e){console.log(`[dotenv@${a}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return\"\"}function _instructions(e,t){let n;try{n=new URL(t)}catch(e){if(e.code===\"ERR_INVALID_URL\"){throw new Error(\"INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development\")}throw e}const r=n.password;if(!r){throw new Error(\"INVALID_DOTENV_KEY: Missing key part\")}const o=n.searchParams.get(\"environment\");if(!o){throw new Error(\"INVALID_DOTENV_KEY: Missing environment part\")}const s=`DOTENV_VAULT_${o.toUpperCase()}`;const i=e.parsed[s];if(!i){throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`)}return{ciphertext:i,key:r}}function _vaultPath(e){let t=o.resolve(process.cwd(),\".env\");if(e&&e.path&&e.path.length>0){t=e.path}return t.endsWith(\".vault\")?t:`${t}.vault`}function _resolveHome(e){return e[0]===\"~\"?o.join(s.homedir(),e.slice(1)):e}function _configVault(e){_log(\"Loading env from encrypted .env.vault\");const t=p._parseVault(e);let n=process.env;if(e&&e.processEnv!=null){n=e.processEnv}p.populate(n,t,e);return{parsed:t}}function configDotenv(e){let t=o.resolve(process.cwd(),\".env\");let n=\"utf8\";const s=Boolean(e&&e.debug);if(e){if(e.path!=null){t=_resolveHome(e.path)}if(e.encoding!=null){n=e.encoding}}try{const o=p.parse(r.readFileSync(t,{encoding:n}));let s=process.env;if(e&&e.processEnv!=null){s=e.processEnv}p.populate(s,o,e);return{parsed:o}}catch(e){if(s){_debug(`Failed to load ${t} ${e.message}`)}return{error:e}}}function config(e){const t=_vaultPath(e);if(_dotenvKey(e).length===0){return p.configDotenv(e)}if(!r.existsSync(t)){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return p.configDotenv(e)}return p._configVault(e)}function decrypt(e,t){const n=Buffer.from(t.slice(-64),\"hex\");let r=Buffer.from(e,\"base64\");const o=r.slice(0,12);const s=r.slice(-16);r=r.slice(12,-16);try{const e=i.createDecipheriv(\"aes-256-gcm\",n,o);e.setAuthTag(s);return`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError;const n=e.message===\"Invalid key length\";const r=e.message===\"Unsupported state or unable to authenticate data\";if(t||n){const e=\"INVALID_DOTENV_KEY: It must be 64 characters long (or more)\";throw new Error(e)}else if(r){const e=\"DECRYPTION_FAILED: Please check your DOTENV_KEY\";throw new Error(e)}else{console.error(\"Error: \",e.code);console.error(\"Error: \",e.message);throw e}}}function populate(e,t,n={}){const r=Boolean(n&&n.debug);const o=Boolean(n&&n.override);if(typeof t!==\"object\"){throw new Error(\"OBJECT_REQUIRED: Please check the processEnv argument being passed to populate\")}for(const n of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,n)){if(o===true){e[n]=t[n]}if(r){if(o===true){_debug(`\"${n}\" is already defined and WAS overwritten`)}else{_debug(`\"${n}\" is already defined and was NOT overwritten`)}}}else{e[n]=t[n]}}}const p={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=p.configDotenv;e.exports._configVault=p._configVault;e.exports._parseVault=p._parseVault;e.exports.config=p.config;e.exports.decrypt=p.decrypt;e.exports.parse=p.parse;e.exports.populate=p.populate;e.exports=p},113:e=>{\"use strict\";e.exports=require(\"crypto\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},803:e=>{\"use strict\";e.exports=JSON.parse('{\"name\":\"dotenv\",\"version\":\"16.3.1\",\"description\":\"Loads environment variables from .env file\",\"main\":\"lib/main.js\",\"types\":\"lib/main.d.ts\",\"exports\":{\".\":{\"types\":\"./lib/main.d.ts\",\"require\":\"./lib/main.js\",\"default\":\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},\"scripts\":{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",\"lint\":\"standard\",\"lint-readme\":\"standard-markdown\",\"pretest\":\"npm run lint && npm run dts-check\",\"test\":\"tap tests/*.js --100 -Rspec\",\"prerelease\":\"npm test\",\"release\":\"standard-version\"},\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/motdotla/dotenv.git\"},\"funding\":\"https://github.com/motdotla/dotenv?sponsor=1\",\"keywords\":[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],\"readmeFilename\":\"README.md\",\"license\":\"BSD-2-Clause\",\"devDependencies\":{\"@definitelytyped/dtslint\":\"^0.0.133\",\"@types/node\":\"^18.11.3\",\"decache\":\"^4.6.1\",\"sinon\":\"^14.0.1\",\"standard\":\"^17.0.0\",\"standard-markdown\":\"^7.1.0\",\"standard-version\":\"^9.5.0\",\"tap\":\"^16.3.0\",\"tar\":\"^6.1.11\",\"typescript\":\"^4.8.4\"},\"engines\":{\"node\":\">=12\"},\"browser\":{\"fs\":false}}')}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}(()=>{__nccwpck_require__.n=e=>{var t=e&&e.__esModule?()=>e[\"default\"]:()=>e;__nccwpck_require__.d(t,{a:t});return t}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var n in t){if(__nccwpck_require__.o(t,n)&&!__nccwpck_require__.o(e,n)){Object.defineProperty(e,n,{enumerable:true,get:t[n]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!==\"undefined\"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"})}Object.defineProperty(e,\"__esModule\",{value:true})}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{\"use strict\";__nccwpck_require__.r(n);__nccwpck_require__.d(n,{initialEnv:()=>a,updateInitialEnv:()=>updateInitialEnv,processEnv:()=>processEnv,resetEnv:()=>resetEnv,loadEnvConfig:()=>loadEnvConfig});var e=__nccwpck_require__(147);var t=__nccwpck_require__.n(e);var r=__nccwpck_require__(17);var o=__nccwpck_require__.n(r);var s=__nccwpck_require__(234);var i=__nccwpck_require__.n(s);var c=__nccwpck_require__(383);let a=undefined;let l=undefined;let p=[];let u=[];function updateInitialEnv(e){Object.assign(a||{},e)}function replaceProcessEnv(e){Object.keys(process.env).forEach((t=>{if(!t.startsWith(\"__NEXT_PRIVATE\")){if(e[t]===undefined||e[t]===\"\"){delete process.env[t]}}}));Object.entries(e).forEach((([e,t])=>{process.env[e]=t}))}function processEnv(e,t,n=console,o=false,i){var l;if(!a){a=Object.assign({},process.env)}if(!o&&(process.env.__NEXT_PROCESSED_ENV||e.length===0)){return process.env}process.env.__NEXT_PROCESSED_ENV=\"true\";const p=Object.assign({},a);const _={};for(const o of e){try{let e={};e.parsed=s.parse(o.contents);e=(0,c.j)(e);if(e.parsed&&!u.some((e=>e.contents===o.contents&&e.path===o.path))){i===null||i===void 0?void 0:i(o.path)}for(const t of Object.keys(e.parsed||{})){if(typeof _[t]===\"undefined\"&&typeof p[t]===\"undefined\"){_[t]=(l=e.parsed)===null||l===void 0?void 0:l[t]}}}catch(e){n.error(`Failed to load env from ${r.join(t||\"\",o.path)}`,e)}}return Object.assign(process.env,_)}function resetEnv(){if(a){replaceProcessEnv(a)}}function loadEnvConfig(t,n,o=console,s=false,i){if(!a){a=Object.assign({},process.env)}if(l&&!s){return{combinedEnv:l,loadedEnvFiles:p}}replaceProcessEnv(a);u=p;p=[];const c=process.env.NODE_ENV===\"test\";const _=c?\"test\":n?\"development\":\"production\";const d=[`.env.${_}.local`,_!==\"test\"&&`.env.local`,`.env.${_}`,\".env\"].filter(Boolean);for(const n of d){const s=r.join(t,n);try{const t=e.statSync(s);if(!t.isFile()){continue}const r=e.readFileSync(s,\"utf8\");p.push({path:n,contents:r})}catch(e){if(e.code!==\"ENOENT\"){o.error(`Failed to load env from ${n}`,e)}}}l=processEnv(p,t,o,s,i);return{combinedEnv:l,loadedEnvFiles:p}}})();module.exports=n})();","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\n    return this.set({ name, path, domain, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","(()=>{\"use strict\";var t={806:(t,e,i)=>{const s=i(190);const n=Symbol(\"max\");const l=Symbol(\"length\");const r=Symbol(\"lengthCalculator\");const h=Symbol(\"allowStale\");const a=Symbol(\"maxAge\");const o=Symbol(\"dispose\");const u=Symbol(\"noDisposeOnSet\");const f=Symbol(\"lruList\");const p=Symbol(\"cache\");const v=Symbol(\"updateAgeOnGet\");const naiveLength=()=>1;class LRUCache{constructor(t){if(typeof t===\"number\")t={max:t};if(!t)t={};if(t.max&&(typeof t.max!==\"number\"||t.max<0))throw new TypeError(\"max must be a non-negative number\");const e=this[n]=t.max||Infinity;const i=t.length||naiveLength;this[r]=typeof i!==\"function\"?naiveLength:i;this[h]=t.stale||false;if(t.maxAge&&typeof t.maxAge!==\"number\")throw new TypeError(\"maxAge must be a number\");this[a]=t.maxAge||0;this[o]=t.dispose;this[u]=t.noDisposeOnSet||false;this[v]=t.updateAgeOnGet||false;this.reset()}set max(t){if(typeof t!==\"number\"||t<0)throw new TypeError(\"max must be a non-negative number\");this[n]=t||Infinity;trim(this)}get max(){return this[n]}set allowStale(t){this[h]=!!t}get allowStale(){return this[h]}set maxAge(t){if(typeof t!==\"number\")throw new TypeError(\"maxAge must be a non-negative number\");this[a]=t;trim(this)}get maxAge(){return this[a]}set lengthCalculator(t){if(typeof t!==\"function\")t=naiveLength;if(t!==this[r]){this[r]=t;this[l]=0;this[f].forEach((t=>{t.length=this[r](t.value,t.key);this[l]+=t.length}))}trim(this)}get lengthCalculator(){return this[r]}get length(){return this[l]}get itemCount(){return this[f].length}rforEach(t,e){e=e||this;for(let i=this[f].tail;i!==null;){const s=i.prev;forEachStep(this,t,i,e);i=s}}forEach(t,e){e=e||this;for(let i=this[f].head;i!==null;){const s=i.next;forEachStep(this,t,i,e);i=s}}keys(){return this[f].toArray().map((t=>t.key))}values(){return this[f].toArray().map((t=>t.value))}reset(){if(this[o]&&this[f]&&this[f].length){this[f].forEach((t=>this[o](t.key,t.value)))}this[p]=new Map;this[f]=new s;this[l]=0}dump(){return this[f].map((t=>isStale(this,t)?false:{k:t.key,v:t.value,e:t.now+(t.maxAge||0)})).toArray().filter((t=>t))}dumpLru(){return this[f]}set(t,e,i){i=i||this[a];if(i&&typeof i!==\"number\")throw new TypeError(\"maxAge must be a number\");const s=i?Date.now():0;const h=this[r](e,t);if(this[p].has(t)){if(h>this[n]){del(this,this[p].get(t));return false}const r=this[p].get(t);const a=r.value;if(this[o]){if(!this[u])this[o](t,a.value)}a.now=s;a.maxAge=i;a.value=e;this[l]+=h-a.length;a.length=h;this.get(t);trim(this);return true}const v=new Entry(t,e,h,s,i);if(v.length>this[n]){if(this[o])this[o](t,e);return false}this[l]+=v.length;this[f].unshift(v);this[p].set(t,this[f].head);trim(this);return true}has(t){if(!this[p].has(t))return false;const e=this[p].get(t).value;return!isStale(this,e)}get(t){return get(this,t,true)}peek(t){return get(this,t,false)}pop(){const t=this[f].tail;if(!t)return null;del(this,t);return t.value}del(t){del(this,this[p].get(t))}load(t){this.reset();const e=Date.now();for(let i=t.length-1;i>=0;i--){const s=t[i];const n=s.e||0;if(n===0)this.set(s.k,s.v);else{const t=n-e;if(t>0){this.set(s.k,s.v,t)}}}}prune(){this[p].forEach(((t,e)=>get(this,e,false)))}}const get=(t,e,i)=>{const s=t[p].get(e);if(s){const e=s.value;if(isStale(t,e)){del(t,s);if(!t[h])return undefined}else{if(i){if(t[v])s.value.now=Date.now();t[f].unshiftNode(s)}}return e.value}};const isStale=(t,e)=>{if(!e||!e.maxAge&&!t[a])return false;const i=Date.now()-e.now;return e.maxAge?i>e.maxAge:t[a]&&i>t[a]};const trim=t=>{if(t[l]>t[n]){for(let e=t[f].tail;t[l]>t[n]&&e!==null;){const i=e.prev;del(t,e);e=i}}};const del=(t,e)=>{if(e){const i=e.value;if(t[o])t[o](i.key,i.value);t[l]-=i.length;t[p].delete(i.key);t[f].removeNode(e)}};class Entry{constructor(t,e,i,s,n){this.key=t;this.value=e;this.length=i;this.now=s;this.maxAge=n||0}}const forEachStep=(t,e,i,s)=>{let n=i.value;if(isStale(t,n)){del(t,i);if(!t[h])n=undefined}if(n)e.call(s,n.value,n.key,t)};t.exports=LRUCache},76:t=>{t.exports=function(t){t.prototype[Symbol.iterator]=function*(){for(let t=this.head;t;t=t.next){yield t.value}}}},190:(t,e,i)=>{t.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;function Yallist(t){var e=this;if(!(e instanceof Yallist)){e=new Yallist}e.tail=null;e.head=null;e.length=0;if(t&&typeof t.forEach===\"function\"){t.forEach((function(t){e.push(t)}))}else if(arguments.length>0){for(var i=0,s=arguments.length;i<s;i++){e.push(arguments[i])}}return e}Yallist.prototype.removeNode=function(t){if(t.list!==this){throw new Error(\"removing node which does not belong to this list\")}var e=t.next;var i=t.prev;if(e){e.prev=i}if(i){i.next=e}if(t===this.head){this.head=e}if(t===this.tail){this.tail=i}t.list.length--;t.next=null;t.prev=null;t.list=null;return e};Yallist.prototype.unshiftNode=function(t){if(t===this.head){return}if(t.list){t.list.removeNode(t)}var e=this.head;t.list=this;t.next=e;if(e){e.prev=t}this.head=t;if(!this.tail){this.tail=t}this.length++};Yallist.prototype.pushNode=function(t){if(t===this.tail){return}if(t.list){t.list.removeNode(t)}var e=this.tail;t.list=this;t.prev=e;if(e){e.next=t}this.tail=t;if(!this.head){this.head=t}this.length++};Yallist.prototype.push=function(){for(var t=0,e=arguments.length;t<e;t++){push(this,arguments[t])}return this.length};Yallist.prototype.unshift=function(){for(var t=0,e=arguments.length;t<e;t++){unshift(this,arguments[t])}return this.length};Yallist.prototype.pop=function(){if(!this.tail){return undefined}var t=this.tail.value;this.tail=this.tail.prev;if(this.tail){this.tail.next=null}else{this.head=null}this.length--;return t};Yallist.prototype.shift=function(){if(!this.head){return undefined}var t=this.head.value;this.head=this.head.next;if(this.head){this.head.prev=null}else{this.tail=null}this.length--;return t};Yallist.prototype.forEach=function(t,e){e=e||this;for(var i=this.head,s=0;i!==null;s++){t.call(e,i.value,s,this);i=i.next}};Yallist.prototype.forEachReverse=function(t,e){e=e||this;for(var i=this.tail,s=this.length-1;i!==null;s--){t.call(e,i.value,s,this);i=i.prev}};Yallist.prototype.get=function(t){for(var e=0,i=this.head;i!==null&&e<t;e++){i=i.next}if(e===t&&i!==null){return i.value}};Yallist.prototype.getReverse=function(t){for(var e=0,i=this.tail;i!==null&&e<t;e++){i=i.prev}if(e===t&&i!==null){return i.value}};Yallist.prototype.map=function(t,e){e=e||this;var i=new Yallist;for(var s=this.head;s!==null;){i.push(t.call(e,s.value,this));s=s.next}return i};Yallist.prototype.mapReverse=function(t,e){e=e||this;var i=new Yallist;for(var s=this.tail;s!==null;){i.push(t.call(e,s.value,this));s=s.prev}return i};Yallist.prototype.reduce=function(t,e){var i;var s=this.head;if(arguments.length>1){i=e}else if(this.head){s=this.head.next;i=this.head.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var n=0;s!==null;n++){i=t(i,s.value,n);s=s.next}return i};Yallist.prototype.reduceReverse=function(t,e){var i;var s=this.tail;if(arguments.length>1){i=e}else if(this.tail){s=this.tail.prev;i=this.tail.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var n=this.length-1;s!==null;n--){i=t(i,s.value,n);s=s.prev}return i};Yallist.prototype.toArray=function(){var t=new Array(this.length);for(var e=0,i=this.head;i!==null;e++){t[e]=i.value;i=i.next}return t};Yallist.prototype.toArrayReverse=function(){var t=new Array(this.length);for(var e=0,i=this.tail;i!==null;e++){t[e]=i.value;i=i.prev}return t};Yallist.prototype.slice=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var i=new Yallist;if(e<t||e<0){return i}if(t<0){t=0}if(e>this.length){e=this.length}for(var s=0,n=this.head;n!==null&&s<t;s++){n=n.next}for(;n!==null&&s<e;s++,n=n.next){i.push(n.value)}return i};Yallist.prototype.sliceReverse=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var i=new Yallist;if(e<t||e<0){return i}if(t<0){t=0}if(e>this.length){e=this.length}for(var s=this.length,n=this.tail;n!==null&&s>e;s--){n=n.prev}for(;n!==null&&s>t;s--,n=n.prev){i.push(n.value)}return i};Yallist.prototype.splice=function(t,e){if(t>this.length){t=this.length-1}if(t<0){t=this.length+t}for(var i=0,s=this.head;s!==null&&i<t;i++){s=s.next}var n=[];for(var i=0;s&&i<e;i++){n.push(s.value);s=this.removeNode(s)}if(s===null){s=this.tail}if(s!==this.head&&s!==this.tail){s=s.prev}for(var i=2;i<arguments.length;i++){s=insert(this,s,arguments[i])}return n};Yallist.prototype.reverse=function(){var t=this.head;var e=this.tail;for(var i=t;i!==null;i=i.prev){var s=i.prev;i.prev=i.next;i.next=s}this.head=e;this.tail=t;return this};function insert(t,e,i){var s=e===t.head?new Node(i,null,e,t):new Node(i,e,e.next,t);if(s.next===null){t.tail=s}if(s.prev===null){t.head=s}t.length++;return s}function push(t,e){t.tail=new Node(e,t.tail,null,t);if(!t.head){t.head=t.tail}t.length++}function unshift(t,e){t.head=new Node(e,null,t.head,t);if(!t.tail){t.tail=t.head}t.length++}function Node(t,e,i,s){if(!(this instanceof Node)){return new Node(t,e,i,s)}this.list=s;this.value=t;if(e){e.next=this;this.prev=e}else{this.prev=null}if(i){i.prev=this;this.next=i}else{this.next=null}}try{i(76)(Yallist)}catch(t){}}};var e={};function __nccwpck_require__(i){var s=e[i];if(s!==undefined){return s.exports}var n=e[i]={exports:{}};var l=true;try{t[i](n,n.exports,__nccwpck_require__);l=false}finally{if(l)delete e[i]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var i=__nccwpck_require__(806);module.exports=i})();","/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\" } = options;\n  const defaultPattern = `[^${escapeString(options.delimiter || \"/#?\")}]+?`;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    // tslint:disable-next-line\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {}\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map(token => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {}\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function(pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      // tslint:disable-next-line\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(value => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  // Use a negative lookahead to match only capturing groups.\n  const groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (let i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: \"\",\n        suffix: \"\",\n        modifier: \"\",\n        pattern: \"\"\n      });\n    }\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  const parts = paths.map(path => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp allows an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x\n  } = options;\n  const endsWith = `[${escapeString(options.endsWith || \"\")}]|$`;\n  const delimiter = `[${escapeString(options.delimiter || \"/#?\")}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiter}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWith})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n        : // tslint:disable-next-line\n          endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiter}(?=${endsWith}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiter}|${endsWith})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n","import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 64\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The layer for the API routes.\n   */\n  api: 'api',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The server bundle layer for metadata routes.\n   */\n  appMetadataRoute: 'app-metadata-route',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.appMetadataRoute,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.appMetadataRoute,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.api,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.appMetadataRoute,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().getRootSpanAttributes()?.set('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextApiResponse } from '../../../shared/lib/utils'\nimport { checkIsOnDemandRevalidate } from '../.'\nimport type { __ApiPreviewProps } from '../.'\nimport type { BaseNextRequest, BaseNextResponse } from '../../base-http'\nimport type { PreviewData } from '../../../types'\n\nimport {\n  clearPreviewData,\n  COOKIE_NAME_PRERENDER_BYPASS,\n  COOKIE_NAME_PRERENDER_DATA,\n  SYMBOL_PREVIEW_DATA,\n} from '../index'\nimport { RequestCookies } from '../../web/spec-extension/cookies'\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers'\n\nexport function tryGetPreviewData(\n  req: IncomingMessage | BaseNextRequest | Request,\n  res: ServerResponse | BaseNextResponse,\n  options: __ApiPreviewProps\n): PreviewData {\n  // if an On-Demand revalidation is being done preview mode\n  // is disabled\n  if (options && checkIsOnDemandRevalidate(req, options).isOnDemandRevalidate) {\n    return false\n  }\n\n  // Read cached preview data if present\n  // TODO: use request metadata instead of a symbol\n  if (SYMBOL_PREVIEW_DATA in req) {\n    return (req as any)[SYMBOL_PREVIEW_DATA] as any\n  }\n\n  const headers = HeadersAdapter.from(req.headers)\n  const cookies = new RequestCookies(headers)\n\n  const previewModeId = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)?.value\n  const tokenPreviewData = cookies.get(COOKIE_NAME_PRERENDER_DATA)?.value\n\n  // Case: preview mode cookie set but data cookie is not set\n  if (\n    previewModeId &&\n    !tokenPreviewData &&\n    previewModeId === options.previewModeId\n  ) {\n    // This is \"Draft Mode\" which doesn't use\n    // previewData, so we return an empty object\n    // for backwards compat with \"Preview Mode\".\n    const data = {}\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  }\n\n  // Case: neither cookie is set.\n  if (!previewModeId && !tokenPreviewData) {\n    return false\n  }\n\n  // Case: one cookie is set, but not the other.\n  if (!previewModeId || !tokenPreviewData) {\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  // Case: preview session is for an old build.\n  if (previewModeId !== options.previewModeId) {\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  let encryptedPreviewData: {\n    data: string\n  }\n  try {\n    const jsonwebtoken =\n      require('next/dist/compiled/jsonwebtoken') as typeof import('next/dist/compiled/jsonwebtoken')\n    encryptedPreviewData = jsonwebtoken.verify(\n      tokenPreviewData,\n      options.previewModeSigningKey\n    ) as typeof encryptedPreviewData\n  } catch {\n    // TODO: warn\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  const { decryptWithSecret } =\n    require('../../crypto-utils') as typeof import('../../crypto-utils')\n  const decryptedPreviewData = decryptWithSecret(\n    Buffer.from(options.previewModeEncryptionKey),\n    encryptedPreviewData.data\n  )\n\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData)\n    // Cache lookup\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  } catch {\n    return false\n  }\n}\n","import crypto from 'crypto'\n\n// Background:\n// https://security.stackexchange.com/questions/184305/why-would-i-ever-use-aes-256-cbc-if-aes-256-gcm-is-more-secure\n\nconst CIPHER_ALGORITHM = `aes-256-gcm`,\n  CIPHER_KEY_LENGTH = 32, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_IV_LENGTH = 16, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_TAG_LENGTH = 16,\n  CIPHER_SALT_LENGTH = 64\n\nconst PBKDF2_ITERATIONS = 100_000 // https://support.1password.com/pbkdf2/\n\nexport function encryptWithSecret(secret: Buffer, data: string): string {\n  const iv = crypto.randomBytes(CIPHER_IV_LENGTH)\n  const salt = crypto.randomBytes(CIPHER_SALT_LENGTH)\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const cipher = crypto.createCipheriv(CIPHER_ALGORITHM, key, iv)\n  const encrypted = Buffer.concat([cipher.update(data, `utf8`), cipher.final()])\n\n  // https://nodejs.org/api/crypto.html#crypto_cipher_getauthtag\n  const tag = cipher.getAuthTag()\n\n  return Buffer.concat([\n    // Data as required by:\n    // Salt for Key: https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n    // IV: https://nodejs.org/api/crypto.html#crypto_class_decipher\n    // Tag: https://nodejs.org/api/crypto.html#crypto_decipher_setauthtag_buffer\n    salt,\n    iv,\n    tag,\n    encrypted,\n  ]).toString(`hex`)\n}\n\nexport function decryptWithSecret(\n  secret: Buffer,\n  encryptedData: string\n): string {\n  const buffer = Buffer.from(encryptedData, `hex`)\n\n  const salt = buffer.slice(0, CIPHER_SALT_LENGTH)\n  const iv = buffer.slice(\n    CIPHER_SALT_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH\n  )\n  const tag = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n  const encrypted = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const decipher = crypto.createDecipheriv(CIPHER_ALGORITHM, key, iv)\n  decipher.setAuthTag(tag)\n\n  return decipher.update(encrypted) + decipher.final(`utf8`)\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","// This file should be imported before any others. It sets up the environment\n// for later imports to work properly.\n\n// expose AsyncLocalStorage on global for react usage if it isn't already provided by the environment\nif (typeof (globalThis as any).AsyncLocalStorage !== 'function') {\n  const { AsyncLocalStorage } = require('async_hooks')\n  ;(globalThis as any).AsyncLocalStorage = AsyncLocalStorage\n}\n\nif (typeof (globalThis as any).WebSocket !== 'function') {\n  Object.defineProperty(globalThis, 'WebSocket', {\n    get() {\n      return require('next/dist/compiled/ws').WebSocket\n    },\n  })\n}\n","// Polyfill crypto() in the Node.js environment\n\nif (!global.crypto) {\n  let webcrypto: Crypto | undefined\n\n  Object.defineProperty(global, 'crypto', {\n    enumerable: false,\n    configurable: true,\n    get() {\n      if (!webcrypto) {\n        webcrypto = require('node:crypto').webcrypto\n      }\n      return webcrypto\n    },\n    set(value: Crypto) {\n      webcrypto = value\n    },\n  })\n}\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): IterableIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): IterableIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): IterableIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): IterableIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./dist/esm/server sync recursive\";\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/server/lib/trace/tracer\");","module.exports = require(\"next/dist/compiled/jsonwebtoken\");","module.exports = require(\"next/dist/compiled/node-html-parser\");","module.exports = require(\"next/dist/compiled/ws\");","module.exports = require(\"next/dist/server/web/sandbox\");","module.exports = require(\"async_hooks\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"node:crypto\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport type { IncrementalCacheValue } from '../../response-cache'\n\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport {\n  CACHE_ONE_YEAR,\n  NEXT_CACHE_SOFT_TAGS_HEADER,\n} from '../../../lib/constants'\n\nlet rateLimitedUntil = 0\nlet memoryCache: LRUCache<string, CacheHandlerValue> | undefined\n\ninterface NextFetchCacheParams {\n  internal?: boolean\n  fetchType?: string\n  fetchIdx?: number\n  fetchUrl?: string\n}\n\nconst CACHE_TAGS_HEADER = 'x-vercel-cache-tags' as const\nconst CACHE_HEADERS_HEADER = 'x-vercel-sc-headers' as const\nconst CACHE_STATE_HEADER = 'x-vercel-cache-state' as const\nconst CACHE_REVALIDATE_HEADER = 'x-vercel-revalidate' as const\nconst CACHE_FETCH_URL_HEADER = 'x-vercel-cache-item-name' as const\nconst CACHE_CONTROL_VALUE_HEADER = 'x-vercel-cache-control' as const\n\nconst DEBUG = Boolean(process.env.NEXT_PRIVATE_DEBUG_CACHE)\n\nasync function fetchRetryWithTimeout(\n  url: Parameters<typeof fetch>[0],\n  init: Parameters<typeof fetch>[1],\n  retryIndex = 0\n): Promise<Response> {\n  const controller = new AbortController()\n  const timeout = setTimeout(() => {\n    controller.abort()\n  }, 500)\n\n  return fetch(url, {\n    ...(init || {}),\n    signal: controller.signal,\n  })\n    .catch((err) => {\n      if (retryIndex === 3) {\n        throw err\n      } else {\n        if (DEBUG) {\n          console.log(`Fetch failed for ${url} retry ${retryIndex}`)\n        }\n        return fetchRetryWithTimeout(url, init, retryIndex + 1)\n      }\n    })\n    .finally(() => {\n      clearTimeout(timeout)\n    })\n}\n\nexport default class FetchCache implements CacheHandler {\n  private headers: Record<string, string>\n  private cacheEndpoint?: string\n\n  private hasMatchingTags(arr1: string[], arr2: string[]) {\n    if (arr1.length !== arr2.length) return false\n\n    const set1 = new Set(arr1)\n    const set2 = new Set(arr2)\n\n    if (set1.size !== set2.size) return false\n\n    for (let tag of set1) {\n      if (!set2.has(tag)) return false\n    }\n\n    return true\n  }\n\n  static isAvailable(ctx: {\n    _requestHeaders: CacheHandlerContext['_requestHeaders']\n  }) {\n    return !!(\n      ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL\n    )\n  }\n\n  constructor(ctx: CacheHandlerContext) {\n    this.headers = {}\n    this.headers['Content-Type'] = 'application/json'\n\n    if (CACHE_HEADERS_HEADER in ctx._requestHeaders) {\n      const newHeaders = JSON.parse(\n        ctx._requestHeaders[CACHE_HEADERS_HEADER] as string\n      )\n      for (const k in newHeaders) {\n        this.headers[k] = newHeaders[k]\n      }\n      delete ctx._requestHeaders[CACHE_HEADERS_HEADER]\n    }\n    const scHost =\n      ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL\n\n    const scBasePath =\n      ctx._requestHeaders['x-vercel-sc-basepath'] ||\n      process.env.SUSPENSE_CACHE_BASEPATH\n\n    if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {\n      this.headers['Authorization'] =\n        `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`\n    }\n\n    if (scHost) {\n      const scProto = process.env.SUSPENSE_CACHE_PROTO || 'https'\n      this.cacheEndpoint = `${scProto}://${scHost}${scBasePath || ''}`\n      if (DEBUG) {\n        console.log('using cache endpoint', this.cacheEndpoint)\n      }\n    } else if (DEBUG) {\n      console.log('no cache endpoint available')\n    }\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (DEBUG) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache({\n          max: ctx.maxMemoryCacheSize,\n          length({ value }) {\n            if (!value) {\n              return 25\n            } else if (value.kind === 'REDIRECT') {\n              return JSON.stringify(value.props).length\n            } else if (value.kind === 'IMAGE') {\n              throw new Error('invariant image should not be incremental-cache')\n            } else if (value.kind === 'FETCH') {\n              return JSON.stringify(value.data || '').length\n            } else if (value.kind === 'ROUTE') {\n              return value.body.length\n            }\n            // rough estimate of size of cache value\n            return (\n              value.html.length +\n              (JSON.stringify(\n                value.kind === 'APP_PAGE' ? value.rscData : value.pageData\n              )?.length || 0)\n            )\n          },\n        })\n      }\n    } else {\n      if (DEBUG) {\n        console.log('not using memory store for fetch cache')\n      }\n    }\n  }\n\n  public resetRequestCache(): void {\n    memoryCache?.reset()\n  }\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n    if (DEBUG) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (!tags.length) return\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited ', rateLimitedUntil)\n      }\n      return\n    }\n\n    try {\n      const res = await fetchRetryWithTimeout(\n        `${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${tags\n          .map((tag) => encodeURIComponent(tag))\n          .join(',')}`,\n        {\n          method: 'POST',\n          headers: this.headers,\n          // @ts-expect-error not on public type\n          next: { internal: true },\n        }\n      )\n\n      if (res.status === 429) {\n        const retryAfter = res.headers.get('retry-after') || '60000'\n        rateLimitedUntil = Date.now() + parseInt(retryAfter)\n      }\n\n      if (!res.ok) {\n        throw new Error(`Request failed with status ${res.status}.`)\n      }\n    } catch (err) {\n      console.warn(`Failed to revalidate tag ${tags}`, err)\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx = {}] = args\n    const { tags, softTags, kindHint, fetchIdx, fetchUrl } = ctx\n\n    if (kindHint !== 'fetch') {\n      return null\n    }\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited')\n      }\n      return null\n    }\n\n    // memory cache is cleared at the end of each request\n    // so that revalidate events are pulled from upstream\n    // on successive requests\n    let data = memoryCache?.get(key)\n\n    const hasFetchKindAndMatchingTags =\n      data?.value?.kind === 'FETCH' &&\n      this.hasMatchingTags(tags ?? [], data.value.tags ?? [])\n\n    // Get data from fetch cache. Also check if new tags have been\n    // specified with the same cache key (fetch URL)\n    if (this.cacheEndpoint && (!data || !hasFetchKindAndMatchingTags)) {\n      try {\n        const start = Date.now()\n        const fetchParams: NextFetchCacheParams = {\n          internal: true,\n          fetchType: 'cache-get',\n          fetchUrl: fetchUrl,\n          fetchIdx,\n        }\n        const res = await fetch(\n          `${this.cacheEndpoint}/v1/suspense-cache/${key}`,\n          {\n            method: 'GET',\n            headers: {\n              ...this.headers,\n              [CACHE_FETCH_URL_HEADER]: fetchUrl,\n              [CACHE_TAGS_HEADER]: tags?.join(',') || '',\n              [NEXT_CACHE_SOFT_TAGS_HEADER]: softTags?.join(',') || '',\n            } as any,\n            next: fetchParams as NextFetchRequestConfig,\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (res.status === 404) {\n          if (DEBUG) {\n            console.log(\n              `no fetch cache entry for ${key}, duration: ${\n                Date.now() - start\n              }ms`\n            )\n          }\n          return null\n        }\n\n        if (!res.ok) {\n          console.error(await res.text())\n          throw new Error(`invalid response from cache ${res.status}`)\n        }\n\n        const cached: IncrementalCacheValue = await res.json()\n\n        if (!cached || cached.kind !== 'FETCH') {\n          DEBUG && console.log({ cached })\n          throw new Error('invalid cache value')\n        }\n\n        // if new tags were specified, merge those tags to the existing tags\n        if (cached.kind === 'FETCH') {\n          cached.tags ??= []\n          for (const tag of tags ?? []) {\n            if (!cached.tags.includes(tag)) {\n              cached.tags.push(tag)\n            }\n          }\n        }\n\n        const cacheState = res.headers.get(CACHE_STATE_HEADER)\n        const age = res.headers.get('age')\n\n        data = {\n          value: cached,\n          // if it's already stale set it to a time in the past\n          // if not derive last modified from age\n          lastModified:\n            cacheState !== 'fresh'\n              ? Date.now() - CACHE_ONE_YEAR\n              : Date.now() - parseInt(age || '0', 10) * 1000,\n        }\n\n        if (DEBUG) {\n          console.log(\n            `got fetch cache entry for ${key}, duration: ${\n              Date.now() - start\n            }ms, size: ${\n              Object.keys(cached).length\n            }, cache-state: ${cacheState} tags: ${tags?.join(\n              ','\n            )} softTags: ${softTags?.join(',')}`\n          )\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch (err) {\n        // unable to get data from fetch-cache\n        if (DEBUG) {\n          console.error(`Failed to get from fetch-cache`, err)\n        }\n      }\n    }\n\n    return data || null\n  }\n\n  public async set(...args: Parameters<CacheHandler['set']>) {\n    const [key, data, ctx] = args\n\n    const newValue = data?.kind === 'FETCH' ? data.data : undefined\n    const existingCache = memoryCache?.get(key)\n    const existingValue = existingCache?.value\n    if (\n      existingValue?.kind === 'FETCH' &&\n      Object.keys(existingValue.data).every(\n        (field) =>\n          JSON.stringify(\n            (existingValue.data as Record<string, string | Object>)[field]\n          ) ===\n          JSON.stringify((newValue as Record<string, string | Object>)[field])\n      )\n    ) {\n      if (DEBUG) {\n        console.log(`skipping cache set for ${key} as not modified`)\n      }\n      return\n    }\n\n    const { fetchCache, fetchIdx, fetchUrl, tags } = ctx\n    if (!fetchCache) return\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited')\n      }\n      return\n    }\n\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (this.cacheEndpoint) {\n      try {\n        const start = Date.now()\n        if (data !== null && 'revalidate' in data) {\n          this.headers[CACHE_REVALIDATE_HEADER] = data.revalidate.toString()\n        }\n        if (\n          !this.headers[CACHE_REVALIDATE_HEADER] &&\n          data !== null &&\n          'data' in data\n        ) {\n          this.headers[CACHE_CONTROL_VALUE_HEADER] =\n            data.data.headers['cache-control']\n        }\n        const body = JSON.stringify({\n          ...data,\n          // we send the tags in the header instead\n          // of in the body here\n          tags: undefined,\n        })\n\n        if (DEBUG) {\n          console.log('set cache', key)\n        }\n        const fetchParams: NextFetchCacheParams = {\n          internal: true,\n          fetchType: 'cache-set',\n          fetchUrl,\n          fetchIdx,\n        }\n        const res = await fetch(\n          `${this.cacheEndpoint}/v1/suspense-cache/${key}`,\n          {\n            method: 'POST',\n            headers: {\n              ...this.headers,\n              [CACHE_FETCH_URL_HEADER]: fetchUrl || '',\n              [CACHE_TAGS_HEADER]: tags?.join(',') || '',\n            },\n            body: body,\n            next: fetchParams as NextFetchRequestConfig,\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (!res.ok) {\n          DEBUG && console.log(await res.text())\n          throw new Error(`invalid response ${res.status}`)\n        }\n\n        if (DEBUG) {\n          console.log(\n            `successfully set to fetch-cache for ${key}, duration: ${\n              Date.now() - start\n            }ms, size: ${body.length}`\n          )\n        }\n      } catch (err) {\n        // unable to set to fetch-cache\n        if (DEBUG) {\n          console.error(`Failed to update fetch cache`, err)\n        }\n      }\n    }\n    return\n  }\n}\n","import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport type { CachedFetchValue } from '../../response-cache'\n\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\ntype TagsManifest = {\n  version: 1\n  items: { [tag: string]: { revalidatedAt: number } }\n}\nlet memoryCache: LRUCache<string, CacheHandlerValue> | undefined\nlet tagsManifest: TagsManifest | undefined\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private appDir: boolean\n  private pagesDir: boolean\n  private tagsManifestPath?: string\n  private revalidatedTags: string[]\n  private debug: boolean\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.appDir = !!ctx._appDir\n    this.pagesDir = !!ctx._pagesDir\n    this.revalidatedTags = ctx.revalidatedTags\n    this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (this.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache({\n          max: ctx.maxMemoryCacheSize,\n          length({ value }) {\n            if (!value) {\n              return 25\n            } else if (value.kind === 'REDIRECT') {\n              return JSON.stringify(value.props).length\n            } else if (value.kind === 'IMAGE') {\n              throw new Error('invariant image should not be incremental-cache')\n            } else if (value.kind === 'FETCH') {\n              return JSON.stringify(value.data || '').length\n            } else if (value.kind === 'ROUTE') {\n              return value.body.length\n            }\n            // rough estimate of size of cache value\n            return (\n              value.html.length +\n              (JSON.stringify(\n                value.kind === 'APP_PAGE' ? value.rscData : value.pageData\n              )?.length || 0)\n            )\n          },\n        })\n      }\n    } else if (this.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n\n    if (this.serverDistDir && this.fs) {\n      this.tagsManifestPath = path.join(\n        this.serverDistDir,\n        '..',\n        'cache',\n        'fetch-cache',\n        'tags-manifest.json'\n      )\n\n      this.loadTagsManifestSync()\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  /**\n   * Load the tags manifest from the file system\n   */\n  private async loadTagsManifest() {\n    if (!this.tagsManifestPath || !this.fs || tagsManifest) return\n    try {\n      tagsManifest = JSON.parse(\n        await this.fs.readFile(this.tagsManifestPath, 'utf8')\n      )\n    } catch (err: any) {\n      tagsManifest = { version: 1, items: {} }\n    }\n    if (this.debug) console.log('loadTagsManifest', tagsManifest)\n  }\n\n  /**\n   * As above, but synchronous for use in the constructor. This is to\n   * preserve the existing behaviour when instantiating the cache handler. Although it's\n   * not ideal to block the main thread it's only called once during startup.\n   */\n  private loadTagsManifestSync() {\n    if (!this.tagsManifestPath || !this.fs || tagsManifest) return\n    try {\n      tagsManifest = JSON.parse(\n        this.fs.readFileSync(this.tagsManifestPath, 'utf8')\n      )\n    } catch (err: any) {\n      tagsManifest = { version: 1, items: {} }\n    }\n    if (this.debug) console.log('loadTagsManifest', tagsManifest)\n  }\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (this.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    // we need to ensure the tagsManifest is refreshed\n    // since separate workers can be updating it at the same\n    // time and we can't flush out of sync data\n    await this.loadTagsManifest()\n    if (!tagsManifest || !this.tagsManifestPath) {\n      return\n    }\n\n    for (const tag of tags) {\n      const data = tagsManifest.items[tag] || {}\n      data.revalidatedAt = Date.now()\n      tagsManifest.items[tag] = data\n    }\n\n    try {\n      await this.fs.mkdir(path.dirname(this.tagsManifestPath))\n      await this.fs.writeFile(\n        this.tagsManifestPath,\n        JSON.stringify(tagsManifest || {})\n      )\n      if (this.debug) {\n        console.log('Updated tags manifest', tagsManifest)\n      }\n    } catch (err: any) {\n      console.warn('Failed to update tags manifest.', err)\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx = {}] = args\n    const { tags, softTags, kindHint, isRoutePPREnabled } = ctx\n    let data = memoryCache?.get(key)\n\n    if (this.debug) {\n      console.log('get', key, tags, kindHint, !!data)\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      try {\n        const filePath = this.getFilePath(`${key}.body`, 'app')\n        const fileData = await this.fs.readFile(filePath)\n        const { mtime } = await this.fs.stat(filePath)\n\n        const meta = JSON.parse(\n          await this.fs.readFile(\n            filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n            'utf8'\n          )\n        )\n\n        const cacheEntry: CacheHandlerValue = {\n          lastModified: mtime.getTime(),\n          value: {\n            kind: 'ROUTE',\n            body: fileData,\n            headers: meta.headers,\n            status: meta.status,\n          },\n        }\n        return cacheEntry\n      } catch (_) {\n        // no .meta data for the related key\n      }\n\n      try {\n        // Determine the file kind if we didn't know it already.\n        let kind = kindHint\n        if (!kind) {\n          kind = this.detectFileKind(`${key}.html`)\n        }\n\n        const isAppPath = kind === 'app'\n        const filePath = this.getFilePath(\n          kind === 'fetch' ? key : `${key}.html`,\n          kind\n        )\n\n        const fileData = await this.fs.readFile(filePath, 'utf8')\n        const { mtime } = await this.fs.stat(filePath)\n\n        if (kind === 'fetch' && this.flushToDisk) {\n          const lastModified = mtime.getTime()\n          const parsedData: CachedFetchValue = JSON.parse(fileData)\n          data = {\n            lastModified,\n            value: parsedData,\n          }\n\n          if (data.value?.kind === 'FETCH') {\n            const storedTags = data.value?.tags\n\n            // update stored tags if a new one is being added\n            // TODO: remove this when we can send the tags\n            // via header on GET same as SET\n            if (!tags?.every((tag) => storedTags?.includes(tag))) {\n              if (this.debug) {\n                console.log('tags vs storedTags mismatch', tags, storedTags)\n              }\n              await this.set(key, data.value, {\n                tags,\n                isRoutePPREnabled,\n              })\n            }\n          }\n        } else {\n          let meta: RouteMetadata | undefined\n\n          if (isAppPath) {\n            try {\n              meta = JSON.parse(\n                await this.fs.readFile(\n                  filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                  'utf8'\n                )\n              )\n            } catch {}\n          }\n\n          if (isAppPath) {\n            const rscData = await this.fs.readFile(\n              this.getFilePath(\n                `${key}${isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                'app'\n              )\n            )\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: 'APP_PAGE',\n                html: fileData,\n                rscData,\n                postponed: meta?.postponed,\n                headers: meta?.headers,\n                status: meta?.status,\n              },\n            }\n          } else {\n            const pageData = JSON.parse(\n              await this.fs.readFile(\n                this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, 'pages'),\n                'utf8'\n              )\n            )\n\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: 'PAGE',\n                html: fileData,\n                pageData,\n                headers: meta?.headers,\n                status: meta?.status,\n              },\n            }\n          }\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch (_) {\n        // unable to get data from disk\n      }\n    }\n\n    if (data?.value?.kind === 'APP_PAGE' || data?.value?.kind === 'PAGE') {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        await this.loadTagsManifest()\n\n        const isStale = cacheTags.some((tag) => {\n          return (\n            tagsManifest?.items[tag]?.revalidatedAt &&\n            tagsManifest?.items[tag].revalidatedAt >=\n              (data?.lastModified || Date.now())\n          )\n        })\n\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale) {\n          data = undefined\n        }\n      }\n    }\n\n    if (data && data?.value?.kind === 'FETCH') {\n      await this.loadTagsManifest()\n\n      const combinedTags = [...(tags || []), ...(softTags || [])]\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return (\n          tagsManifest?.items[tag]?.revalidatedAt &&\n          tagsManifest?.items[tag].revalidatedAt >=\n            (data?.lastModified || Date.now())\n        )\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(...args: Parameters<CacheHandler['set']>) {\n    const [key, data, ctx] = args\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n    if (this.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk) return\n\n    if (data?.kind === 'ROUTE') {\n      const filePath = this.getFilePath(`${key}.body`, 'app')\n      await this.fs.mkdir(path.dirname(filePath))\n      await this.fs.writeFile(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n      }\n\n      await this.fs.writeFile(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n      return\n    }\n\n    if (data?.kind === 'PAGE' || data?.kind === 'APP_PAGE') {\n      const isAppPath = data.kind === 'APP_PAGE'\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? 'app' : 'pages'\n      )\n      await this.fs.mkdir(path.dirname(htmlPath))\n      await this.fs.writeFile(htmlPath, data.html)\n\n      await this.fs.writeFile(\n        this.getFilePath(\n          `${key}${\n            isAppPath\n              ? ctx.isRoutePPREnabled\n                ? RSC_PREFETCH_SUFFIX\n                : RSC_SUFFIX\n              : NEXT_DATA_SUFFIX\n          }`,\n          isAppPath ? 'app' : 'pages'\n        ),\n        isAppPath ? data.rscData : JSON.stringify(data.pageData)\n      )\n\n      if (data.headers || data.status || (isAppPath && data.postponed)) {\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: isAppPath ? data.postponed : undefined,\n        }\n\n        await this.fs.writeFile(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data?.kind === 'FETCH') {\n      const filePath = this.getFilePath(key, 'fetch')\n      await this.fs.mkdir(path.dirname(filePath))\n      await this.fs.writeFile(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.tags,\n        })\n      )\n    }\n  }\n\n  private detectFileKind(pathname: string) {\n    if (!this.appDir && !this.pagesDir) {\n      throw new Error(\n        \"Invariant: Can't determine file path kind, no page directory enabled\"\n      )\n    }\n\n    // If app directory isn't enabled, then assume it's pages and avoid the fs\n    // hit.\n    if (!this.appDir && this.pagesDir) {\n      return 'pages'\n    }\n    // Otherwise assume it's a pages file if the pages directory isn't enabled.\n    else if (this.appDir && !this.pagesDir) {\n      return 'app'\n    }\n\n    // If both are enabled, we need to test each in order, starting with\n    // `pages`.\n    let filePath = this.getFilePath(pathname, 'pages')\n    if (this.fs.existsSync(filePath)) {\n      return 'pages'\n    }\n\n    filePath = this.getFilePath(pathname, 'app')\n    if (this.fs.existsSync(filePath)) {\n      return 'app'\n    }\n\n    throw new Error(\n      `Invariant: Unable to determine file path kind for ${pathname}`\n    )\n  }\n\n  private getFilePath(\n    pathname: string,\n    kind: 'app' | 'fetch' | 'pages'\n  ): string {\n    switch (kind) {\n      case 'fetch':\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case 'pages':\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case 'app':\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(\"Invariant: Can't determine file path kind\")\n    }\n  }\n}\n","// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n","// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n\n// This module will only be loaded once per process.\nconst path = require('path')\nconst mod = require('module')\nconst originalRequire = mod.prototype.require\nconst resolveFilename = mod._resolveFilename\n\nlet resolve: typeof require.resolve = process.env.NEXT_MINIMAL\n  ? // @ts-ignore\n    __non_webpack_require__.resolve\n  : require.resolve\n\nexport const hookPropertyMap = new Map()\n\nexport const defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style'),\n}\n\nconst toResolveMap = (map: Record<string, string>): [string, string][] =>\n  Object.entries(map).map(([key, value]) => [key, resolve(value)])\n\nexport function addHookAliases(aliases: [string, string][] = []) {\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value)\n  }\n}\n\naddHookAliases(toResolveMap(defaultOverrides))\n\nmod._resolveFilename = function (\n  originalResolveFilename: (\n    request: string,\n    parent: string,\n    isMain: boolean,\n    opts: any\n  ) => string,\n  requestMap: Map<string, string>,\n  request: string,\n  parent: string,\n  isMain: boolean,\n  options: any\n) {\n  const hookResolved = requestMap.get(request)\n  if (hookResolved) request = hookResolved\n\n  return originalResolveFilename.call(mod, request, parent, isMain, options)\n\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap)\n\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request: string) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(\n      this,\n      `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(\n        request,\n        '.shared-runtime'\n      )}`\n    )\n  }\n\n  return originalRequire.call(this, request)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration#on-demand-revalidation\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { RouteRegex } from './route-regex'\nimport { DecodeError } from '../../utils'\n\nexport interface RouteMatchFn {\n  (pathname: string | null | undefined): false | Params\n}\n\nexport interface Params {\n  [param: string]: any\n}\n\nexport function getRouteMatcher({ re, groups }: RouteRegex): RouteMatchFn {\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n            ? [decode(m)]\n            : decode(m)\n      }\n    })\n    return params\n  }\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  __nextNotFoundSrcPage?: string\n  __nextDefaultLocale?: string\n  __nextFallback?: 'true'\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   *\n   * When this property is mutated, it's important to also update the request\n   * metadata for `_nextInferredDefaultLocale` to ensure that the correct\n   * behavior is applied.\n   */\n  __nextLocale?: string\n\n  /**\n   * `1` when the request did not have a locale in the pathname part of the\n   * URL but the default locale was inferred from either the domain or the\n   * configuration.\n   */\n  __nextInferredLocaleFromDefault?: '1'\n\n  __nextSsgPath?: string\n  _nextBubbleNoFallback?: '1'\n\n  /**\n   * When set to `1`, the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  __nextDataReq?: '1'\n  __nextCustomErrorRender?: '1'\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n\nexport function getNextInternalQuery(\n  query: NextParsedUrlQuery\n): NextQueryMetadata {\n  const keysToInclude: (keyof NextQueryMetadata)[] = [\n    '__nextDefaultLocale',\n    '__nextFallback',\n    '__nextLocale',\n    '__nextSsgPath',\n    '_nextBubbleNoFallback',\n    '__nextDataReq',\n    '__nextInferredLocaleFromDefault',\n  ]\n  const nextInternalQuery: NextQueryMetadata = {}\n\n  for (const key of keysToInclude) {\n    if (key in query) {\n      // @ts-ignore this can't be typed correctly\n      nextInternalQuery[key] = query[key]\n    }\n  }\n\n  return nextInternalQuery\n}\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const DEV_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const AUTOMATIC_FONT_OPTIMIZATION_MANIFEST = 'font-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = ['next.config.js', 'next.config.mjs']\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const GOOGLE_FONT_PROVIDER = 'https://fonts.googleapis.com/'\nexport const OPTIMIZED_FONT_PROVIDERS = [\n  { url: GOOGLE_FONT_PROVIDER, preconnect: 'https://fonts.gstatic.com' },\n  { url: 'https://use.typekit.net', preconnect: 'https://use.typekit.net' },\n]\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import fs from 'fs'\nimport path from 'path'\n\nexport function findDir(dir: string, name: 'pages' | 'app'): string | null {\n  // prioritize ./${name} over ./src/${name}\n  let curDir = path.join(dir, name)\n  if (fs.existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src', name)\n  if (fs.existsSync(curDir)) return curDir\n\n  return null\n}\n\nexport function findPagesDir(dir: string): {\n  pagesDir: string | undefined\n  appDir: string | undefined\n} {\n  const pagesDir = findDir(dir, 'pages') || undefined\n  const appDir = findDir(dir, 'app') || undefined\n\n  if (appDir == null && pagesDir == null) {\n    throw new Error(\n      \"> Couldn't find any `pages` or `app` directory. Please create one under the project root\"\n    )\n  }\n\n  return {\n    pagesDir,\n    appDir,\n  }\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } = require('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { I18NConfig } from '../config-shared'\n\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport type { NextApiRequestCookies } from '../api-utils'\nimport { getCookieParser } from '../api-utils/get-cookie-parser'\n\nexport interface BaseNextRequestConfig {\n  basePath: string | undefined\n  i18n?: I18NConfig\n  trailingSlash?: boolean | undefined\n}\n\nexport type FetchMetric = {\n  url: string\n  idx: number\n  end: number\n  start: number\n  method: string\n  status: number\n  cacheReason: string\n  cacheStatus: 'hit' | 'miss' | 'skip'\n}\n\nexport type FetchMetrics = Array<FetchMetric>\n\nexport abstract class BaseNextRequest<Body = any> {\n  protected _cookies: NextApiRequestCookies | undefined\n  public abstract headers: IncomingHttpHeaders\n  public abstract fetchMetrics?: FetchMetric[]\n\n  constructor(\n    public method: string,\n    public url: string,\n    public body: Body\n  ) {}\n\n  // Utils implemented using the abstract methods above\n\n  public get cookies() {\n    if (this._cookies) return this._cookies\n    return (this._cookies = getCookieParser(this.headers)())\n  }\n}\n\nexport abstract class BaseNextResponse<Destination = any> {\n  abstract statusCode: number | undefined\n  abstract statusMessage: string | undefined\n  abstract get sent(): boolean\n\n  constructor(public destination: Destination) {}\n\n  /**\n   * Sets a value for the header overwriting existing values\n   */\n  abstract setHeader(name: string, value: string | string[]): this\n\n  /**\n   * Removes a header\n   */\n  abstract removeHeader(name: string): this\n\n  /**\n   * Appends value for the given header name\n   */\n  abstract appendHeader(name: string, value: string): this\n\n  /**\n   * Get all vaues for a header as an array or undefined if no value is present\n   */\n  abstract getHeaderValues(name: string): string[] | undefined\n\n  abstract hasHeader(name: string): boolean\n\n  /**\n   * Get vaues for a header concatenated using `,` or undefined if no value is present\n   */\n  abstract getHeader(name: string): string | undefined\n\n  abstract getHeaders(): OutgoingHttpHeaders\n\n  abstract body(value: string): this\n\n  abstract send(): void\n\n  abstract onClose(callback: () => void): void\n\n  // Utils implemented using the abstract methods above\n\n  public redirect(destination: string, statusCode: number) {\n    this.setHeader('Location', destination)\n    this.statusCode = statusCode\n\n    // Since IE11 doesn't support the 308 header add backwards\n    // compatibility using refresh header\n    if (statusCode === RedirectStatusCode.PermanentRedirect) {\n      this.setHeader('Refresh', `0;url=${destination}`)\n    }\n\n    return this\n  }\n}\n","import type { ServerResponse, IncomingMessage } from 'http'\nimport type { Writable, Readable } from 'stream'\n\nimport { SYMBOL_CLEARED_COOKIES } from '../api-utils'\nimport type { NextApiRequestCookies } from '../api-utils'\n\nimport { NEXT_REQUEST_META } from '../request-meta'\nimport type { RequestMeta } from '../request-meta'\n\nimport { BaseNextRequest, BaseNextResponse, type FetchMetric } from './index'\nimport type { OutgoingHttpHeaders } from 'node:http'\n\ntype Req = IncomingMessage & {\n  [NEXT_REQUEST_META]?: RequestMeta\n  cookies?: NextApiRequestCookies\n  fetchMetrics?: FetchMetric[]\n}\n\nexport class NodeNextRequest extends BaseNextRequest<Readable> {\n  public headers = this._req.headers\n  public fetchMetrics: FetchMetric[] | undefined = this._req?.fetchMetrics;\n\n  [NEXT_REQUEST_META]: RequestMeta = this._req[NEXT_REQUEST_META] || {}\n\n  constructor(private _req: Req) {\n    super(_req.method!.toUpperCase(), _req.url!, _req)\n  }\n\n  get originalRequest() {\n    // Need to mimic these changes to the original req object for places where we use it:\n    // render.tsx, api/ssg requests\n    this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META]\n    this._req.url = this.url\n    this._req.cookies = this.cookies\n    return this._req\n  }\n\n  set originalRequest(value: Req) {\n    this._req = value\n  }\n\n  private streaming = false\n\n  /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */\n  public stream() {\n    if (this.streaming) {\n      throw new Error(\n        'Invariant: NodeNextRequest.stream() can only be called once'\n      )\n    }\n    this.streaming = true\n\n    return new ReadableStream({\n      start: (controller) => {\n        this._req.on('data', (chunk) => {\n          controller.enqueue(new Uint8Array(chunk))\n        })\n        this._req.on('end', () => {\n          controller.close()\n        })\n        this._req.on('error', (err) => {\n          controller.error(err)\n        })\n      },\n    })\n  }\n}\n\nexport class NodeNextResponse extends BaseNextResponse<Writable> {\n  private textBody: string | undefined = undefined\n\n  public [SYMBOL_CLEARED_COOKIES]?: boolean\n\n  get originalResponse() {\n    if (SYMBOL_CLEARED_COOKIES in this) {\n      this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES]\n    }\n\n    return this._res\n  }\n\n  constructor(\n    private _res: ServerResponse & { [SYMBOL_CLEARED_COOKIES]?: boolean }\n  ) {\n    super(_res)\n  }\n\n  get sent() {\n    return this._res.finished || this._res.headersSent\n  }\n\n  get statusCode() {\n    return this._res.statusCode\n  }\n\n  set statusCode(value: number) {\n    this._res.statusCode = value\n  }\n\n  get statusMessage() {\n    return this._res.statusMessage\n  }\n\n  set statusMessage(value: string) {\n    this._res.statusMessage = value\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this._res.setHeader(name, value)\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this._res.removeHeader(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    const values = this._res.getHeader(name)\n\n    if (values === undefined) return undefined\n\n    return (Array.isArray(values) ? values : [values]).map((value) =>\n      value.toString()\n    )\n  }\n\n  hasHeader(name: string): boolean {\n    return this._res.hasHeader(name)\n  }\n\n  getHeader(name: string): string | undefined {\n    const values = this.getHeaderValues(name)\n    return Array.isArray(values) ? values.join(',') : undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return this._res.getHeaders()\n  }\n\n  appendHeader(name: string, value: string): this {\n    const currentValues = this.getHeaderValues(name) ?? []\n\n    if (!currentValues.includes(value)) {\n      this._res.setHeader(name, [...currentValues, value])\n    }\n\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  send() {\n    this._res.end(this.textBody)\n  }\n\n  public onClose(callback: () => void) {\n    this.originalResponse.on('close', callback)\n  }\n}\n","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\nexport type SwrDelta = number\n\nexport function formatRevalidate({\n  revalidate,\n  swrDelta,\n}: {\n  revalidate: Revalidate\n  swrDelta?: SwrDelta\n}): string {\n  const swrHeader = swrDelta\n    ? `stale-while-revalidate=${swrDelta}`\n    : 'stale-while-revalidate'\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}, ${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}, ${swrHeader}`\n}\n","export const RSC_HEADER = 'RSC' as const\nexport const ACTION = 'Next-Action' as const\n\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_PARAMETERS = [\n  [RSC_HEADER],\n  [NEXT_ROUTER_STATE_TREE],\n  [NEXT_ROUTER_PREFETCH_HEADER],\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { formatRevalidate } from './lib/revalidate'\nimport { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  type,\n  generateEtags,\n  poweredByHeader,\n  revalidate,\n  swrDelta,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  type: 'html' | 'json' | 'rsc'\n  generateEtags: boolean\n  poweredByHeader: boolean\n  revalidate: Revalidate | undefined\n  swrDelta: SwrDelta | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && type === 'html') {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  if (typeof revalidate !== 'undefined') {\n    res.setHeader(\n      'Cache-Control',\n      formatRevalidate({\n        revalidate,\n        swrDelta,\n      })\n    )\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (payload !== null) {\n    let etagPayload = payload\n    if (type === 'rsc') {\n      // ensure etag generation is deterministic as\n      // ordering can differ even if underlying content\n      // does not differ\n      etagPayload = payload.split('\\n').sort().join('\\n')\n    } else if (type === 'html' && payload.includes('__next_f')) {\n      const { parse } =\n        require('next/dist/compiled/node-html-parser') as typeof import('next/dist/compiled/node-html-parser')\n\n      try {\n        // Parse the HTML\n        let root = parse(payload)\n\n        // Get script tags in the body element\n        let scriptTags = root\n          .querySelector('body')\n          ?.querySelectorAll('script')\n          .filter(\n            (node) =>\n              !node.hasAttribute('src') && node.innerHTML?.includes('__next_f')\n          )\n\n        // Sort the script tags by their inner text\n        scriptTags?.sort((a, b) => a.innerHTML.localeCompare(b.innerHTML))\n\n        // Remove the original script tags\n        scriptTags?.forEach((script: any) => script.remove())\n\n        // Append the sorted script tags to the body\n        scriptTags?.forEach((script: any) =>\n          root.querySelector('body')?.appendChild(script)\n        )\n\n        // Stringify back to HTML\n        etagPayload = root.toString()\n      } catch (err) {\n        console.error(`Error parsing HTML payload`, err)\n      }\n    }\n\n    const etag = generateEtags ? generateETag(etagPayload) : undefined\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader(\n      'Content-Type',\n      result.contentType\n        ? result.contentType\n        : type === 'rsc'\n          ? RSC_CONTENT_TYPE_HEADER\n          : type === 'json'\n            ? 'application/json'\n            : 'text/html; charset=utf-8'\n    )\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (\n    typeof param === 'string' ||\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, stringifyUrlQueryParam(item)))\n    } else {\n      result.set(key, stringifyUrlQueryParam(value))\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    console[consoleMethod](' ' + prefix, ...message)\n  }\n}\n\nexport function bootstrap(...message: any[]) {\n  console.log(' ', ...message)\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceMessages = new Set()\nexport function warnOnce(...message: any[]) {\n  if (!warnOnceMessages.has(message[0])) {\n    warnOnceMessages.add(message.join(' '))\n\n    warn(...message)\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})'\nconst IPv6Reg = new RegExp(\n  '^(' +\n    `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n    `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n    `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n    `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n    `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n    `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n    ')(%[0-9a-zA-Z-.:]{1,})?$'\n)\n\nexport function isIPv6(s: string) {\n  return IPv6Reg.test(s)\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","export function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\n\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/\n\nexport function isDynamicRoute(route: string): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/shared/lib/runtime-config.external.js\");","const BOT_UA_RE =\n  /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i\n\nexport function isBot(userAgent: string): boolean {\n  return BOT_UA_RE.test(userAgent)\n}\n","import { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encodedTags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\nexport type ReactReadableStream = ReadableStream<Uint8Array> & {\n  allReady?: Promise<void> | undefined\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // We could encode this invariant in the arguments but current uses of this function pass\n  // use spread so it would be missed by\n  if (streams.length === 0) {\n    throw new Error('Invariant: chainStreams requires at least one stream')\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const buffers: Buffer[] = []\n\n  for await (const chunk of stream) {\n    buffers.push(Buffer.from(chunk))\n  }\n\n  return Buffer.concat(buffers)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nfunction createInsertedHTMLStream(\n  getServerInsertedHTML: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  return new TransformStream({\n    transform: async (chunk, controller) => {\n      const html = await getServerInsertedHTML()\n      if (html) {\n        controller.enqueue(encoder.encode(html))\n      }\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: typeof import('react-dom/server.edge')\n  element: React.ReactElement\n  streamOptions?: any\n}): Promise<ReactReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n  let freezing = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n      // While react is flushing chunks, we don't apply insertions\n      if (freezing) {\n        controller.enqueue(chunk)\n        return\n      }\n\n      const insertion = await insert()\n\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n        freezing = true\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            insertedHeadContent.set(chunk.slice(0, index))\n            insertedHeadContent.set(encodedInsertion, index)\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          freezing = true\n          inserted = true\n        }\n      }\n\n      if (!inserted) {\n        controller.enqueue(chunk)\n      } else {\n        scheduleImmediate(() => {\n          freezing = false\n        })\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(\n  stream: ReadableStream<Uint8Array>\n): TransformStream<Uint8Array, Uint8Array> {\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    if (pull) {\n      return\n    }\n\n    const reader = stream.getReader()\n\n    // NOTE: streaming flush\n    // We are buffering here for the inlined data stream because the\n    // \"shell\" stream might be chunkenized again by the underlying stream\n    // implementation, e.g. with a specific high-water mark. To ensure it's\n    // the safe timing to pipe the data stream, this extra tick is\n    // necessary.\n\n    // We don't start reading until we've left the current Task to ensure\n    // that it's inserted after flushing the shell. Note that this implementation\n    // might get stale if impl details of Fizz change in the future.\n    await atLeastOneTask()\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (!pull) {\n        pull = startPulling(controller)\n      }\n    },\n    flush(controller) {\n      if (donePulling) {\n        return\n      }\n      return pull || startPulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: typeof window.__next_root_layout_missing_tags = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<script>self.__next_root_layout_missing_tags=${JSON.stringify(\n            missingTags\n          )}</script>`\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  getServerInsertedHTML: (() => Promise<string>) | undefined\n  serverInsertedHTMLToHead: boolean\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    getServerInsertedHTML,\n    serverInsertedHTMLToHead,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML and there's an `allReady` promise on the\n  // stream, we need to wait for it to resolve before continuing.\n  if (isStaticGeneration && 'allReady' in renderStream) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Insert generated tags to head\n    getServerInsertedHTML && !serverInsertedHTMLToHead\n      ? createInsertedHTMLStream(getServerInsertedHTML)\n      : null,\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    getServerInsertedHTML && serverInsertedHTMLToHead\n      ? createHeadInsertionTransformStream(getServerInsertedHTML)\n      : null,\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  { getServerInsertedHTML }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  { inlinedDataStream, getServerInsertedHTML }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  { inlinedDataStream, getServerInsertedHTML }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueDynamicDataResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n}\n\nexport async function continueDynamicDataResume(\n  renderStream: ReadableStream<Uint8Array>,\n  { inlinedDataStream }: ContinueDynamicDataResumeOptions\n) {\n  return (\n    renderStream\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n} as const\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key; it calls the provided function\n * with the normalized key.\n */\nexport function normalizeNextQueryParam(\n  key: string,\n  onKeyNormalized: (normalizedKey: string) => void\n) {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      const normalizedKey = key.substring(prefix.length)\n      onKeyNormalized(normalizedKey)\n    }\n  }\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: string[]\n): PathLocale {\n  let detectedLocale: string | undefined\n  // first item will be empty string from splitting at first char\n  const pathnameParts = pathname.split('/')\n\n  ;(locales || []).some((locale) => {\n    if (\n      pathnameParts[1] &&\n      pathnameParts[1].toLowerCase() === locale.toLowerCase()\n    ) {\n      detectedLocale = locale\n      pathnameParts.splice(1, 1)\n      pathname = pathnameParts.join('/') || '/'\n      return true\n    }\n    return false\n  })\n\n  return {\n    pathname,\n    detectedLocale,\n  }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","import type { I18NConfig } from '../../config-shared'\nimport type { RequestData } from '../types'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  [INTERNALS]: {\n    cookies: RequestCookies\n    geo: RequestData['geo']\n    ip?: string\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n    validateURL(url)\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      geo: init.geo || {},\n      ip: init.ip,\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      geo: this.geo,\n      ip: this.ip,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get geo() {\n    return this[INTERNALS].geo\n  }\n\n  public get ip() {\n    return this[INTERNALS].ip\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  geo?: {\n    city?: string\n    country?: string\n    region?: string\n  }\n  ip?: string\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n}\n","import type { BaseNextRequest, BaseNextResponse } from './'\nimport type { NodeNextRequest, NodeNextResponse } from './node'\nimport type { WebNextRequest, WebNextResponse } from './web'\n\n/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */\n\n/**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */\nexport const isWebNextRequest = (req: BaseNextRequest): req is WebNextRequest =>\n  process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */\nexport const isWebNextResponse = (\n  res: BaseNextResponse\n): res is WebNextResponse => process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */\nexport const isNodeNextRequest = (\n  req: BaseNextRequest\n): req is NodeNextRequest => process.env.NEXT_RUNTIME !== 'edge'\n\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */\nexport const isNodeNextResponse = (\n  res: BaseNextResponse\n): res is NodeNextResponse => process.env.NEXT_RUNTIME !== 'edge'\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(ComponentMod: any) {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args: any[]) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args: any[]) => {\n      const startTime = performance.now()\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.loadChunk(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { Revalidate } from './lib/revalidate'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToBuffer,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\n\ntype ContentTypeOption = string | undefined\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  revalidate?: Revalidate\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  revalidate?: Revalidate\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType?: ContentTypeOption\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(value: string | Buffer) {\n    return new RenderResult<StaticRenderResultMetadata>(value, { metadata: {} })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  public toUnchunkedBuffer(stream?: false): Buffer\n  public toUnchunkedBuffer(stream: true): Promise<Buffer>\n  public toUnchunkedBuffer(stream = false): Promise<Buffer> | Buffer {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToBuffer(this.readable)\n    }\n\n    return Buffer.from(this.response)\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be streamed')\n    }\n    if (typeof this.response === 'string') {\n      throw new Error('Invariant: static responses cannot be streamed')\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public chain(readable: ReadableStream<Uint8Array>) {\n    if (this.response === null) {\n      throw new Error('Invariant: response is null. This is a bug in Next.js')\n    }\n\n    // If the response is not an array of streams already, make it one.\n    let responses: ReadableStream<Uint8Array>[]\n    if (typeof this.response === 'string') {\n      responses = [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      responses = this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      responses = [streamFromBuffer(this.response)]\n    } else {\n      responses = [this.response]\n    }\n\n    // Add the new stream to the array.\n    responses.push(readable)\n\n    // Update the response.\n    this.response = responses\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname?: string | null,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../../server/lib/interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /\\[((?:\\[.*\\])|.+)\\]/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[1])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(route: string) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n  return {\n    parameterizedRoute: segments\n      .map((segment) => {\n        const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n        if (markerMatch && paramMatches) {\n          const { key, optional, repeat } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return `/${escapeStringRegexp(markerMatch)}([^/]+?)`\n        } else if (paramMatches) {\n          const { key, repeat, optional } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(normalizedRoute: string): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute)\n  return {\n    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  return repeat\n    ? optional\n      ? `(?:/${interceptionPrefix}(?<${cleanedKey}>.+?))?`\n      : `/${interceptionPrefix}(?<${cleanedKey}>.+?)`\n    : `/${interceptionPrefix}(?<${cleanedKey}>[^/]+?)`\n}\n\nfunction getNamedParametrizedRoute(route: string, prefixRouteKeys: boolean) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n  return {\n    namedParameterizedRoute: segments\n      .map((segment) => {\n        const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n\n        if (hasInterceptionMarker && paramMatches) {\n          const [usedMarker] = segment.split(paramMatches[0])\n\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            interceptionMarker: usedMarker,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys\n              ? NEXT_INTERCEPTION_MARKER_PREFIX\n              : undefined,\n          })\n        } else if (paramMatches) {\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n          })\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  prefixRouteKey: boolean\n) {\n  const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey)\n  return {\n    ...getRouteRegex(normalizedRoute),\n    namedRegex: `^${result.namedParameterizedRoute}(?:/)?$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(normalizedRoute)\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { Params } from './route-matcher'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\nimport { NEXT_RSC_UNION_QUERY } from '../../../../client/components/app-router-headers'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value: undefined | string\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n  delete query.__nextDataReq\n  delete query.__nextInferredLocaleFromDefault\n  delete query[NEXT_RSC_UNION_QUERY]\n\n  let escapedDestination = args.destination\n\n  for (const param of Object.keys({ ...args.params, ...query })) {\n    escapedDestination = escapeSegment(escapedDestination, param)\n  }\n\n  const parsedDestination = parseUrl(escapedDestination)\n  const destQuery = parsedDestination.query\n  const destPath = unescapeSegments(\n    `${parsedDestination.pathname!}${parsedDestination.hash || ''}`\n  )\n  const destHostname = unescapeSegments(parsedDestination.hostname || '')\n  const destPathParamKeys: Key[] = []\n  const destHostnameParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  pathToRegexp(destHostname, destHostnameParamKeys)\n\n  const destParams: (string | number)[] = []\n\n  destPathParamKeys.forEach((key) => destParams.push(key.name))\n  destHostnameParamKeys.forEach((key) => destParams.push(key.name))\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  const destHostnameCompiler = compile(destHostname, { validate: false })\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        args.params['0'] = marker\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    parsedDestination.hostname = destHostnameCompiler(args.params)\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? JSON.stringify(err) : err + '')\n}\n","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import type { I18NProvider } from '../lib/i18n-provider'\nimport type { Normalizer } from './normalizer'\n\n/**\n * Normalizes the pathname by removing the locale prefix if any.\n */\nexport class LocaleRouteNormalizer implements Normalizer {\n  constructor(private readonly provider: I18NProvider) {}\n\n  /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */\n  public normalize(pathname: string): string {\n    const match = this.provider.analyze(pathname)\n    return match.pathname\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n","import type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\n\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  getRouteMatcher,\n  type RouteMatchFn,\n} from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\ntype RouteMatchResult = {\n  params?: Record<string, string | string[]>\n}\n\nexport class RouteMatcher<D extends RouteDefinition = RouteDefinition> {\n  private readonly dynamic?: RouteMatchFn\n\n  /**\n   * When set, this is an array of all the other matchers that are duplicates of\n   * this one. This is used by the managers to warn the users about possible\n   * duplicate matches on routes.\n   */\n  public duplicated?: Array<RouteMatcher>\n\n  constructor(public readonly definition: D) {\n    if (isDynamicRoute(definition.pathname)) {\n      this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname))\n    }\n  }\n\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */\n  public get identity(): string {\n    return this.definition.pathname\n  }\n\n  public get isDynamic() {\n    return this.dynamic !== undefined\n  }\n\n  public match(pathname: string): RouteMatch<D> | null {\n    const result = this.test(pathname)\n    if (!result) return null\n\n    return { definition: this.definition, params: result.params }\n  }\n\n  public test(pathname: string): RouteMatchResult | null {\n    if (this.dynamic) {\n      const params = this.dynamic(pathname)\n      if (!params) return null\n\n      return { params }\n    }\n\n    if (pathname === this.definition.pathname) {\n      return {}\n    }\n\n    return null\n  }\n}\n","import type { LocaleAnalysisResult } from '../lib/i18n-provider'\nimport type { LocaleRouteDefinition } from '../route-definitions/locale-route-definition'\nimport type { LocaleRouteMatch } from '../route-matches/locale-route-match'\nimport { RouteMatcher } from './route-matcher'\n\nexport type LocaleMatcherMatchOptions = {\n  /**\n   * If defined, this indicates to the matcher that the request should be\n   * treated as locale-aware. If this is undefined, it means that this\n   * application was not configured for additional locales.\n   */\n  i18n?: LocaleAnalysisResult\n}\n\nexport class LocaleRouteMatcher<\n  D extends LocaleRouteDefinition = LocaleRouteDefinition,\n> extends RouteMatcher<D> {\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextLocale=${this.definition.i18n?.locale}`\n  }\n\n  /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public match(\n    pathname: string,\n    options?: LocaleMatcherMatchOptions\n  ): LocaleRouteMatch<D> | null {\n    // This is like the parent `match` method but instead this injects the\n    // additional `options` into the\n    const result = this.test(pathname, options)\n    if (!result) return null\n\n    return {\n      definition: this.definition,\n      params: result.params,\n      detectedLocale:\n        // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        options?.i18n?.detectedLocale ?? this.definition.i18n?.locale,\n    }\n  }\n\n  /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public test(pathname: string, options?: LocaleMatcherMatchOptions) {\n    // If this route has locale information and we have detected a locale, then\n    // we need to compare the detected locale to the route's locale.\n    if (this.definition.i18n && options?.i18n) {\n      // If we have detected a locale and it does not match this route's locale,\n      // then this isn't a match!\n      if (\n        this.definition.i18n.locale &&\n        options.i18n.detectedLocale &&\n        this.definition.i18n.locale !== options.i18n.detectedLocale\n      ) {\n        return null\n      }\n\n      // Perform regular matching against the locale stripped pathname now, the\n      // locale information matches!\n      return super.test(options.i18n.pathname)\n    }\n\n    // If we don't have locale information, then we can just perform regular\n    // matching.\n    return super.test(pathname)\n  }\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils'\nimport type { RouteKind } from '../route-kind'\nimport type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { RouteMatcherProvider } from '../route-matcher-providers/route-matcher-provider'\nimport type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type { MatchOptions, RouteMatcherManager } from './route-matcher-manager'\nimport { getSortedRoutes } from '../../shared/lib/router/utils'\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { DetachedPromise } from '../../lib/detached-promise'\n\ninterface RouteMatchers {\n  static: ReadonlyArray<RouteMatcher>\n  dynamic: ReadonlyArray<RouteMatcher>\n  duplicates: Record<string, ReadonlyArray<RouteMatcher>>\n}\n\nexport class DefaultRouteMatcherManager implements RouteMatcherManager {\n  private readonly providers: Array<RouteMatcherProvider> = []\n  protected readonly matchers: RouteMatchers = {\n    static: [],\n    dynamic: [],\n    duplicates: {},\n  }\n  private lastCompilationID = this.compilationID\n\n  /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */\n  private get compilationID() {\n    return this.providers.length\n  }\n\n  private waitTillReadyPromise?: Promise<void>\n  public async waitTillReady(): Promise<void> {\n    if (this.waitTillReadyPromise) {\n      await this.waitTillReadyPromise\n      delete this.waitTillReadyPromise\n    }\n  }\n\n  private previousMatchers: ReadonlyArray<RouteMatcher> = []\n  public async reload() {\n    const { promise, resolve, reject } = new DetachedPromise<void>()\n    this.waitTillReadyPromise = promise\n\n    // Grab the compilation ID for this run, we'll verify it at the end to\n    // ensure that if any routes were added before reloading is finished that\n    // we error out.\n    const compilationID = this.compilationID\n\n    try {\n      // Collect all the matchers from each provider.\n      const matchers: Array<RouteMatcher> = []\n\n      // Get all the providers matchers.\n      const providersMatchers: ReadonlyArray<ReadonlyArray<RouteMatcher>> =\n        await Promise.all(this.providers.map((provider) => provider.matchers()))\n\n      // Use this to detect duplicate pathnames.\n      const all = new Map<string, RouteMatcher>()\n      const duplicates: Record<string, RouteMatcher[]> = {}\n      for (const providerMatchers of providersMatchers) {\n        for (const matcher of providerMatchers) {\n          // Reset duplicated matches when reloading from pages conflicting state.\n          if (matcher.duplicated) delete matcher.duplicated\n          // Test to see if the matcher being added is a duplicate.\n          const duplicate = all.get(matcher.definition.pathname)\n          if (duplicate) {\n            // This looks a little weird, but essentially if the pathname\n            // already exists in the duplicates map, then we got that array\n            // reference. Otherwise, we create a new array with the original\n            // duplicate first. Then we push the new matcher into the duplicate\n            // array, and reset it to the duplicates object (which may be a\n            // no-op if the pathname already existed in the duplicates object).\n            // Then we set the array of duplicates on both the original\n            // duplicate object and the new one, so we can keep them in sync.\n            // If a new duplicate is found, and it matches an existing pathname,\n            // the retrieval of the `other` will actually return the array\n            // reference used by all other duplicates. This is why ReadonlyArray\n            // is so important! Array's are always references!\n            const others = duplicates[matcher.definition.pathname] ?? [\n              duplicate,\n            ]\n            others.push(matcher)\n            duplicates[matcher.definition.pathname] = others\n\n            // Add duplicated details to each route.\n            duplicate.duplicated = others\n            matcher.duplicated = others\n\n            // TODO: see if we should error for duplicates in production?\n          }\n\n          matchers.push(matcher)\n\n          // Add the matcher's pathname to the set.\n          all.set(matcher.definition.pathname, matcher)\n        }\n      }\n\n      // Update the duplicate matchers. This is used in the development manager\n      // to warn about duplicates.\n      this.matchers.duplicates = duplicates\n\n      // If the cache is the same as what we just parsed, we can exit now. We\n      // can tell by using the `===` which compares object identity, which for\n      // the manifest matchers, will return the same matcher each time.\n      if (\n        this.previousMatchers.length === matchers.length &&\n        this.previousMatchers.every(\n          (cachedMatcher, index) => cachedMatcher === matchers[index]\n        )\n      ) {\n        return\n      }\n      this.previousMatchers = matchers\n\n      // For matchers that are for static routes, filter them now.\n      this.matchers.static = matchers.filter((matcher) => !matcher.isDynamic)\n\n      // For matchers that are for dynamic routes, filter them and sort them now.\n      const dynamic = matchers.filter((matcher) => matcher.isDynamic)\n\n      // As `getSortedRoutes` only takes an array of strings, we need to create\n      // a map of the pathnames (used for sorting) and the matchers. When we\n      // have locales, there may be multiple matches for the same pathname. To\n      // handle this, we keep a map of all the indexes (in `reference`) and\n      // merge them in later.\n\n      const reference = new Map<string, number[]>()\n      const pathnames = new Array<string>()\n      for (let index = 0; index < dynamic.length; index++) {\n        // Grab the pathname from the definition.\n        const pathname = dynamic[index].definition.pathname\n\n        // Grab the index in the dynamic array, push it into the reference.\n        const indexes = reference.get(pathname) ?? []\n        indexes.push(index)\n\n        // If this is the first one set it. If it isn't, we don't need to\n        // because pushing above on the array will mutate the array already\n        // stored there because array's are always a reference!\n        if (indexes.length === 1) reference.set(pathname, indexes)\n        // Otherwise, continue, we've already added this pathname before.\n        else continue\n\n        pathnames.push(pathname)\n      }\n\n      // Sort the array of pathnames.\n      const sorted = getSortedRoutes(pathnames)\n\n      // For each of the sorted pathnames, iterate over them, grabbing the list\n      // of indexes and merging them back into the new `sortedDynamicMatchers`\n      // array. The order of the same matching pathname doesn't matter because\n      // they will have other matching characteristics (like the locale) that\n      // is considered.\n      const sortedDynamicMatchers: Array<RouteMatcher> = []\n      for (const pathname of sorted) {\n        const indexes = reference.get(pathname)\n        if (!Array.isArray(indexes)) {\n          throw new Error('Invariant: expected to find identity in indexes map')\n        }\n\n        const dynamicMatches = indexes.map((index) => dynamic[index])\n\n        sortedDynamicMatchers.push(...dynamicMatches)\n      }\n\n      this.matchers.dynamic = sortedDynamicMatchers\n\n      // This means that there was a new matcher pushed while we were waiting\n      if (this.compilationID !== compilationID) {\n        throw new Error(\n          'Invariant: expected compilation to finish before new matchers were added, possible missing await'\n        )\n      }\n    } catch (err) {\n      reject(err)\n    } finally {\n      // The compilation ID matched, so mark the complication as finished.\n      this.lastCompilationID = compilationID\n      resolve()\n    }\n  }\n\n  public push(provider: RouteMatcherProvider): void {\n    this.providers.push(provider)\n  }\n\n  public async test(pathname: string, options: MatchOptions): Promise<boolean> {\n    // See if there's a match for the pathname...\n    const match = await this.match(pathname, options)\n\n    // This default implementation only needs to check to see if there _was_ a\n    // match. The development matcher actually changes it's behavior by not\n    // recompiling the routes.\n    return match !== null\n  }\n\n  public async match(\n    pathname: string,\n    options: MatchOptions\n  ): Promise<RouteMatch<RouteDefinition<RouteKind>> | null> {\n    // \"Iterate\" over the match options. Once we found a single match, exit with\n    // it, otherwise return null below. If no match is found, the inner block\n    // won't be called.\n    for await (const match of this.matchAll(pathname, options)) {\n      return match\n    }\n\n    return null\n  }\n\n  /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */\n  protected validate(\n    pathname: string,\n    matcher: RouteMatcher,\n    options: MatchOptions\n  ): RouteMatch | null {\n    if (matcher instanceof LocaleRouteMatcher) {\n      return matcher.match(pathname, options)\n    }\n\n    // If the locale was inferred from the default locale, then it will have\n    // already added a locale to the pathname. We need to remove it before\n    // matching because this matcher is not locale aware.\n    if (options.i18n?.inferredFromDefault) {\n      return matcher.match(options.i18n.pathname)\n    }\n\n    return matcher.match(pathname)\n  }\n\n  public async *matchAll(\n    pathname: string,\n    options: MatchOptions\n  ): AsyncGenerator<RouteMatch<RouteDefinition<RouteKind>>, null, undefined> {\n    // Guard against the matcher manager from being run before it needs to be\n    // recompiled. This was preferred to re-running the compilation here because\n    // it should be re-ran only when it changes. If a match is attempted before\n    // this is done, it indicates that there is a case where a provider is added\n    // before it was recompiled (an error). We also don't want to affect request\n    // times.\n    if (this.lastCompilationID !== this.compilationID) {\n      throw new Error(\n        'Invariant: expected routes to have been loaded before match'\n      )\n    }\n\n    // Ensure that path matching is done with a leading slash.\n    pathname = ensureLeadingSlash(pathname)\n\n    // If this pathname doesn't look like a dynamic route, and this pathname is\n    // listed in the normalized list of routes, then return it. This ensures\n    // that when a route like `/user/[id]` is encountered, it doesn't just match\n    // with the list of normalized routes.\n    if (!isDynamicRoute(pathname)) {\n      for (const matcher of this.matchers.static) {\n        const match = this.validate(pathname, matcher, options)\n        if (!match) continue\n\n        yield match\n      }\n    }\n\n    // If we should skip handling dynamic routes, exit now.\n    if (options?.skipDynamic) return null\n\n    // Loop over the dynamic matchers, yielding each match.\n    for (const matcher of this.matchers.dynamic) {\n      const match = this.validate(pathname, matcher, options)\n      if (!match) continue\n\n      yield match\n    }\n\n    // We tried direct matching against the pathname and against all the dynamic\n    // paths, so there was no match.\n    return null\n  }\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */\nexport class Normalizers implements Normalizer {\n  constructor(private readonly normalizers: Array<Normalizer> = []) {}\n\n  public push(normalizer: Normalizer) {\n    this.normalizers.push(normalizer)\n  }\n\n  public normalize(pathname: string): string {\n    return this.normalizers.reduce<string>(\n      (normalized, normalizer) => normalizer.normalize(normalized),\n      pathname\n    )\n  }\n}\n","import path from '../../shared/lib/isomorphic/path'\nimport type { Normalizer } from './normalizer'\n\nexport class PrefixingNormalizer implements Normalizer {\n  private readonly prefix: string\n\n  constructor(...prefixes: ReadonlyArray<string>) {\n    this.prefix = path.posix.join(...prefixes)\n  }\n\n  public normalize(pathname: string): string {\n    return path.posix.join(this.prefix, pathname)\n  }\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import { Normalizers } from '../../normalizers'\nimport type { Normalizer } from '../../normalizer'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\n\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n  constructor() {\n    super('app')\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(normalizePagePath(page))\n  }\n}\n\nexport class DevAppBundlePathNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import type { Normalizer } from './normalizer'\n\nexport function wrapNormalizerFn(fn: (pathname: string) => string): Normalizer {\n  return { normalize: fn }\n}\n","export const enum PAGE_TYPES {\n  PAGES = 'pages',\n  ROOT = 'root',\n  APP = 'app',\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */\nexport class UnderscoreNormalizer implements Normalizer {\n  public normalize(pathname: string): string {\n    return pathname.replace(/%5F/g, '_')\n  }\n}\n","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths'\nimport { Normalizers } from '../../normalizers'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\nimport type { Normalizer } from '../../normalizer'\n\nexport class AppPathnameNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The pathname to match should have the trailing `/page` and other route\n      // group information stripped from it.\n      wrapNormalizerFn(normalizeAppPath),\n      // The page should have the `%5F` characters replaced with `_` characters.\n      new UnderscoreNormalizer(),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevAppPathnameNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppPathnameNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import {\n  AppBundlePathNormalizer,\n  DevAppBundlePathNormalizer,\n} from './app-bundle-path-normalizer'\nimport { AppFilenameNormalizer } from './app-filename-normalizer'\nimport { DevAppPageNormalizer } from './app-page-normalizer'\nimport {\n  AppPathnameNormalizer,\n  DevAppPathnameNormalizer,\n} from './app-pathname-normalizer'\n\nexport class AppNormalizers {\n  public readonly filename: AppFilenameNormalizer\n  public readonly pathname: AppPathnameNormalizer\n  public readonly bundlePath: AppBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new AppFilenameNormalizer(distDir)\n    this.pathname = new AppPathnameNormalizer()\n    this.bundlePath = new AppBundlePathNormalizer()\n  }\n}\n\nexport class DevAppNormalizers {\n  public readonly page: DevAppPageNormalizer\n  public readonly pathname: DevAppPathnameNormalizer\n  public readonly bundlePath: DevAppBundlePathNormalizer\n\n  constructor(appDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevAppPageNormalizer(appDir, extensions)\n    this.pathname = new DevAppPathnameNormalizer(this.page)\n    this.bundlePath = new DevAppBundlePathNormalizer(this.page)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\n\nexport class AppPageRouteMatcher extends RouteMatcher<AppPageRouteDefinition> {\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextPage=${this.definition.page}`\n  }\n}\n","import type { RouteMatcherProvider } from '../route-matcher-provider'\nimport type { RouteMatcher } from '../../route-matchers/route-matcher'\n\ninterface LoaderComparable<D> {\n  load(): Promise<D>\n  compare(left: D, right: D): boolean\n}\n\n/**\n * This will memoize the matchers if the loaded data is comparable.\n */\nexport abstract class CachedRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n  D = any,\n> implements RouteMatcherProvider<M>\n{\n  private data?: D\n  private cached: ReadonlyArray<M> = []\n\n  constructor(private readonly loader: LoaderComparable<D>) {}\n\n  protected abstract transform(data: D): Promise<ReadonlyArray<M>>\n\n  public async matchers(): Promise<readonly M[]> {\n    const data = await this.loader.load()\n    if (!data) return []\n\n    // Return the cached matchers if the data has not changed.\n    if (this.data && this.loader.compare(this.data, data)) return this.cached\n    this.data = data\n\n    // Transform the manifest into matchers.\n    const matchers = await this.transform(data)\n\n    // Cache the matchers.\n    this.cached = matchers\n\n    return matchers\n  }\n}\n","import type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider'\n\nexport abstract class ManifestRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n> extends CachedRouteMatcherProvider<M, Manifest | null> {\n  constructor(manifestName: string, manifestLoader: ManifestLoader) {\n    super({\n      load: async () => manifestLoader.load(manifestName),\n      compare: (left, right) => left === right,\n    })\n  }\n}\n","import { isAppPageRoute } from '../../lib/is-app-page-route'\n\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { AppNormalizers } from '../normalizers/built/app'\nimport { RouteKind } from '../route-kind'\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\n\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider<AppPageRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppPageRouteMatcher>> {\n    // This matcher only matches app pages.\n    const pages = Object.keys(manifest).filter((page) => isAppPageRoute(page))\n\n    // Collect all the app paths for each page. This could include any parallel\n    // routes.\n    const allAppPaths: Record<string, string[]> = {}\n    for (const page of pages) {\n      const pathname = this.normalizers.pathname.normalize(page)\n      if (pathname in allAppPaths) allAppPaths[pathname].push(page)\n      else allAppPaths[pathname] = [page]\n    }\n\n    // Format the routes.\n    const matchers: Array<AppPageRouteMatcher> = []\n    for (const [pathname, appPaths] of Object.entries(allAppPaths)) {\n      // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n      const page = appPaths[0]\n\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppPageRouteMatcher({\n          kind: RouteKind.APP_PAGE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n          appPaths,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppPageRoute(route: string): boolean {\n  return route.endsWith('/page')\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppRouteRouteDefinition } from '../route-definitions/app-route-route-definition'\n\nexport class AppRouteRouteMatcher extends RouteMatcher<AppRouteRouteDefinition> {}\n","import { isAppRouteRoute } from '../../lib/is-app-route-route'\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport { AppNormalizers } from '../normalizers/built/app'\n\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider<AppRouteRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppRouteRouteMatcher>> {\n    // This matcher only matches app routes.\n    const pages = Object.keys(manifest).filter((page) => isAppRouteRoute(page))\n\n    // Format the routes.\n    const matchers: Array<AppRouteRouteMatcher> = []\n    for (const page of pages) {\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const pathname = this.normalizers.pathname.normalize(page)\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppRouteRouteMatcher({\n          kind: RouteKind.APP_ROUTE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n","import type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesAPIRouteMatcher extends RouteMatcher<PagesAPIRouteDefinition> {}\n\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher<PagesAPIRouteDefinition> {}\n","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport type { Normalizer } from '../../normalizer'\nimport { Normalizers } from '../../normalizers'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\n\nexport class PagesBundlePathNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The bundle path should have the trailing `/index` stripped from\n      // it.\n      wrapNormalizerFn(normalizePagePath),\n      // The page should prefixed with `pages/`.\n      new PrefixingNormalizer('pages'),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n  constructor(pagesNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pagesNormalizer,\n      // Normalize the app page to a pathname.\n      new PagesBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import {\n  DevPagesBundlePathNormalizer,\n  PagesBundlePathNormalizer,\n} from './pages-bundle-path-normalizer'\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer'\nimport { DevPagesPageNormalizer } from './pages-page-normalizer'\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer'\n\nexport class PagesNormalizers {\n  public readonly filename: PagesFilenameNormalizer\n  public readonly bundlePath: PagesBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new PagesFilenameNormalizer(distDir)\n    this.bundlePath = new PagesBundlePathNormalizer()\n\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n  }\n}\n\nexport class DevPagesNormalizers {\n  public readonly page: DevPagesPageNormalizer\n  public readonly pathname: DevPagesPathnameNormalizer\n  public readonly bundlePath: DevPagesBundlePathNormalizer\n\n  constructor(pagesDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevPagesPageNormalizer(pagesDir, extensions)\n    this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions)\n    this.bundlePath = new DevPagesBundlePathNormalizer(this.page)\n  }\n}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesAPILocaleRouteMatcher,\n  PagesAPIRouteMatcher,\n} from '../route-matchers/pages-api-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesAPIRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesAPIRouteMatcher>> {\n    // This matcher is only for Pages API routes.\n    const pathnames = Object.keys(manifest).filter((pathname) =>\n      isAPIRoute(pathname)\n    )\n\n    const matchers: Array<PagesAPIRouteMatcher> = []\n\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesAPILocaleRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesAPIRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { PagesRouteDefinition } from '../route-definitions/pages-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesRouteMatcher extends RouteMatcher<PagesRouteDefinition> {}\n\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher<PagesRouteDefinition> {}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesLocaleRouteMatcher,\n  PagesRouteMatcher,\n} from '../route-matchers/pages-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesRouteMatcher>> {\n    // This matcher is only for Pages routes, not Pages API routes which are\n    // included in this manifest.\n    const pathnames = Object.keys(manifest)\n      .filter((pathname) => !isAPIRoute(pathname))\n      // Remove any blocked pages (page that can't be routed to, like error or\n      // internal pages).\n      .filter((pathname) => {\n        const normalized =\n          this.i18nProvider?.analyze(pathname).pathname ?? pathname\n\n        // Skip any blocked pages.\n        if (BLOCKED_PAGES.includes(normalized)) return false\n\n        return true\n      })\n\n    const matchers: Array<PagesRouteMatcher> = []\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesLocaleRouteMatcher({\n            kind: RouteKind.PAGES,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesRouteMatcher({\n            kind: RouteKind.PAGES,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { Manifest, ManifestLoader } from './manifest-loader'\n\nexport class ServerManifestLoader implements ManifestLoader {\n  constructor(private readonly getter: (name: string) => Manifest | null) {}\n\n  public load(name: string): Manifest | null {\n    return this.getter(name)\n  }\n}\n","import type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { NextParsedUrlQuery } from '../request-meta'\n\n/**\n * The result of matching a locale aware route.\n */\nexport interface LocaleAnalysisResult {\n  /**\n   * The pathname without the locale prefix (if any).\n   */\n  pathname: string\n\n  /**\n   * The detected locale. If no locale was detected, this will be `undefined`.\n   */\n  detectedLocale?: string\n\n  /**\n   * True if the locale was inferred from the default locale.\n   */\n  inferredFromDefault: boolean\n}\n\ntype LocaleAnalysisOptions = {\n  /**\n   * When provided, it will be used as the default locale if the locale\n   * cannot be inferred from the pathname.\n   */\n  defaultLocale?: string\n}\n\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */\nexport class I18NProvider {\n  private readonly lowerCaseLocales: ReadonlyArray<string>\n  private readonly lowerCaseDomains?: ReadonlyArray<\n    DomainLocale & {\n      // The configuration references a domain with an optional port, but the\n      // hostname is always the domain without the port and is used for\n      // matching.\n      hostname: string\n    }\n  >\n\n  constructor(public readonly config: Readonly<I18NConfig>) {\n    if (!config.locales.length) {\n      throw new Error('Invariant: No locales provided')\n    }\n\n    this.lowerCaseLocales = config.locales.map((locale) => locale.toLowerCase())\n    this.lowerCaseDomains = config.domains?.map((domainLocale) => {\n      const domain = domainLocale.domain.toLowerCase()\n      return {\n        defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n        hostname: domain.split(':', 1)[0],\n        domain,\n        locales: domainLocale.locales?.map((locale) => locale.toLowerCase()),\n        http: domainLocale.http,\n      }\n    })\n  }\n\n  /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */\n  public detectDomainLocale(\n    hostname?: string,\n    detectedLocale?: string\n  ): DomainLocale | undefined {\n    if (!hostname || !this.lowerCaseDomains || !this.config.domains) return\n\n    if (detectedLocale) detectedLocale = detectedLocale.toLowerCase()\n\n    for (let i = 0; i < this.lowerCaseDomains.length; i++) {\n      const domainLocale = this.lowerCaseDomains[i]\n      if (\n        // We assume that the hostname is already lowercased.\n        domainLocale.hostname === hostname ||\n        // Configuration validation ensures that the locale is not repeated in\n        // other domains locales.\n        domainLocale.locales?.some((locale) => locale === detectedLocale)\n      ) {\n        return this.config.domains[i]\n      }\n    }\n\n    return\n  }\n\n  /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param pathname the pathname that could contain a locale prefix\n   * @param query the query object\n   * @returns the locale analysis result\n   */\n  public fromQuery(\n    pathname: string,\n    query: NextParsedUrlQuery\n  ): LocaleAnalysisResult {\n    const detectedLocale = query.__nextLocale\n\n    // If a locale was detected on the query, analyze the pathname to ensure\n    // that the locale matches.\n    if (detectedLocale) {\n      const analysis = this.analyze(pathname)\n\n      // If the analysis contained a locale we should validate it against the\n      // query and strip it from the pathname.\n      if (analysis.detectedLocale) {\n        if (analysis.detectedLocale !== detectedLocale) {\n          throw new Error(\n            `Invariant: The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`\n          )\n        }\n\n        pathname = analysis.pathname\n      }\n    }\n\n    return {\n      pathname,\n      detectedLocale,\n      inferredFromDefault: query.__nextInferredLocaleFromDefault === '1',\n    }\n  }\n\n  /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */\n  public analyze(\n    pathname: string,\n    options: LocaleAnalysisOptions = {}\n  ): LocaleAnalysisResult {\n    let detectedLocale: string | undefined = options.defaultLocale\n\n    // By default, we assume that the default locale was inferred if there was\n    // no detected locale.\n    let inferredFromDefault = typeof detectedLocale === 'string'\n\n    // The first segment will be empty, because it has a leading `/`. If\n    // there is no further segment, there is no locale (or it's the default).\n    const segments = pathname.split('/', 2)\n    if (!segments[1])\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // The second segment will contain the locale part if any.\n    const segment = segments[1].toLowerCase()\n\n    // See if the segment matches one of the locales. If it doesn't, there is\n    // no locale (or it's the default).\n    const index = this.lowerCaseLocales.indexOf(segment)\n    if (index < 0)\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // Return the case-sensitive locale.\n    detectedLocale = this.config.locales[index]\n    inferredFromDefault = false\n\n    // Remove the `/${locale}` part of the pathname.\n    pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n    return {\n      detectedLocale,\n      pathname,\n      inferredFromDefault,\n    }\n  }\n}\n","import type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport { isNodeNextResponse } from './base-http/helpers'\n\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { splitCookiesString } from './web/utils'\n\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */\nexport async function sendResponse(\n  req: BaseNextRequest,\n  res: BaseNextResponse,\n  response: Response,\n  waitUntil?: Promise<unknown>\n): Promise<void> {\n  if (\n    // The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' &&\n    isNodeNextResponse(res)\n  ) {\n    // Copy over the response status.\n    res.statusCode = response.status\n    res.statusMessage = response.statusText\n\n    // Copy over the response headers.\n    response.headers?.forEach((value, name) => {\n      // The append handling is special cased for `set-cookie`.\n      if (name.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          res.appendHeader(name, cookie)\n        }\n      } else {\n        res.appendHeader(name, value)\n      }\n    })\n\n    /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */\n\n    const { originalResponse } = res\n\n    // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n    if (response.body && req.method !== 'HEAD') {\n      await pipeToNodeResponse(response.body, originalResponse, waitUntil)\n    } else {\n      originalResponse.end()\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/client/components/static-generation-async-storage.external.js\");","import type { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { staticGenerationAsyncStorage } from '../../../../client/components/static-generation-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting staticGenerationAsyncStore\n      const staticGenerationAsyncStore = staticGenerationAsyncStorage.getStore()\n      if (staticGenerationAsyncStore) {\n        staticGenerationAsyncStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    return new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (\n              ...args:\n                | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n                | [options: ResponseCookie]\n            ) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                return target.set(...args)\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n","import { getPathMatch } from '../../shared/lib/router/utils/path-match'\n\nconst matcher = getPathMatch('/_next/data/:path*')\n\nexport function matchNextDataPathname(pathname: string | null | undefined) {\n  if (typeof pathname !== 'string') return false\n\n  return matcher(pathname)\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class SuffixPathnameNormalizer implements Normalizer {\n  constructor(private readonly suffix: string) {}\n\n  public match(pathname: string) {\n    // If the pathname doesn't end in the suffix, we don't match.\n    if (!pathname.endsWith(this.suffix)) return false\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    return pathname.substring(0, pathname.length - this.suffix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class RSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_SUFFIX)\n  }\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class PrefixPathnameNormalizer implements Normalizer {\n  constructor(private readonly prefix: string) {\n    if (prefix.endsWith('/')) {\n      throw new Error(\n        `PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`\n      )\n    }\n  }\n\n  public match(pathname: string) {\n    // If the pathname doesn't start with the prefix, we don't match.\n    if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n      return false\n    }\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    if (pathname.length === this.prefix.length) {\n      return '/'\n    }\n\n    return pathname.substring(this.prefix.length)\n  }\n}\n","import { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { PrefixPathnameNormalizer } from './prefix'\n\nconst prefix = '/_next/postponed/resume'\n\nexport class PostponedPathnameNormalizer\n  extends PrefixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(prefix)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    // Remove the prefix.\n    pathname = super.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { ACTION_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class ActionPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(ACTION_SUFFIX)\n  }\n}\n","import type { IncomingHttpHeaders } from 'node:http'\n\nimport { FLIGHT_PARAMETERS } from '../../client/components/app-router-headers'\n\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */\nexport function stripFlightHeaders(headers: IncomingHttpHeaders) {\n  for (const [header] of FLIGHT_PARAMETERS) {\n    delete headers[header.toLowerCase()]\n  }\n}\n","import type { AppRouteRouteModule } from './app-route/module'\nimport type { AppPageRouteModule } from './app-page/module'\nimport type { PagesRouteModule } from './pages/module'\nimport type { PagesAPIRouteModule } from './pages-api/module'\n\nimport type { RouteModule } from './route-module'\n\nimport { RouteKind } from '../route-kind'\n\nexport function isAppRouteRouteModule(\n  routeModule: RouteModule\n): routeModule is AppRouteRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_ROUTE\n}\n\nexport function isAppPageRouteModule(\n  routeModule: RouteModule\n): routeModule is AppPageRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_PAGE\n}\n\nexport function isPagesRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES\n}\n\nexport function isPagesAPIRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesAPIRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES_API\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_PREFETCH_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class PrefetchRSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_PREFETCH_SUFFIX)\n  }\n\n  public match(pathname: string): boolean {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return true\n    }\n\n    return super.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return '/'\n    }\n\n    return super.normalize(pathname, matched)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport { PrefixPathnameNormalizer } from './prefix'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class NextDataPathnameNormalizer implements PathnameNormalizer {\n  private readonly prefix: PrefixPathnameNormalizer\n  private readonly suffix = new SuffixPathnameNormalizer('.json')\n  constructor(buildID: string) {\n    if (!buildID) {\n      throw new Error('Invariant: buildID is required')\n    }\n\n    this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`)\n  }\n\n  public match(pathname: string) {\n    return this.prefix.match(pathname) && this.suffix.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    pathname = this.prefix.normalize(pathname, true)\n    pathname = this.suffix.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n","export function getBuiltinRequestContext():\n  | BuiltinRequestContextValue\n  | undefined {\n  const _globalThis = globalThis as GlobalThisWithRequestContext\n  const ctx =\n    _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL] ??\n    _globalThis[VERCEL_REQUEST_CONTEXT_SYMBOL]\n  return ctx?.get()\n}\n\n/** This should be considered unstable until `unstable_after` is stablized. */\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context')\n\n// TODO(after): this is a temporary workaround.\n// Remove this when vercel builder is updated to provide '@next/request-context'.\nconst VERCEL_REQUEST_CONTEXT_SYMBOL = Symbol.for('@vercel/request-context')\n\ntype GlobalThisWithRequestContext = typeof globalThis & {\n  [NEXT_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n  /** @deprecated */\n  [VERCEL_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n}\n\n/** A request context provided by the platform.\n * It should be considered unstable until `unstable_after` is stablized. */\nexport type BuiltinRequestContext = {\n  get(): BuiltinRequestContextValue | undefined\n}\n\nexport type BuiltinRequestContextValue = { waitUntil?: WaitUntil }\nexport type WaitUntil = (promise: Promise<any>) => void\n","import type { __ApiPreviewProps } from './api-utils'\nimport type { FontManifest, FontConfig } from './font-utils'\nimport type { LoadComponentsReturnType } from './load-components'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { Params } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig, NextConfigComplete } from './config-shared'\nimport type {\n  NextParsedUrlQuery,\n  NextUrlWithParsedQuery,\n  RequestMeta,\n} from './request-meta'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RenderOptsPartial as PagesRenderOptsPartial } from './render'\nimport type { RenderOptsPartial as AppRenderOptsPartial } from './app-render/types'\nimport type {\n  CachedAppPageValue,\n  CachedPageValue,\n  ResponseCacheBase,\n  ResponseCacheEntry,\n  ResponseGenerator,\n} from './response-cache'\nimport type { UrlWithParsedQuery } from 'url'\nimport {\n  NormalizeError,\n  DecodeError,\n  normalizeRepeatedSlashes,\n  MissingStaticPage,\n} from '../shared/lib/utils'\nimport type { PreviewData } from '../types'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport type {\n  ManifestRewriteRoute,\n  ManifestRoute,\n  PrerenderManifest,\n} from '../build'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport type { AppPageRouteModule } from './route-modules/app-page/module'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { AppRouteRouteHandlerContext } from './route-modules/app-route/module'\nimport type {\n  Server as HTTPServer,\n  IncomingMessage,\n  ServerResponse as HTTPServerResponse,\n} from 'http'\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info'\nimport type { TLSSocket } from 'tls'\nimport type { PathnameNormalizer } from './normalizers/request/pathname-normalizer'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { formatHostname } from './lib/format-hostname'\nimport { getRedirectStatus } from '../lib/redirect-status'\nimport { isEdgeRuntime } from '../lib/is-edge-runtime'\nimport {\n  APP_PATHS_MANIFEST,\n  NEXT_BUILTIN_DOCUMENT,\n  PAGES_MANIFEST,\n  STATIC_STATUS_PAGES,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport { setConfig } from '../shared/lib/runtime-config.external'\nimport {\n  formatRevalidate,\n  type Revalidate,\n  type SwrDelta,\n} from './lib/revalidate'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage } from './utils'\nimport { isBot } from '../shared/lib/router/utils/is-bot'\nimport RenderResult from './render-result'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport * as Log from '../build/output/log'\nimport escapePathDelimiters from '../shared/lib/router/utils/escape-path-delimiters'\nimport { getUtils } from './server-utils'\nimport isError, { getProperError } from '../lib/is-error'\nimport {\n  addRequestMeta,\n  getRequestMeta,\n  removeRequestMeta,\n  setRequestMeta,\n} from './request-meta'\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\nimport { getHostname } from '../shared/lib/get-hostname'\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport {\n  RSC_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_URL,\n  NEXT_ROUTER_STATE_TREE,\n} from '../client/components/app-router-headers'\nimport type {\n  MatchOptions,\n  RouteMatcherManager,\n} from './route-matcher-managers/route-matcher-manager'\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer'\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager'\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider'\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider'\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider'\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider'\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader'\nimport { getTracer, isBubbledError, SpanKind } from './lib/trace/tracer'\nimport { BaseServerSpan } from './lib/trace/constants'\nimport { I18NProvider } from './lib/i18n-provider'\nimport { sendResponse } from './send-response'\nimport {\n  handleBadRequestResponse,\n  handleInternalServerErrorResponse,\n} from './route-modules/helpers/response-handlers'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  normalizeNextQueryParam,\n  toNodeOutgoingHttpHeaders,\n} from './web/utils'\nimport { CACHE_ONE_YEAR, NEXT_CACHE_TAGS_HEADER } from '../lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from './web/spec-extension/adapters/next-request'\nimport { matchNextDataPathname } from './lib/match-next-data-pathname'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc'\nimport { PostponedPathnameNormalizer } from './normalizers/request/postponed'\nimport { ActionPathnameNormalizer } from './normalizers/request/action'\nimport { stripFlightHeaders } from './app-render/strip-flight-headers'\nimport {\n  isAppPageRouteModule,\n  isAppRouteRouteModule,\n  isPagesRouteModule,\n} from './route-modules/checks'\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc'\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data'\nimport { getIsServerAction } from './lib/server-action-request-meta'\nimport { isInterceptionRouteAppPath } from './lib/interception-routes'\nimport { toRoute } from './lib/to-route'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers'\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header'\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr'\nimport {\n  getBuiltinRequestContext,\n  type WaitUntil,\n} from './after/builtin-request-context'\nimport { ENCODED_TAGS } from './stream-utils/encodedTags'\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: NextParsedUrlQuery\n}\n\nexport interface MiddlewareRoutingItem {\n  page: string\n  match: MiddlewareRouteMatch\n  matchers?: MiddlewareMatcher[]\n}\n\nexport type RouteHandler<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = (\n  req: ServerRequest,\n  res: ServerResponse,\n  parsedUrl: NextUrlWithParsedQuery\n) => PromiseLike<boolean> | boolean\n\n/**\n * The normalized route manifest is the same as the route manifest, but with\n * the rewrites normalized to the object shape that the router expects.\n */\nexport type NormalizedRouteManifest = {\n  readonly dynamicRoutes: ReadonlyArray<ManifestRoute>\n  readonly rewrites: {\n    readonly beforeFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly afterFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly fallback: ReadonlyArray<ManifestRewriteRoute>\n  }\n}\n\nexport interface Options {\n  /**\n   * Object containing the configuration next.config.js\n   */\n  conf: NextConfig\n  /**\n   * Set to false when the server was created by Next.js\n   */\n  customServer?: boolean\n  /**\n   * Tells if Next.js is running in dev mode\n   */\n  dev?: boolean\n  /**\n   * Enables the experimental testing mode.\n   */\n  experimentalTestProxy?: boolean\n\n  /**\n   * Whether or not the dev server is running in experimental HTTPS mode\n   */\n  experimentalHttpsServer?: boolean\n  /**\n   * Where the Next project is located\n   */\n  dir?: string\n  /**\n   * Tells if Next.js is at the platform-level\n   */\n  minimalMode?: boolean\n  /**\n   * Hide error messages containing server information\n   */\n  quiet?: boolean\n  /**\n   * The hostname the server is running behind\n   */\n  hostname?: string\n  /**\n   * The port the server is running behind\n   */\n  port?: number\n  /**\n   * The HTTP Server that Next.js is running behind\n   */\n  httpServer?: HTTPServer\n}\n\nexport type RenderOpts = PagesRenderOptsPartial & AppRenderOptsPartial\n\nexport type LoadedRenderOpts = RenderOpts &\n  LoadComponentsReturnType &\n  RequestLifecycleOpts\n\nexport type RequestLifecycleOpts = {\n  waitUntil: ((promise: Promise<any>) => void) | undefined\n  onClose: ((callback: () => void) => void) | undefined\n}\n\ntype BaseRenderOpts = RenderOpts & {\n  poweredByHeader: boolean\n  generateEtags: boolean\n  previewProps: __ApiPreviewProps\n}\n\n/**\n * The public interface for rendering with the server programmatically. This\n * would typically only allow the base request or response to extend it, but\n * because this can be programmatically accessed, we assume that it could also\n * be the base Node.js request and response types.\n */\nexport interface BaseRequestHandler<\n  ServerRequest extends BaseNextRequest | IncomingMessage = BaseNextRequest,\n  ServerResponse extends\n    | BaseNextResponse\n    | HTTPServerResponse = BaseNextResponse,\n> {\n  (\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void> | void\n}\n\nexport type RequestContext<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = {\n  req: ServerRequest\n  res: ServerResponse\n  pathname: string\n  query: NextParsedUrlQuery\n  renderOpts: RenderOpts\n}\n\nexport type FallbackMode = false | undefined | 'blocking' | 'static'\n\nexport class NoFallbackError extends Error {}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  type: 'html' | 'json' | 'rsc'\n  body: RenderResult\n  revalidate?: Revalidate\n}\n\nexport type NextEnabledDirectories = {\n  readonly pages: boolean\n  readonly app: boolean\n}\n\nexport default abstract class Server<\n  ServerOptions extends Options = Options,\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> {\n  public readonly hostname?: string\n  public readonly fetchHostname?: string\n  public readonly port?: number\n  protected readonly dir: string\n  protected readonly quiet: boolean\n  protected readonly nextConfig: NextConfigComplete\n  protected readonly distDir: string\n  protected readonly publicDir: string\n  protected readonly hasStaticDir: boolean\n  protected readonly pagesManifest?: PagesManifest\n  protected readonly appPathsManifest?: PagesManifest\n  protected readonly buildId: string\n  protected readonly minimalMode: boolean\n  protected readonly renderOpts: BaseRenderOpts\n  protected readonly serverOptions: Readonly<ServerOptions>\n  protected readonly appPathRoutes?: Record<string, string[]>\n  protected readonly clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  protected interceptionRoutePatterns: RegExp[]\n  protected nextFontManifest?: DeepReadonly<NextFontManifest>\n  private readonly responseCache: ResponseCacheBase\n\n  protected abstract getPublicDir(): string\n  protected abstract getHasStaticDir(): boolean\n  protected abstract getPagesManifest(): PagesManifest | undefined\n  protected abstract getAppPathsManifest(): PagesManifest | undefined\n  protected abstract getBuildId(): string\n  protected abstract getinterceptionRoutePatterns(): RegExp[]\n\n  protected readonly enabledDirectories: NextEnabledDirectories\n  protected abstract getEnabledDirectories(dev: boolean): NextEnabledDirectories\n\n  protected readonly experimentalTestProxy?: boolean\n\n  protected abstract findPageComponents(params: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure?: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null>\n  protected abstract getFontManifest(): DeepReadonly<FontManifest> | undefined\n  protected abstract getPrerenderManifest(): DeepReadonly<PrerenderManifest>\n  protected abstract getNextFontManifest():\n    | DeepReadonly<NextFontManifest>\n    | undefined\n  protected abstract attachRequestMeta(\n    req: ServerRequest,\n    parsedUrl: NextUrlWithParsedQuery\n  ): void\n  protected abstract getFallback(page: string): Promise<string>\n  protected abstract hasPage(pathname: string): Promise<boolean>\n\n  protected abstract sendRenderResult(\n    req: ServerRequest,\n    res: ServerResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json' | 'rsc'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate?: Revalidate\n      swrDelta?: SwrDelta\n    }\n  ): Promise<void>\n\n  protected abstract runApi(\n    req: ServerRequest,\n    res: ServerResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean>\n\n  protected abstract renderHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult>\n\n  protected abstract getPrefetchRsc(pathname: string): Promise<string | null>\n\n  protected abstract getIncrementalCache(options: {\n    requestHeaders: Record<string, undefined | string | string[]>\n    requestProtocol: 'http' | 'https'\n  }): Promise<import('./lib/incremental-cache').IncrementalCache>\n\n  protected abstract getResponseCache(options: {\n    dev: boolean\n  }): ResponseCacheBase\n\n  protected abstract loadEnvConfig(params: {\n    dev: boolean\n    forceReload?: boolean\n  }): void\n\n  // TODO-APP: (wyattjoh): Make protected again. Used for turbopack in route-resolver.ts right now.\n  public readonly matchers: RouteMatcherManager\n  protected readonly i18nProvider?: I18NProvider\n  protected readonly localeNormalizer?: LocaleRouteNormalizer\n\n  protected readonly normalizers: {\n    readonly action: ActionPathnameNormalizer | undefined\n    readonly postponed: PostponedPathnameNormalizer | undefined\n    readonly rsc: RSCPathnameNormalizer | undefined\n    readonly prefetchRSC: PrefetchRSCPathnameNormalizer | undefined\n    readonly data: NextDataPathnameNormalizer | undefined\n  }\n\n  private readonly isAppPPREnabled: boolean\n\n  public constructor(options: ServerOptions) {\n    const {\n      dir = '.',\n      quiet = false,\n      conf,\n      dev = false,\n      minimalMode = false,\n      customServer = true,\n      hostname,\n      port,\n      experimentalTestProxy,\n    } = options\n\n    this.experimentalTestProxy = experimentalTestProxy\n    this.serverOptions = options\n\n    this.dir =\n      process.env.NEXT_RUNTIME === 'edge' ? dir : require('path').resolve(dir)\n\n    this.quiet = quiet\n    this.loadEnvConfig({ dev })\n\n    // TODO: should conf be normalized to prevent missing\n    // values from causing issues as this can be user provided\n    this.nextConfig = conf as NextConfigComplete\n    this.hostname = hostname\n    if (this.hostname) {\n      // we format the hostname so that it can be fetched\n      this.fetchHostname = formatHostname(this.hostname)\n    }\n    this.port = port\n    this.distDir =\n      process.env.NEXT_RUNTIME === 'edge'\n        ? this.nextConfig.distDir\n        : require('path').join(this.dir, this.nextConfig.distDir)\n    this.publicDir = this.getPublicDir()\n    this.hasStaticDir = !minimalMode && this.getHasStaticDir()\n\n    this.i18nProvider = this.nextConfig.i18n?.locales\n      ? new I18NProvider(this.nextConfig.i18n)\n      : undefined\n\n    // Configure the locale normalizer, it's used for routes inside `pages/`.\n    this.localeNormalizer = this.i18nProvider\n      ? new LocaleRouteNormalizer(this.i18nProvider)\n      : undefined\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n    } = this.nextConfig\n\n    this.buildId = this.getBuildId()\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] =\n      minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE\n\n    this.enabledDirectories = this.getEnabledDirectories(dev)\n\n    this.isAppPPREnabled =\n      this.enabledDirectories.app &&\n      checkIsAppPPREnabled(this.nextConfig.experimental.ppr)\n\n    this.normalizers = {\n      // We should normalize the pathname from the RSC prefix only in minimal\n      // mode as otherwise that route is not exposed external to the server as\n      // we instead only rely on the headers.\n      postponed:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PostponedPathnameNormalizer()\n          : undefined,\n      rsc:\n        this.enabledDirectories.app && this.minimalMode\n          ? new RSCPathnameNormalizer()\n          : undefined,\n      prefetchRSC:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PrefetchRSCPathnameNormalizer()\n          : undefined,\n      data: this.enabledDirectories.pages\n        ? new NextDataPathnameNormalizer(this.buildId)\n        : undefined,\n      action:\n        this.enabledDirectories.app && this.minimalMode\n          ? new ActionPathnameNormalizer()\n          : undefined,\n    }\n\n    this.nextFontManifest = this.getNextFontManifest()\n\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n    }\n\n    this.renderOpts = {\n      supportsDynamicResponse: true,\n      trailingSlash: this.nextConfig.trailingSlash,\n      deploymentId: this.nextConfig.deploymentId,\n      strictNextHead: this.nextConfig.experimental.strictNextHead ?? true,\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPrerenderManifest().preview,\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: this.nextConfig.images,\n      optimizeFonts: this.nextConfig.optimizeFonts as FontConfig,\n      fontManifest:\n        (this.nextConfig.optimizeFonts as FontConfig) && !dev\n          ? this.getFontManifest()\n          : undefined,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      nextConfigOutput: this.nextConfig.output,\n      nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n      disableOptimizedLoading:\n        this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n      serverComponents: this.enabledDirectories.app,\n      enableTainting: this.nextConfig.experimental.taint,\n      crossOrigin: this.nextConfig.crossOrigin\n        ? this.nextConfig.crossOrigin\n        : undefined,\n      largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n      // Only the `publicRuntimeConfig` key is exposed to the client side\n      // It'll be rendered as part of __NEXT_DATA__ on the client side\n      runtimeConfig:\n        Object.keys(publicRuntimeConfig).length > 0\n          ? publicRuntimeConfig\n          : undefined,\n\n      // @ts-expect-error internal field not publicly exposed\n      isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n      experimental: {\n        swrDelta: this.nextConfig.swrDelta,\n        clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n        after: this.nextConfig.experimental.after ?? false,\n      },\n    }\n\n    // Initialize next/config with the environment configuration\n    setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.pagesManifest = this.getPagesManifest()\n    this.appPathsManifest = this.getAppPathsManifest()\n    this.appPathRoutes = this.getAppPathRoutes()\n    this.interceptionRoutePatterns = this.getinterceptionRoutePatterns()\n\n    // Configure the routes.\n    this.matchers = this.getRouteMatchers()\n\n    // Start route compilation. We don't wait for the routes to finish loading\n    // because we use the `waitTillReady` promise below in `handleRequest` to\n    // wait. Also we can't `await` in the constructor.\n    void this.matchers.reload()\n\n    this.setAssetPrefix(assetPrefix)\n    this.responseCache = this.getResponseCache({ dev })\n  }\n\n  protected reloadMatchers() {\n    return this.matchers.reload()\n  }\n\n  private handleRSCRequest: RouteHandler<ServerRequest, ServerResponse> = (\n    req,\n    _res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname) return false\n\n    if (this.normalizers.prefetchRSC?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n    } else if (this.normalizers.rsc?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.rsc.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a RSC request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n    } else if (req.headers['x-now-route-matches']) {\n      // If we didn't match, return with the flight headers stripped. If in\n      // minimal mode we didn't match based on the path, this can't be a RSC\n      // request. This is because Vercel only sends this header during\n      // revalidation requests and we want the cache to instead depend on the\n      // request path for flight information.\n      stripFlightHeaders(req.headers)\n\n      return false\n    } else if (req.headers[RSC_HEADER.toLowerCase()] === '1') {\n      addRequestMeta(req, 'isRSCRequest', true)\n\n      if (req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] === '1') {\n        addRequestMeta(req, 'isPrefetchRSCRequest', true)\n      }\n    } else {\n      // Otherwise just return without doing anything.\n      return false\n    }\n\n    if (req.url) {\n      const parsed = parseUrl(req.url)\n      parsed.pathname = parsedUrl.pathname\n      req.url = formatUrl(parsed)\n    }\n\n    return false\n  }\n\n  private handleNextDataRequest: RouteHandler<ServerRequest, ServerResponse> =\n    async (req, res, parsedUrl) => {\n      const middleware = this.getMiddleware()\n      const params = matchNextDataPathname(parsedUrl.pathname)\n\n      // ignore for non-next data URLs\n      if (!params || !params.path) {\n        return false\n      }\n\n      if (params.path[0] !== this.buildId) {\n        // Ignore if its a middleware request when we aren't on edge.\n        if (\n          process.env.NEXT_RUNTIME !== 'edge' &&\n          getRequestMeta(req, 'middlewareInvoke')\n        ) {\n          return false\n        }\n\n        // Make sure to 404 if the buildId isn't correct\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // remove buildId from URL\n      params.path.shift()\n\n      const lastParam = params.path[params.path.length - 1]\n\n      // show 404 if it doesn't end with .json\n      if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // re-create page's pathname\n      let pathname = `/${params.path.join('/')}`\n      pathname = getRouteFromAssetPath(pathname, '.json')\n\n      // ensure trailing slash is normalized per config\n      if (middleware) {\n        if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n          pathname += '/'\n        }\n        if (\n          !this.nextConfig.trailingSlash &&\n          pathname.length > 1 &&\n          pathname.endsWith('/')\n        ) {\n          pathname = pathname.substring(0, pathname.length - 1)\n        }\n      }\n\n      if (this.i18nProvider) {\n        // Remove the port from the hostname if present.\n        const hostname = req?.headers.host?.split(':', 1)[0].toLowerCase()\n\n        const domainLocale = this.i18nProvider.detectDomainLocale(hostname)\n        const defaultLocale =\n          domainLocale?.defaultLocale ?? this.i18nProvider.config.defaultLocale\n\n        const localePathResult = this.i18nProvider.analyze(pathname)\n\n        // If the locale is detected from the path, we need to remove it\n        // from the pathname.\n        if (localePathResult.detectedLocale) {\n          pathname = localePathResult.pathname\n        }\n\n        // Update the query with the detected locale and default locale.\n        parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n        parsedUrl.query.__nextDefaultLocale = defaultLocale\n\n        // If the locale is not detected from the path, we need to mark that\n        // it was not inferred from default.\n        if (!localePathResult.detectedLocale) {\n          delete parsedUrl.query.__nextInferredLocaleFromDefault\n        }\n\n        // If no locale was detected and we don't have middleware, we need\n        // to render a 404 page.\n        if (!localePathResult.detectedLocale && !middleware) {\n          parsedUrl.query.__nextLocale = defaultLocale\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n      }\n\n      parsedUrl.pathname = pathname\n      parsedUrl.query.__nextDataReq = '1'\n\n      return false\n    }\n\n  protected handleNextImageRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallRenderRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallMiddlewareRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected getRouteMatchers(): RouteMatcherManager {\n    // Create a new manifest loader that get's the manifests from the server.\n    const manifestLoader = new ServerManifestLoader((name) => {\n      switch (name) {\n        case PAGES_MANIFEST:\n          return this.getPagesManifest() ?? null\n        case APP_PATHS_MANIFEST:\n          return this.getAppPathsManifest() ?? null\n        default:\n          return null\n      }\n    })\n\n    // Configure the matchers and handlers.\n    const matchers: RouteMatcherManager = new DefaultRouteMatcherManager()\n\n    // Match pages under `pages/`.\n    matchers.push(\n      new PagesRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // Match api routes under `pages/api/`.\n    matchers.push(\n      new PagesAPIRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // If the app directory is enabled, then add the app matchers and handlers.\n    if (this.enabledDirectories.app) {\n      // Match app pages under `app/`.\n      matchers.push(\n        new AppPageRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n      matchers.push(\n        new AppRouteRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n    }\n\n    return matchers\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    Log.error(err)\n  }\n\n  public async handleRequest(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    await this.prepare()\n    const method = req.method.toUpperCase()\n\n    const tracer = getTracer()\n    return tracer.withPropagatedContext(req.headers, () => {\n      return tracer.trace(\n        BaseServerSpan.handleRequest,\n        {\n          spanName: `${method} ${req.url}`,\n          kind: SpanKind.SERVER,\n          attributes: {\n            'http.method': method,\n            'http.target': req.url,\n          },\n        },\n        async (span) =>\n          this.handleRequestImpl(req, res, parsedUrl).finally(() => {\n            if (!span) return\n\n            const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n            span.setAttributes({\n              'http.status_code': res.statusCode,\n              'next.rsc': isRSCRequest,\n            })\n\n            const rootSpanAttributes = tracer.getRootSpanAttributes()\n            // We were unable to get attributes, probably OTEL is not enabled\n            if (!rootSpanAttributes) return\n\n            if (\n              rootSpanAttributes.get('next.span_type') !==\n              BaseServerSpan.handleRequest\n            ) {\n              console.warn(\n                `Unexpected root span type '${rootSpanAttributes.get(\n                  'next.span_type'\n                )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n              )\n              return\n            }\n\n            const route = rootSpanAttributes.get('next.route')\n            if (route) {\n              const name = isRSCRequest\n                ? `RSC ${method} ${route}`\n                : `${method} ${route}`\n\n              span.setAttributes({\n                'next.route': route,\n                'http.route': route,\n                'next.span_name': name,\n              })\n              span.updateName(name)\n            } else {\n              span.updateName(\n                isRSCRequest\n                  ? `RSC ${method} ${req.url}`\n                  : `${method} ${req.url}`\n              )\n            }\n          })\n      )\n    })\n  }\n\n  private async handleRequestImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    try {\n      // Wait for the matchers to be ready.\n      await this.matchers.waitTillReady()\n\n      // ensure cookies set in middleware are merged and\n      // not overridden by API routes/getServerSideProps\n      patchSetHeaderWithCookieSupport(\n        req,\n        isNodeNextResponse(res) ? res.originalResponse : res\n      )\n\n      const urlParts = (req.url || '').split('?', 1)\n      const urlNoQuery = urlParts[0]\n\n      // this normalizes repeated slashes in the path e.g. hello//world ->\n      // hello/world or backslashes to forward slashes, this does not\n      // handle trailing slash as that is handled the same as a next.config.js\n      // redirect\n      if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n        const cleanUrl = normalizeRepeatedSlashes(req.url!)\n        res.redirect(cleanUrl, 308).body(cleanUrl).send()\n        return\n      }\n\n      // Parse url if parsedUrl not provided\n      if (!parsedUrl || typeof parsedUrl !== 'object') {\n        if (!req.url) {\n          throw new Error('Invariant: url can not be undefined')\n        }\n\n        parsedUrl = parseUrl(req.url!, true)\n      }\n\n      if (!parsedUrl.pathname) {\n        throw new Error(\"Invariant: pathname can't be empty\")\n      }\n\n      // Parse the querystring ourselves if the user doesn't handle querystring parsing\n      if (typeof parsedUrl.query === 'string') {\n        parsedUrl.query = Object.fromEntries(\n          new URLSearchParams(parsedUrl.query)\n        )\n      }\n\n      // Update the `x-forwarded-*` headers.\n      const { originalRequest = null } = isNodeNextRequest(req) ? req : {}\n      const xForwardedProto = originalRequest?.headers['x-forwarded-proto']\n      const isHttps = xForwardedProto\n        ? xForwardedProto === 'https'\n        : !!(originalRequest?.socket as TLSSocket)?.encrypted\n\n      req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname\n      req.headers['x-forwarded-port'] ??= this.port\n        ? this.port.toString()\n        : isHttps\n          ? '443'\n          : '80'\n      req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http'\n      req.headers['x-forwarded-for'] ??= originalRequest?.socket?.remoteAddress\n\n      // This should be done before any normalization of the pathname happens as\n      // it captures the initial URL.\n      this.attachRequestMeta(req, parsedUrl)\n\n      let finished = await this.handleRSCRequest(req, res, parsedUrl)\n      if (finished) return\n\n      const domainLocale = this.i18nProvider?.detectDomainLocale(\n        getHostname(parsedUrl, req.headers)\n      )\n\n      const defaultLocale =\n        domainLocale?.defaultLocale || this.nextConfig.i18n?.defaultLocale\n      parsedUrl.query.__nextDefaultLocale = defaultLocale\n\n      const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'))\n      const pathnameInfo = getNextPathnameInfo(url.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider,\n      })\n      url.pathname = pathnameInfo.pathname\n\n      if (pathnameInfo.basePath) {\n        req.url = removePathPrefix(req.url!, this.nextConfig.basePath)\n      }\n\n      const useMatchedPathHeader =\n        this.minimalMode && typeof req.headers['x-matched-path'] === 'string'\n\n      // TODO: merge handling with invokePath\n      if (useMatchedPathHeader) {\n        try {\n          if (this.enabledDirectories.app) {\n            // ensure /index path is normalized for prerender\n            // in minimal mode\n            if (req.url.match(/^\\/index($|\\?)/)) {\n              req.url = req.url.replace(/^\\/index/, '/')\n            }\n            parsedUrl.pathname =\n              parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname\n          }\n\n          // x-matched-path is the source of truth, it tells what page\n          // should be rendered because we don't process rewrites in minimalMode\n          let { pathname: matchedPath } = new URL(\n            req.headers['x-matched-path'] as string,\n            'http://localhost'\n          )\n\n          let { pathname: urlPathname } = new URL(req.url, 'http://localhost')\n\n          // For ISR the URL is normalized to the prerenderPath so if\n          // it's a data request the URL path will be the data URL,\n          // basePath is already stripped by this point\n          if (this.normalizers.data?.match(urlPathname)) {\n            parsedUrl.query.__nextDataReq = '1'\n          }\n          // In minimal mode, if PPR is enabled, then we should check to see if\n          // the matched path is a postponed path, and if it is, handle it.\n          else if (\n            this.normalizers.postponed?.match(matchedPath) &&\n            req.method === 'POST'\n          ) {\n            // Decode the postponed state from the request body, it will come as\n            // an array of buffers, so collect them and then concat them to form\n            // the string.\n            const body: Array<Buffer> = []\n            for await (const chunk of req.body) {\n              body.push(chunk)\n            }\n            const postponed = Buffer.concat(body).toString('utf8')\n\n            addRequestMeta(req, 'postponed', postponed)\n\n            // If the request does not have the `x-now-route-matches` header,\n            // it means that the request has it's exact path specified in the\n            // `x-matched-path` header. In this case, we should update the\n            // pathname to the matched path.\n            if (!req.headers['x-now-route-matches']) {\n              urlPathname = this.normalizers.postponed.normalize(\n                matchedPath,\n                true\n              )\n            }\n          }\n\n          matchedPath = this.normalize(matchedPath)\n          const normalizedUrlPath = this.stripNextDataPath(urlPathname)\n\n          // Perform locale detection and normalization.\n          const localeAnalysisResult = this.i18nProvider?.analyze(matchedPath, {\n            defaultLocale,\n          })\n\n          // The locale result will be defined even if the locale was not\n          // detected for the request because it will be inferred from the\n          // default locale.\n          if (localeAnalysisResult) {\n            parsedUrl.query.__nextLocale = localeAnalysisResult.detectedLocale\n\n            // If the detected locale was inferred from the default locale, we\n            // need to modify the metadata on the request to indicate that.\n            if (localeAnalysisResult.inferredFromDefault) {\n              parsedUrl.query.__nextInferredLocaleFromDefault = '1'\n            } else {\n              delete parsedUrl.query.__nextInferredLocaleFromDefault\n            }\n          }\n\n          // TODO: check if this is needed any more?\n          matchedPath = denormalizePagePath(matchedPath)\n\n          let srcPathname = matchedPath\n          let pageIsDynamic = isDynamicRoute(srcPathname)\n\n          if (!pageIsDynamic) {\n            const match = await this.matchers.match(srcPathname, {\n              i18n: localeAnalysisResult,\n            })\n\n            // Update the source pathname to the matched page's pathname.\n            if (match) {\n              srcPathname = match.definition.pathname\n              // The page is dynamic if the params are defined.\n              pageIsDynamic = typeof match.params !== 'undefined'\n            }\n          }\n\n          // The rest of this function can't handle i18n properly, so ensure we\n          // restore the pathname with the locale information stripped from it\n          // now that we're done matching if we're using i18n.\n          if (localeAnalysisResult) {\n            matchedPath = localeAnalysisResult.pathname\n          }\n\n          const utils = getUtils({\n            pageIsDynamic,\n            page: srcPathname,\n            i18n: this.nextConfig.i18n,\n            basePath: this.nextConfig.basePath,\n            rewrites: this.getRoutesManifest()?.rewrites || {\n              beforeFiles: [],\n              afterFiles: [],\n              fallback: [],\n            },\n            caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes,\n          })\n\n          // Ensure parsedUrl.pathname includes locale before processing\n          // rewrites or they won't match correctly.\n          if (defaultLocale && !pathnameInfo.locale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n          }\n\n          const pathnameBeforeRewrite = parsedUrl.pathname\n          const rewriteParams = utils.handleRewrites(req, parsedUrl)\n          const rewriteParamKeys = Object.keys(rewriteParams)\n          const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname\n\n          if (didRewrite && parsedUrl.pathname) {\n            addRequestMeta(req, 'rewroteURL', parsedUrl.pathname)\n          }\n          const routeParamKeys = new Set<string>()\n\n          for (const key of Object.keys(parsedUrl.query)) {\n            const value = parsedUrl.query[key]\n\n            normalizeNextQueryParam(key, (normalizedKey) => {\n              if (!parsedUrl) return // typeguard\n\n              parsedUrl.query[normalizedKey] = value\n              routeParamKeys.add(normalizedKey)\n              delete parsedUrl.query[key]\n            })\n          }\n\n          // interpolate dynamic params and normalize URL if needed\n          if (pageIsDynamic) {\n            let params: ParsedUrlQuery | false = {}\n\n            let paramsResult = utils.normalizeDynamicRouteParams(\n              parsedUrl.query\n            )\n\n            // for prerendered ISR paths we attempt parsing the route\n            // params from the URL directly as route-matches may not\n            // contain the correct values due to the filesystem path\n            // matching before the dynamic route has been matched\n            if (\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(normalizedUrlPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(normalizedUrlPath)\n\n              if (matcherParams) {\n                utils.normalizeDynamicRouteParams(matcherParams)\n                Object.assign(paramsResult.params, matcherParams)\n                paramsResult.hasValidParams = true\n              }\n            }\n\n            // if an action request is bypassing a prerender and we\n            // don't have the params in the URL since it was prerendered\n            // and matched during handle: 'filesystem' rather than dynamic route\n            // resolving we need to parse the params from the matched-path.\n            // Note: this is similar to above case but from match-path instead\n            // of from the request URL since a rewrite could cause that to not\n            // match the src pathname\n            if (\n              // we can have a collision with /index and a top-level /[slug]\n              matchedPath !== '/index' &&\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(matchedPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(matchedPath)\n\n              if (matcherParams) {\n                const curParamsResult =\n                  utils.normalizeDynamicRouteParams(matcherParams)\n\n                if (curParamsResult.hasValidParams) {\n                  Object.assign(params, matcherParams)\n                  paramsResult = curParamsResult\n                }\n              }\n            }\n\n            if (paramsResult.hasValidParams) {\n              params = paramsResult.params\n            }\n\n            if (\n              req.headers['x-now-route-matches'] &&\n              isDynamicRoute(matchedPath) &&\n              !paramsResult.hasValidParams\n            ) {\n              const opts: Record<string, string> = {}\n              const routeParams = utils.getParamsFromRouteMatches(\n                req,\n                opts,\n                parsedUrl.query.__nextLocale || ''\n              )\n\n              // If this returns a locale, it means that the locale was detected\n              // from the pathname.\n              if (opts.locale) {\n                parsedUrl.query.__nextLocale = opts.locale\n\n                // As the locale was parsed from the pathname, we should mark\n                // that the locale was not inferred as the default.\n                delete parsedUrl.query.__nextInferredLocaleFromDefault\n              }\n              paramsResult = utils.normalizeDynamicRouteParams(\n                routeParams,\n                true\n              )\n\n              if (paramsResult.hasValidParams) {\n                params = paramsResult.params\n              }\n            }\n\n            // handle the actual dynamic route name being requested\n            if (\n              utils.defaultRouteMatches &&\n              normalizedUrlPath === srcPathname &&\n              !paramsResult.hasValidParams &&\n              !utils.normalizeDynamicRouteParams({ ...params }, true)\n                .hasValidParams\n            ) {\n              params = utils.defaultRouteMatches\n            }\n\n            if (params) {\n              matchedPath = utils.interpolateDynamicPath(srcPathname, params)\n              req.url = utils.interpolateDynamicPath(req.url!, params)\n            }\n          }\n\n          if (pageIsDynamic || didRewrite) {\n            utils.normalizeVercelUrl(req, true, [\n              ...rewriteParamKeys,\n              ...Object.keys(utils.defaultRouteRegex?.groups || {}),\n            ])\n          }\n          for (const key of routeParamKeys) {\n            delete parsedUrl.query[key]\n          }\n          parsedUrl.pathname = matchedPath\n          url.pathname = parsedUrl.pathname\n          finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n          if (finished) return\n        } catch (err) {\n          if (err instanceof DecodeError || err instanceof NormalizeError) {\n            res.statusCode = 400\n            return this.renderError(null, req, res, '/_error', {})\n          }\n          throw err\n        }\n      }\n\n      addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale))\n\n      if (pathnameInfo.locale) {\n        req.url = formatUrl(url)\n        addRequestMeta(req, 'didStripLocale', true)\n      }\n\n      // If we aren't in minimal mode or there is no locale in the query\n      // string, add the locale to the query string.\n      if (!this.minimalMode || !parsedUrl.query.__nextLocale) {\n        // If the locale is in the pathname, add it to the query string.\n        if (pathnameInfo.locale) {\n          parsedUrl.query.__nextLocale = pathnameInfo.locale\n        }\n        // If the default locale is available, add it to the query string and\n        // mark it as inferred rather than implicit.\n        else if (defaultLocale) {\n          parsedUrl.query.__nextLocale = defaultLocale\n          parsedUrl.query.__nextInferredLocaleFromDefault = '1'\n        }\n      }\n\n      // set incremental cache to request meta so it can\n      // be passed down for edge functions and the fetch disk\n      // cache can be leveraged locally\n      if (\n        !(this.serverOptions as any).webServerConfig &&\n        !getRequestMeta(req, 'incrementalCache')\n      ) {\n        let protocol: 'http:' | 'https:' = 'https:'\n\n        try {\n          const parsedFullUrl = new URL(\n            getRequestMeta(req, 'initURL') || '/',\n            'http://n'\n          )\n          protocol = parsedFullUrl.protocol as 'https:' | 'http:'\n        } catch {}\n\n        const incrementalCache = await this.getIncrementalCache({\n          requestHeaders: Object.assign({}, req.headers),\n          requestProtocol: protocol.substring(0, protocol.length - 1) as\n            | 'http'\n            | 'https',\n        })\n        incrementalCache.resetRequestCache()\n        addRequestMeta(req, 'incrementalCache', incrementalCache)\n        ;(globalThis as any).__incrementalCache = incrementalCache\n      }\n\n      // when invokePath is specified we can short short circuit resolving\n      // we only honor this header if we are inside of a render worker to\n      // prevent external users coercing the routing path\n      const invokePath = getRequestMeta(req, 'invokePath')\n      const useInvokePath =\n        !useMatchedPathHeader &&\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        invokePath\n\n      if (useInvokePath) {\n        const invokeStatus = getRequestMeta(req, 'invokeStatus')\n        if (invokeStatus) {\n          const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n          if (invokeQuery) {\n            Object.assign(parsedUrl.query, invokeQuery)\n          }\n\n          res.statusCode = invokeStatus\n          let err: Error | null = getRequestMeta(req, 'invokeError') || null\n\n          return this.renderError(err, req, res, '/_error', parsedUrl.query)\n        }\n\n        const parsedMatchedPath = new URL(invokePath || '/', 'http://n')\n        const invokePathnameInfo = getNextPathnameInfo(\n          parsedMatchedPath.pathname,\n          {\n            nextConfig: this.nextConfig,\n            parseData: false,\n          }\n        )\n\n        if (invokePathnameInfo.locale) {\n          parsedUrl.query.__nextLocale = invokePathnameInfo.locale\n        }\n\n        if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n          parsedUrl.pathname = parsedMatchedPath.pathname\n          addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname)\n        }\n        const normalizeResult = normalizeLocalePath(\n          removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''),\n          this.nextConfig.i18n?.locales || []\n        )\n\n        if (normalizeResult.detectedLocale) {\n          parsedUrl.query.__nextLocale = normalizeResult.detectedLocale\n        }\n        parsedUrl.pathname = normalizeResult.pathname\n\n        for (const key of Object.keys(parsedUrl.query)) {\n          if (!key.startsWith('__next') && !key.startsWith('_next')) {\n            delete parsedUrl.query[key]\n          }\n        }\n        const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n        if (invokeQuery) {\n          Object.assign(parsedUrl.query, invokeQuery)\n        }\n\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        await this.handleCatchallRenderRequest(req, res, parsedUrl)\n        return\n      }\n\n      if (\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        getRequestMeta(req, 'middlewareInvoke')\n      ) {\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        finished = await this.handleCatchallMiddlewareRequest(\n          req,\n          res,\n          parsedUrl\n        )\n        if (finished) return\n\n        const err = new Error()\n        ;(err as any).result = {\n          response: new Response(null, {\n            headers: {\n              'x-middleware-next': '1',\n            },\n          }),\n        }\n        ;(err as any).bubble = true\n        throw err\n      }\n\n      // This wasn't a request via the matched path or the invoke path, so\n      // prepare for a legacy run by removing the base path.\n\n      // ensure we strip the basePath when not using an invoke header\n      if (!useMatchedPathHeader && pathnameInfo.basePath) {\n        parsedUrl.pathname = removePathPrefix(\n          parsedUrl.pathname,\n          pathnameInfo.basePath\n        )\n      }\n\n      res.statusCode = 200\n      return await this.run(req, res, parsedUrl)\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      if (\n        (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL') ||\n        err instanceof DecodeError ||\n        err instanceof NormalizeError\n      ) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n\n      if (\n        this.minimalMode ||\n        this.renderOpts.dev ||\n        (isBubbledError(err) && err.bubble)\n      ) {\n        throw err\n      }\n      this.logError(getProperError(err))\n      res.statusCode = 500\n      res.body('Internal Server Error').send()\n    }\n  }\n\n  /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */\n  private normalize = (pathname: string) => {\n    const normalizers: Array<PathnameNormalizer> = []\n\n    if (this.normalizers.data) {\n      normalizers.push(this.normalizers.data)\n    }\n\n    if (this.normalizers.postponed) {\n      normalizers.push(this.normalizers.postponed)\n    }\n\n    // We have to put the prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.prefetchRSC) {\n      normalizers.push(this.normalizers.prefetchRSC)\n    }\n\n    if (this.normalizers.rsc) {\n      normalizers.push(this.normalizers.rsc)\n    }\n\n    if (this.normalizers.action) {\n      normalizers.push(this.normalizers.action)\n    }\n\n    for (const normalizer of normalizers) {\n      if (!normalizer.match(pathname)) continue\n\n      return normalizer.normalize(pathname, true)\n    }\n\n    return pathname\n  }\n\n  private normalizeAndAttachMetadata: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = async (req, res, url) => {\n    let finished = await this.handleNextImageRequest(req, res, url)\n    if (finished) return true\n\n    if (this.enabledDirectories.pages) {\n      finished = await this.handleNextDataRequest(req, res, url)\n      if (finished) return true\n    }\n\n    return false\n  }\n\n  /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */\n  public getRequestHandlerWithMetadata(\n    meta: RequestMeta\n  ): BaseRequestHandler<ServerRequest, ServerResponse> {\n    const handler = this.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      setRequestMeta(req, meta)\n      return handler(req, res, parsedUrl)\n    }\n  }\n\n  public getRequestHandler(): BaseRequestHandler<\n    ServerRequest,\n    ServerResponse\n  > {\n    return this.handleRequest.bind(this)\n  }\n\n  protected abstract handleUpgrade(\n    req: ServerRequest,\n    socket: any,\n    head?: any\n  ): Promise<void>\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  protected prepared: boolean = false\n  protected preparedPromise: Promise<void> | null = null\n  /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */\n  public async prepare(): Promise<void> {\n    if (this.prepared) return\n\n    if (this.preparedPromise === null) {\n      this.preparedPromise = this.prepareImpl().then(() => {\n        this.prepared = true\n        this.preparedPromise = null\n      })\n    }\n    return this.preparedPromise\n  }\n  protected async prepareImpl(): Promise<void> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected getAppPathRoutes(): Record<string, string[]> {\n    const appPathRoutes: Record<string, string[]> = {}\n\n    Object.keys(this.appPathsManifest || {}).forEach((entry) => {\n      const normalizedPath = normalizeAppPath(entry)\n      if (!appPathRoutes[normalizedPath]) {\n        appPathRoutes[normalizedPath] = []\n      }\n      appPathRoutes[normalizedPath].push(entry)\n    })\n    return appPathRoutes\n  }\n\n  protected async run(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.run, async () =>\n      this.runImpl(req, res, parsedUrl)\n    )\n  }\n\n  private async runImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.handleCatchallRenderRequest(req, res, parsedUrl)\n  }\n\n  private async pipe(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.pipe, async () =>\n      this.pipeImpl(fn, partialContext)\n    )\n  }\n\n  private async pipeImpl(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    const isBotRequest = isBot(partialContext.req.headers['user-agent'] || '')\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: !isBotRequest,\n        isBot: !!isBotRequest,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return\n    }\n    const { req, res } = ctx\n    const originalStatus = res.statusCode\n    const { body, type } = payload\n    let { revalidate } = payload\n    if (!res.sent) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n\n      // In dev, we should not cache pages for any reason.\n      if (dev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n        revalidate = undefined\n      }\n\n      await this.sendRenderResult(req, res, {\n        result: body,\n        type,\n        generateEtags,\n        poweredByHeader,\n        revalidate,\n        swrDelta: this.nextConfig.swrDelta,\n      })\n      res.statusCode = originalStatus\n    }\n  }\n\n  private async getStaticHTML(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<string | null> {\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: false,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return null\n    }\n    return payload.body.toUnchunkedString()\n  }\n\n  public async render(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.render, async () =>\n      this.renderImpl(req, res, pathname, query, parsedUrl, internalRender)\n    )\n  }\n\n  private getWaitUntil(): WaitUntil | undefined {\n    const builtinRequestContext = getBuiltinRequestContext()\n    if (builtinRequestContext) {\n      // the platform provided a request context.\n      // use the `waitUntil` from there, whether actually present or not --\n      // if not present, `unstable_after` will error.\n      return builtinRequestContext.waitUntil\n    }\n\n    if (process.env.__NEXT_TEST_MODE) {\n      // we're in a test, use a no-op.\n      return Server.noopWaitUntil\n    }\n\n    if (this.minimalMode || process.env.NEXT_RUNTIME === 'edge') {\n      // we're built for a serverless environment, and `waitUntil` is not available,\n      // but using a noop would likely lead to incorrect behavior,\n      // because we have no way of keeping the invocation alive.\n      // return nothing, and `unstable_after` will error if used.\n      return undefined\n    }\n\n    // we're in `next start` or `next dev`. noop is fine for both.\n    return Server.noopWaitUntil\n  }\n\n  private static noopWaitUntil(promise: Promise<any>) {\n    promise.catch((err: unknown) => {\n      console.error(err)\n    })\n  }\n\n  private async renderImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !internalRender &&\n      !this.minimalMode &&\n      !query.__nextDataReq &&\n      (req.url?.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && req.url!.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    return this.pipe((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async getStaticPaths({\n    pathname,\n  }: {\n    pathname: string\n    requestHeaders: import('./lib/incremental-cache').IncrementalCache['requestHeaders']\n    page: string\n    isAppPath: boolean\n  }): Promise<{\n    staticPaths?: string[]\n    fallbackMode?: 'static' | 'blocking' | false\n  }> {\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField =\n      this.getPrerenderManifest().dynamicRoutes[pathname]?.fallback\n\n    return {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths: undefined,\n      fallbackMode:\n        typeof fallbackField === 'string'\n          ? 'static'\n          : fallbackField === null\n            ? 'blocking'\n            : fallbackField,\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    requestContext: RequestContext<ServerRequest, ServerResponse>,\n    findComponentsResult: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponseWithComponents,\n      async () =>\n        this.renderToResponseWithComponentsImpl(\n          requestContext,\n          findComponentsResult\n        )\n    )\n  }\n\n  protected pathCouldBeIntercepted(resolvedPathname: string): boolean {\n    return (\n      isInterceptionRouteAppPath(resolvedPathname) ||\n      this.interceptionRoutePatterns.some((regexp) => {\n        return regexp.test(resolvedPathname)\n      })\n    )\n  }\n\n  protected setVaryHeader(\n    req: ServerRequest,\n    res: ServerResponse,\n    isAppPath: boolean,\n    resolvedPathname: string\n  ): void {\n    const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH_HEADER}`\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    let addedNextUrlToVary = false\n\n    if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n      // Interception route responses can vary based on the `Next-URL` header.\n      // We use the Vary header to signal this behavior to the client to properly cache the response.\n      res.setHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`)\n      addedNextUrlToVary = true\n    } else if (isAppPath || isRSCRequest) {\n      // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n      // We also set this header for pages to avoid caching issues when navigating between pages and app.\n      res.setHeader('vary', baseVaryHeader)\n    }\n\n    if (!addedNextUrlToVary) {\n      // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n      // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n      delete req.headers[NEXT_URL]\n    }\n  }\n\n  private async renderToResponseWithComponentsImpl(\n    {\n      req,\n      res,\n      pathname,\n      renderOpts: opts,\n    }: RequestContext<ServerRequest, ServerResponse>,\n    { components, query }: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n      pathname = '/404'\n    }\n    const is404Page = pathname === '/404'\n\n    const is500Page = pathname === '/500'\n    const isAppPath = components.isAppPath === true\n\n    const hasServerProps = !!components.getServerSideProps\n    let hasStaticPaths = !!components.getStaticPaths\n    const isServerAction = getIsServerAction(req)\n    const hasGetInitialProps = !!components.Component?.getInitialProps\n    let isSSG = !!components.getStaticProps\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname\n\n    this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname)\n\n    let staticPaths: string[] | undefined\n\n    let fallbackMode: FallbackMode\n    let hasFallback = false\n    const isDynamic = isDynamicRoute(components.page)\n\n    const prerenderManifest = this.getPrerenderManifest()\n\n    if (isAppPath && isDynamic) {\n      const pathsResult = await this.getStaticPaths({\n        pathname,\n        page: components.page,\n        isAppPath,\n        requestHeaders: req.headers,\n      })\n\n      staticPaths = pathsResult.staticPaths\n      fallbackMode = pathsResult.fallbackMode\n      hasFallback = typeof fallbackMode !== 'undefined'\n\n      if (this.nextConfig.output === 'export') {\n        const page = components.page\n\n        if (fallbackMode !== 'static') {\n          throw new Error(\n            `Page \"${page}\" is missing exported function \"generateStaticParams()\", which is required with \"output: export\" config.`\n          )\n        }\n        const resolvedWithoutSlash = removeTrailingSlash(resolvedUrlPathname)\n        if (!staticPaths?.includes(resolvedWithoutSlash)) {\n          throw new Error(\n            `Page \"${page}\" is missing param \"${resolvedWithoutSlash}\" in \"generateStaticParams()\", which is required with \"output: export\" config.`\n          )\n        }\n      }\n\n      if (hasFallback) {\n        hasStaticPaths = true\n      }\n    }\n\n    if (\n      hasFallback ||\n      staticPaths?.includes(resolvedUrlPathname) ||\n      // this signals revalidation in deploy environments\n      // TODO: make this more generic\n      req.headers['x-now-route-matches']\n    ) {\n      isSSG = true\n    } else if (!this.renderOpts.dev) {\n      isSSG ||= !!prerenderManifest.routes[toRoute(pathname)]\n    }\n\n    // Toggle whether or not this is a Data request\n    const isNextDataRequest =\n      !!(\n        query.__nextDataReq ||\n        (req.headers['x-nextjs-data'] &&\n          (this.serverOptions as any).webServerConfig)\n      ) &&\n      (isSSG || hasServerProps)\n\n    /**\n     * If true, this indicates that the request being made is for an app\n     * prefetch request.\n     */\n    const isPrefetchRSCRequest =\n      getRequestMeta(req, 'isPrefetchRSCRequest') ?? false\n\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    // when we are handling a middleware prefetch and it doesn't\n    // resolve to a static data route we bail early to avoid\n    // unexpected SSR invocations\n    if (\n      !isSSG &&\n      req.headers['x-middleware-prefetch'] &&\n      !(is404Page || pathname === '/_error')\n    ) {\n      res.setHeader('x-matched-path', pathname)\n      res.setHeader('x-middleware-skip', '1')\n      res.setHeader(\n        'cache-control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n      res.body('{}').send()\n      return null\n    }\n\n    delete query.__nextDataReq\n\n    // normalize req.url for SSG paths as it is not exposed\n    // to getStaticProps and the asPath should not expose /_next/data\n    if (\n      isSSG &&\n      this.minimalMode &&\n      req.headers['x-matched-path'] &&\n      req.url.startsWith('/_next/data')\n    ) {\n      req.url = this.stripNextDataPath(req.url)\n    }\n\n    if (\n      !!req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${query.__nextLocale ? `/${query.__nextLocale}` : ''}${pathname}`\n      )\n    }\n\n    const { routeModule } = components\n\n    /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */\n    const couldSupportPPR: boolean =\n      this.isAppPPREnabled &&\n      typeof routeModule !== 'undefined' &&\n      isAppPageRouteModule(routeModule)\n\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =\n      process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' &&\n      typeof query.__nextppronly !== 'undefined' &&\n      couldSupportPPR\n\n    // This page supports PPR if it has `experimentalPPR` set to `true` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled: boolean =\n      couldSupportPPR &&\n      // In production, we'd expect to see the `experimentalPPR` flag set in the\n      // prerender manifest.\n      ((\n        prerenderManifest.routes[pathname] ??\n        prerenderManifest.dynamicRoutes[pathname]\n      )?.experimentalPPR === true ||\n        // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        (hasDebugStaticShellQuery &&\n          (this.renderOpts.dev === true ||\n            this.experimentalTestProxy === true)))\n\n    const isDebugStaticShell: boolean =\n      hasDebugStaticShellQuery && isRoutePPREnabled\n\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses =\n      isDebugStaticShell && this.renderOpts.dev === true\n\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled\n      ? getRequestMeta(req, 'postponed')\n      : undefined\n\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest =\n      isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isNextDataRequest && !isRSCRequest) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.slice(1), 10)\n    }\n\n    if (\n      // Server actions can use non-GET/HEAD methods.\n      !isServerAction &&\n      // Resume can use non-GET/HEAD methods.\n      !minimalPostponed &&\n      !is404Page &&\n      !is500Page &&\n      pathname !== '/_error' &&\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      (typeof components.Component === 'string' || isSSG)\n    ) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      await this.renderError(null, req, res, pathname)\n      return null\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        type: 'html',\n        // TODO: Static pages should be serialized as RenderResult\n        body: RenderResult.fromStatic(components.Component),\n      }\n    }\n\n    // Ensure that if the `amp` query parameter is falsy that we remove it from\n    // the query object. This ensures it won't be found by the `in` operator.\n    if ('amp' in query && !query.amp) delete query.amp\n\n    if (opts.supportsDynamicResponse === true) {\n      const isBotRequest = isBot(req.headers['user-agent'] || '')\n      const isSupportedDocument =\n        typeof components.Document?.getInitialProps !== 'function' ||\n        // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n        NEXT_BUILTIN_DOCUMENT in components.Document\n\n      // Disable dynamic HTML in cases that we know it won't be generated,\n      // so that we can continue generating a cache key when possible.\n      // TODO-APP: should the first render for a dynamic app path\n      // be static so we can collect revalidate and populate the\n      // cache if there are no dynamic data requirements\n      opts.supportsDynamicResponse =\n        !isSSG && !isBotRequest && !query.amp && isSupportedDocument\n      opts.isBot = isBotRequest\n    }\n\n    // In development, we always want to generate dynamic HTML.\n    if (!isNextDataRequest && isAppPath && opts.dev) {\n      opts.supportsDynamicResponse = true\n    }\n\n    const defaultLocale = isSSG\n      ? this.nextConfig.i18n?.defaultLocale\n      : query.__nextDefaultLocale\n\n    const locale = query.__nextLocale\n    const locales = this.nextConfig.i18n?.locales\n\n    let previewData: PreviewData\n    let isPreviewMode = false\n\n    if (hasServerProps || isSSG || isAppPath) {\n      // For the edge runtime, we don't support preview mode in SSG.\n      if (process.env.NEXT_RUNTIME !== 'edge') {\n        const { tryGetPreviewData } =\n          require('./api-utils/node/try-get-preview-data') as typeof import('./api-utils/node/try-get-preview-data')\n        previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n        isPreviewMode = previewData !== false\n      }\n    }\n\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (\n      isAppPath &&\n      !opts.dev &&\n      !isPreviewMode &&\n      isSSG &&\n      isRSCRequest &&\n      !isDynamicRSCRequest &&\n      (!isEdgeRuntime(opts.runtime) ||\n        (this.serverOptions as any).webServerConfig)\n    ) {\n      stripFlightHeaders(req.headers)\n    }\n\n    let isOnDemandRevalidate = false\n    let revalidateOnlyGenerated = false\n\n    if (isSSG) {\n      ;({ isOnDemandRevalidate, revalidateOnlyGenerated } =\n        checkIsOnDemandRevalidate(req, this.renderOpts.previewProps))\n    }\n\n    if (isSSG && this.minimalMode && req.headers['x-matched-path']) {\n      // the url value is already correct when the matched-path header is set\n      resolvedUrlPathname = urlPathname\n    }\n\n    urlPathname = removeTrailingSlash(urlPathname)\n    resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname)\n    if (this.localeNormalizer) {\n      resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname)\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n      }\n      const statusCode = getRedirectStatus(redirect)\n      const { basePath } = this.nextConfig\n\n      if (\n        basePath &&\n        redirect.basePath !== false &&\n        redirect.destination.startsWith('/')\n      ) {\n        redirect.destination = `${basePath}${redirect.destination}`\n      }\n\n      if (redirect.destination.startsWith('/')) {\n        redirect.destination = normalizeRepeatedSlashes(redirect.destination)\n      }\n\n      res\n        .redirect(redirect.destination, statusCode)\n        .body(redirect.destination)\n        .send()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isNextDataRequest) {\n      resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname)\n      urlPathname = this.stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey: string | null = null\n    if (\n      !isPreviewMode &&\n      isSSG &&\n      !opts.supportsDynamicResponse &&\n      !isServerAction &&\n      !minimalPostponed &&\n      !isDynamicRSCRequest\n    ) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${\n        (pathname === '/' || resolvedUrlPathname === '/') && locale\n          ? ''\n          : resolvedUrlPathname\n      }${query.amp ? '.amp' : ''}`\n    }\n\n    if ((is404Page || is500Page) && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    if (ssgCacheKey) {\n      // we only encode path delimiters for path segments from\n      // getStaticPaths so we need to attempt decoding the URL\n      // to match against and only escape the path delimiters\n      // this allows non-ascii values to be handled e.g. Japanese characters\n\n      // TODO: investigate adding this handling for non-SSG pages so\n      // non-ascii names work there also\n      ssgCacheKey = ssgCacheKey\n        .split('/')\n        .map((seg) => {\n          try {\n            seg = escapePathDelimiters(decodeURIComponent(seg), true)\n          } catch (_) {\n            // An improperly encoded URL was provided\n            throw new DecodeError('failed to decode param')\n          }\n          return seg\n        })\n        .join('/')\n\n      // ensure /index and / is normalized to one key\n      ssgCacheKey =\n        ssgCacheKey === '/index' && pathname === '/' ? '/' : ssgCacheKey\n    }\n    let protocol: 'http:' | 'https:' = 'https:'\n\n    try {\n      const parsedFullUrl = new URL(\n        getRequestMeta(req, 'initURL') || '/',\n        'http://n'\n      )\n      protocol = parsedFullUrl.protocol as 'https:' | 'http:'\n    } catch {}\n\n    // use existing incrementalCache instance if available\n    const incrementalCache =\n      (globalThis as any).__incrementalCache ||\n      (await this.getIncrementalCache({\n        requestHeaders: Object.assign({}, req.headers),\n        requestProtocol: protocol.substring(0, protocol.length - 1) as\n          | 'http'\n          | 'https',\n      }))\n\n    // TODO: investigate, this is not safe across multiple concurrent requests\n    incrementalCache?.resetRequestCache()\n\n    type RendererContext = {\n      /**\n       * The postponed data for this render. This is only provided when resuming\n       * a render that has been postponed.\n       */\n      postponed: string | undefined\n    }\n    type Renderer = (\n      context: RendererContext\n    ) => Promise<ResponseCacheEntry | null>\n\n    const doRender: Renderer = async ({ postponed }) => {\n      // In development, we always want to generate dynamic HTML.\n      let supportsDynamicResponse: boolean =\n        // If we're in development, we always support dynamic HTML, unless it's\n        // a data request, in which case we only produce static HTML.\n        (!isNextDataRequest && opts.dev === true) ||\n        // If this is not SSG or does not have static paths, then it supports\n        // dynamic HTML.\n        (!isSSG && !hasStaticPaths) ||\n        // If this request has provided postponed data, it supports dynamic\n        // HTML.\n        typeof postponed === 'string' ||\n        // If this is a dynamic RSC request, then this render supports dynamic\n        // HTML (it's dynamic).\n        isDynamicRSCRequest\n\n      const origQuery = parseUrl(req.url || '', true).query\n\n      // clear any dynamic route params so they aren't in\n      // the resolvedUrl\n      if (opts.params) {\n        Object.keys(opts.params).forEach((key) => {\n          delete origQuery[key]\n        })\n      }\n      const hadTrailingSlash =\n        urlPathname !== '/' && this.nextConfig.trailingSlash\n\n      const resolvedUrl = formatUrl({\n        pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n        // make sure to only add query values from original URL\n        query: origQuery,\n      })\n      const renderOpts: LoadedRenderOpts = {\n        ...components,\n        ...opts,\n        ...(isAppPath\n          ? {\n              incrementalCache,\n              // This is a revalidation request if the request is for a static\n              // page and it is not being resumed from a postponed render and\n              // it is not a dynamic RSC request then it is a revalidation\n              // request.\n              isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n              serverActions: this.nextConfig.experimental.serverActions,\n            }\n          : {}),\n        isNextDataRequest,\n        resolvedUrl,\n        locale,\n        locales,\n        defaultLocale,\n        // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n        // and not the resolved URL to prevent a hydration mismatch on\n        // asPath\n        resolvedAsPath:\n          hasServerProps || hasGetInitialProps\n            ? formatUrl({\n                // we use the original URL pathname less the _next/data prefix if\n                // present\n                pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                query: origQuery,\n              })\n            : resolvedUrl,\n        experimental: {\n          ...opts.experimental,\n          isRoutePPREnabled,\n        },\n        supportsDynamicResponse,\n        isOnDemandRevalidate,\n        isDraftMode: isPreviewMode,\n        isServerAction,\n        postponed,\n        waitUntil: this.getWaitUntil(),\n        onClose: res.onClose.bind(res),\n      }\n\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        supportsDynamicResponse = false\n        renderOpts.nextExport = true\n        renderOpts.supportsDynamicResponse = false\n        renderOpts.isStaticGeneration = true\n        renderOpts.isRevalidate = true\n        renderOpts.isDebugStaticShell = isDebugStaticShell\n        renderOpts.isDebugDynamicAccesses = isDebugDynamicAccesses\n      }\n\n      // Legacy render methods will return a render result that needs to be\n      // served by the server.\n      let result: RenderResult\n\n      if (routeModule) {\n        if (isAppRouteRouteModule(routeModule)) {\n          if (\n            // The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME === 'edge' ||\n            !isNodeNextRequest(req) ||\n            !isNodeNextResponse(res)\n          ) {\n            throw new Error(\n              'Invariant: App Route Route Modules cannot be used in the edge runtime'\n            )\n          }\n\n          const context: AppRouteRouteHandlerContext = {\n            params: opts.params,\n            prerenderManifest,\n            renderOpts: {\n              experimental: {\n                after: renderOpts.experimental.after,\n              },\n              supportsDynamicResponse,\n              incrementalCache,\n              isRevalidate: isSSG,\n              waitUntil: this.getWaitUntil(),\n              onClose: res.onClose.bind(res),\n            },\n          }\n\n          try {\n            const request = NextRequestAdapter.fromNodeNextRequest(\n              req,\n              signalFromNodeResponse(res.originalResponse)\n            )\n\n            const response = await routeModule.handle(request, context)\n\n            ;(req as any).fetchMetrics = (\n              context.renderOpts as any\n            ).fetchMetrics\n\n            const cacheTags = (context.renderOpts as any).fetchTags\n\n            // If the request is for a static response, we can cache it so long\n            // as it's not edge.\n            if (isSSG) {\n              const blob = await response.blob()\n\n              // Copy the headers from the response.\n              const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n              if (cacheTags) {\n                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n              }\n\n              if (!headers['content-type'] && blob.type) {\n                headers['content-type'] = blob.type\n              }\n\n              const revalidate = context.renderOpts.store?.revalidate ?? false\n\n              // Create the cache entry for the response.\n              const cacheEntry: ResponseCacheEntry = {\n                value: {\n                  kind: 'ROUTE',\n                  status: response.status,\n                  body: Buffer.from(await blob.arrayBuffer()),\n                  headers,\n                },\n                revalidate,\n              }\n\n              return cacheEntry\n            }\n\n            // Send the response now that we have copied it into the cache.\n            await sendResponse(\n              req,\n              res,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          } catch (err) {\n            // If this is during static generation, throw the error again.\n            if (isSSG) throw err\n\n            Log.error(err)\n\n            // Otherwise, send a 500 response.\n            await sendResponse(req, res, handleInternalServerErrorResponse())\n\n            return null\n          }\n        } else if (\n          isPagesRouteModule(routeModule) ||\n          isAppPageRouteModule(routeModule)\n        ) {\n          // An OPTIONS request to a page handler is invalid.\n          if (req.method === 'OPTIONS' && !is404Page) {\n            await sendResponse(req, res, handleBadRequestResponse())\n            return null\n          }\n\n          if (isPagesRouteModule(routeModule)) {\n            // Due to the way we pass data by mutating `renderOpts`, we can't extend\n            // the object here but only updating its `clientReferenceManifest` and\n            // `nextFontManifest` properties.\n            // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n            renderOpts.nextFontManifest = this.nextFontManifest\n            renderOpts.clientReferenceManifest =\n              components.clientReferenceManifest\n\n            const request = isNodeNextRequest(req) ? req.originalRequest : req\n            const response = isNodeNextResponse(res)\n              ? res.originalResponse\n              : res\n\n            // Call the built-in render method on the module.\n            result = await routeModule.render(\n              // TODO: fix this type\n              // @ts-expect-error - preexisting accepted this\n              request,\n              response,\n              {\n                page: pathname,\n                params: opts.params,\n                query,\n                renderOpts,\n              }\n            )\n          } else {\n            const module = components.routeModule as AppPageRouteModule\n\n            // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n            // object here but only updating its `nextFontManifest` field.\n            // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n            renderOpts.nextFontManifest = this.nextFontManifest\n\n            // Call the built-in render method on the module.\n            result = await module.render(req, res, {\n              page: is404Page ? '/404' : pathname,\n              params: opts.params,\n              query,\n              renderOpts,\n            })\n          }\n        } else {\n          throw new Error('Invariant: Unknown route module type')\n        }\n      } else {\n        // If we didn't match a page, we should fallback to using the legacy\n        // render method.\n        result = await this.renderHTML(req, res, pathname, query, renderOpts)\n      }\n\n      const { metadata } = result\n\n      const {\n        headers = {},\n        // Add any fetch tags that were on the page to the response headers.\n        fetchTags: cacheTags,\n      } = metadata\n\n      if (cacheTags) {\n        headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n      }\n\n      // Pull any fetch metrics from the render onto the request.\n      ;(req as any).fetchMetrics = metadata.fetchMetrics\n\n      // we don't throw static to dynamic errors in dev as isSSG\n      // is a best guess in dev since we don't have the prerender pass\n      // to know whether the path is actually static or not\n      if (\n        isAppPath &&\n        isSSG &&\n        metadata.revalidate === 0 &&\n        !this.renderOpts.dev &&\n        !isRoutePPREnabled\n      ) {\n        const staticBailoutInfo = metadata.staticBailoutInfo\n\n        const err = new Error(\n          `Page changed from static to dynamic at runtime ${urlPathname}${\n            staticBailoutInfo?.description\n              ? `, reason: ${staticBailoutInfo.description}`\n              : ``\n          }` +\n            `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`\n        )\n\n        if (staticBailoutInfo?.stack) {\n          const stack = staticBailoutInfo.stack\n          err.stack = err.message + stack.substring(stack.indexOf('\\n'))\n        }\n\n        throw err\n      }\n\n      // Based on the metadata, we can determine what kind of cache result we\n      // should return.\n\n      // Handle `isNotFound`.\n      if ('isNotFound' in metadata && metadata.isNotFound) {\n        return { value: null, revalidate: metadata.revalidate }\n      }\n\n      // Handle `isRedirect`.\n      if (metadata.isRedirect) {\n        return {\n          value: {\n            kind: 'REDIRECT',\n            props: metadata.pageData ?? metadata.flightData,\n          },\n          revalidate: metadata.revalidate,\n        }\n      }\n\n      // Handle `isNull`.\n      if (result.isNull) {\n        return null\n      }\n\n      // We now have a valid HTML result that we can return to the user.\n      if (isAppPath) {\n        return {\n          value: {\n            kind: 'APP_PAGE',\n            html: result,\n            headers,\n            rscData: metadata.flightData,\n            postponed: metadata.postponed,\n            status: res.statusCode,\n          } satisfies CachedAppPageValue,\n          revalidate: metadata.revalidate,\n        }\n      }\n\n      return {\n        value: {\n          kind: 'PAGE',\n          html: result,\n          pageData: metadata.pageData ?? metadata.flightData,\n          headers,\n          status: isAppPath ? res.statusCode : undefined,\n        } satisfies CachedPageValue,\n        revalidate: metadata.revalidate,\n      }\n    }\n\n    const responseGenerator: ResponseGenerator = async (\n      hasResolved,\n      previousCacheEntry,\n      isRevalidating\n    ): Promise<ResponseCacheEntry | null> => {\n      const isProduction = !this.renderOpts.dev\n      const didRespond = hasResolved || res.sent\n\n      if (!staticPaths) {\n        ;({ staticPaths, fallbackMode } = hasStaticPaths\n          ? await this.getStaticPaths({\n              pathname,\n              requestHeaders: req.headers,\n              isAppPath,\n              page: components.page,\n            })\n          : { staticPaths: undefined, fallbackMode: false })\n      }\n\n      if (fallbackMode === 'static' && isBot(req.headers['user-agent'] || '')) {\n        fallbackMode = 'blocking'\n      }\n\n      // skip on-demand revalidate if cache is not present and\n      // revalidate-if-generated is set\n      if (\n        isOnDemandRevalidate &&\n        revalidateOnlyGenerated &&\n        !previousCacheEntry &&\n        !this.minimalMode\n      ) {\n        await this.render404(req, res)\n        return null\n      }\n\n      if (previousCacheEntry?.isStale === -1) {\n        isOnDemandRevalidate = true\n      }\n\n      // only allow on-demand revalidate for fallback: true/blocking\n      // or for prerendered fallback: false paths\n      if (\n        isOnDemandRevalidate &&\n        (fallbackMode !== false || previousCacheEntry)\n      ) {\n        fallbackMode = 'blocking'\n      }\n\n      // We use `ssgCacheKey` here as it is normalized to match the encoding\n      // from getStaticPaths along with including the locale.\n      //\n      // We use the `resolvedUrlPathname` for the development case when this\n      // is an app path since it doesn't include locale information.\n      let staticPathKey =\n        ssgCacheKey ?? (opts.dev && isAppPath ? resolvedUrlPathname : null)\n      if (staticPathKey && query.amp) {\n        staticPathKey = staticPathKey.replace(/\\.amp$/, '')\n      }\n\n      const isPageIncludedInStaticPaths =\n        staticPathKey && staticPaths?.includes(staticPathKey)\n\n      if ((this.nextConfig.experimental as any).isExperimentalCompile) {\n        fallbackMode = 'blocking'\n      }\n\n      // When we did not respond from cache, we need to choose to block on\n      // rendering or return a skeleton.\n      //\n      // - Data requests always block.\n      // - Blocking mode fallback always blocks.\n      // - Preview mode toggles all pages to be resolved in a blocking manner.\n      // - Non-dynamic pages should block (though this is an impossible\n      //   case in production).\n      // - Dynamic pages should return their skeleton if not defined in\n      //   getStaticPaths, then finish the data request on the client-side.\n      //\n      if (\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        !this.minimalMode &&\n        fallbackMode !== 'blocking' &&\n        staticPathKey &&\n        !didRespond &&\n        !isPreviewMode &&\n        isDynamic &&\n        (isProduction || !staticPaths || !isPageIncludedInStaticPaths)\n      ) {\n        if (\n          // In development, fall through to render to handle missing\n          // getStaticPaths.\n          (isProduction || (staticPaths && staticPaths?.length > 0)) &&\n          // When fallback isn't present, abort this render so we 404\n          fallbackMode !== 'static'\n        ) {\n          throw new NoFallbackError()\n        }\n\n        if (!isNextDataRequest) {\n          // Production already emitted the fallback as static HTML.\n          if (isProduction) {\n            const html = await this.getFallback(\n              locale ? `/${locale}${pathname}` : pathname\n            )\n\n            return {\n              value: {\n                kind: 'PAGE',\n                html: RenderResult.fromStatic(html),\n                status: undefined,\n                headers: undefined,\n                pageData: {},\n              },\n            }\n          }\n          // We need to generate the fallback on-demand for development.\n          else {\n            query.__nextFallback = 'true'\n\n            // We pass `undefined` as there cannot be a postponed state in\n            // development.\n            const result = await doRender({ postponed: undefined })\n            if (!result) {\n              return null\n            }\n            // Prevent caching this result\n            delete result.revalidate\n            return result\n          }\n        }\n      }\n\n      const context: RendererContext = {\n        // Only requests that aren't revalidating can be resumed. If we have the\n        // minimal postponed data, then we should resume the render with it.\n        postponed:\n          !isOnDemandRevalidate && !isRevalidating && minimalPostponed\n            ? minimalPostponed\n            : undefined,\n      }\n\n      // When we're in minimal mode, if we're trying to debug the static shell,\n      // we should just return nothing instead of resuming the dynamic render.\n      if (\n        (isDebugStaticShell || isDebugDynamicAccesses) &&\n        typeof context.postponed !== 'undefined'\n      ) {\n        return {\n          revalidate: 1,\n          value: {\n            kind: 'PAGE',\n            html: RenderResult.fromStatic(''),\n            pageData: {},\n            headers: undefined,\n            status: undefined,\n          },\n        }\n      }\n\n      // Perform the render.\n      const result = await doRender(context)\n      if (!result) return null\n\n      return {\n        ...result,\n        revalidate:\n          result.revalidate !== undefined\n            ? result.revalidate\n            : /* default to minimum revalidate (this should be an invariant) */ 1,\n      }\n    }\n\n    const cacheEntry = await this.responseCache.get(\n      ssgCacheKey,\n      responseGenerator,\n      {\n        routeKind: routeModule?.definition.kind,\n        incrementalCache,\n        isOnDemandRevalidate,\n        isPrefetch: req.headers.purpose === 'prefetch',\n        isRoutePPREnabled,\n      }\n    )\n\n    if (!cacheEntry) {\n      if (ssgCacheKey && !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n        // A cache entry might not be generated if a response is written\n        // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n        // have a cache key. If we do have a cache key but we don't end up\n        // with a cache entry, then either Next.js or the application has a\n        // bug that needs fixing.\n        throw new Error('invariant: cache entry required but not generated')\n      }\n      return null\n    }\n\n    const didPostpone =\n      cacheEntry.value?.kind === 'APP_PAGE' &&\n      typeof cacheEntry.value.postponed === 'string'\n\n    if (\n      isSSG &&\n      !this.minimalMode &&\n      // We don't want to send a cache header for requests that contain dynamic\n      // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n      // request, then we should set the cache header.\n      !isDynamicRSCRequest &&\n      (!didPostpone || isPrefetchRSCRequest)\n    ) {\n      // set x-nextjs-cache header to match the header\n      // we set for the image-optimizer\n      res.setHeader(\n        'x-nextjs-cache',\n        isOnDemandRevalidate\n          ? 'REVALIDATED'\n          : cacheEntry.isMiss\n            ? 'MISS'\n            : cacheEntry.isStale\n              ? 'STALE'\n              : 'HIT'\n      )\n    }\n\n    const { value: cachedData } = cacheEntry\n\n    // If the cache value is an image, we should error early.\n    if (cachedData?.kind === 'IMAGE') {\n      throw new Error('invariant SSG should not return an image cache value')\n    }\n\n    // Coerce the revalidate parameter from the render.\n    let revalidate: Revalidate | undefined\n\n    // If this is a resume request in minimal mode it is streamed with dynamic\n    // content and should not be cached.\n    if (minimalPostponed) {\n      revalidate = 0\n    }\n\n    // If this is in minimal mode and this is a flight request that isn't a\n    // prefetch request while PPR is enabled, it cannot be cached as it contains\n    // dynamic content.\n    else if (\n      this.minimalMode &&\n      isRSCRequest &&\n      !isPrefetchRSCRequest &&\n      isRoutePPREnabled\n    ) {\n      revalidate = 0\n    } else if (\n      typeof cacheEntry.revalidate !== 'undefined' &&\n      (!this.renderOpts.dev || (hasServerProps && !isNextDataRequest))\n    ) {\n      // If this is a preview mode request, we shouldn't cache it\n      if (isPreviewMode) {\n        revalidate = 0\n      }\n\n      // If this isn't SSG, then we should set change the header only if it is\n      // not set already.\n      else if (!isSSG) {\n        if (!res.getHeader('Cache-Control')) {\n          revalidate = 0\n        }\n      }\n\n      // If we are rendering the 404 page we derive the cache-control\n      // revalidate period from the value that trigged the not found\n      // to be rendered. So if `getStaticProps` returns\n      // { notFound: true, revalidate 60 } the revalidate period should\n      // be 60 but if a static asset 404s directly it should have a revalidate\n      // period of 0 so that it doesn't get cached unexpectedly by a CDN\n      else if (is404Page) {\n        const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate')\n        revalidate =\n          typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate\n      }\n\n      // If the cache entry has a revalidate value that's a number, use it.\n      else if (typeof cacheEntry.revalidate === 'number') {\n        if (cacheEntry.revalidate < 1) {\n          throw new Error(\n            `Invariant: invalid Cache-Control duration provided: ${cacheEntry.revalidate} < 1`\n          )\n        }\n\n        revalidate = cacheEntry.revalidate\n      }\n      // Otherwise if the revalidate value is false, then we should use the cache\n      // time of one year.\n      else if (cacheEntry.revalidate === false) {\n        revalidate = CACHE_ONE_YEAR\n      }\n    }\n\n    cacheEntry.revalidate = revalidate\n\n    // If there's a callback for `onCacheEntry`, call it with the cache entry\n    // and the revalidate options.\n    const onCacheEntry = getRequestMeta(req, 'onCacheEntry')\n    if (onCacheEntry) {\n      const finished = await onCacheEntry(\n        {\n          ...cacheEntry,\n          // TODO: remove this when upstream doesn't\n          // always expect this value to be \"PAGE\"\n          value: {\n            ...cacheEntry.value,\n            kind:\n              cacheEntry.value?.kind === 'APP_PAGE'\n                ? 'PAGE'\n                : cacheEntry.value?.kind,\n          },\n        },\n        {\n          url: getRequestMeta(req, 'initURL'),\n        }\n      )\n      if (finished) {\n        // TODO: maybe we have to end the request?\n        return null\n      }\n    }\n\n    if (!cachedData) {\n      // add revalidate metadata before rendering 404 page\n      // so that we can use this as source of truth for the\n      // cache-control header instead of what the 404 page returns\n      // for the revalidate value\n      addRequestMeta(req, 'notFoundRevalidate', cacheEntry.revalidate)\n\n      if (cacheEntry.revalidate) {\n        res.setHeader(\n          'Cache-Control',\n          formatRevalidate({\n            revalidate: cacheEntry.revalidate,\n            swrDelta: this.nextConfig.swrDelta,\n          })\n        )\n      }\n      if (isNextDataRequest) {\n        res.statusCode = 404\n        res.body('{\"notFound\":true}').send()\n        return null\n      }\n\n      if (this.renderOpts.dev) {\n        query.__nextNotFoundSrcPage = pathname\n      }\n      await this.render404(req, res, { pathname, query }, false)\n      return null\n    } else if (cachedData.kind === 'REDIRECT') {\n      if (cacheEntry.revalidate) {\n        res.setHeader(\n          'Cache-Control',\n          formatRevalidate({\n            revalidate: cacheEntry.revalidate,\n            swrDelta: this.nextConfig.swrDelta,\n          })\n        )\n      }\n\n      if (isNextDataRequest) {\n        return {\n          type: 'json',\n          body: RenderResult.fromStatic(\n            // @TODO: Handle flight data.\n            JSON.stringify(cachedData.props)\n          ),\n          revalidate: cacheEntry.revalidate,\n        }\n      } else {\n        await handleRedirect(cachedData.props)\n        return null\n      }\n    } else if (cachedData.kind === 'ROUTE') {\n      const headers = { ...cachedData.headers }\n\n      if (!(this.minimalMode && isSSG)) {\n        delete headers[NEXT_CACHE_TAGS_HEADER]\n      }\n\n      await sendResponse(\n        req,\n        res,\n        new Response(cachedData.body, {\n          headers: fromNodeOutgoingHttpHeaders(headers),\n          status: cachedData.status || 200,\n        })\n      )\n      return null\n    } else if (cachedData.kind === 'APP_PAGE') {\n      // If the request has a postponed state and it's a resume request we\n      // should error.\n      if (cachedData.postponed && minimalPostponed) {\n        throw new Error(\n          'Invariant: postponed state should not be present on a resume request'\n        )\n      }\n\n      if (cachedData.headers) {\n        const headers = { ...cachedData.headers }\n\n        if (!this.minimalMode || !isSSG) {\n          delete headers[NEXT_CACHE_TAGS_HEADER]\n        }\n\n        for (let [key, value] of Object.entries(headers)) {\n          if (typeof value === 'undefined') continue\n\n          if (Array.isArray(value)) {\n            for (const v of value) {\n              res.appendHeader(key, v)\n            }\n          } else if (typeof value === 'number') {\n            value = value.toString()\n            res.appendHeader(key, value)\n          } else {\n            res.appendHeader(key, value)\n          }\n        }\n      }\n\n      if (\n        this.minimalMode &&\n        isSSG &&\n        cachedData.headers?.[NEXT_CACHE_TAGS_HEADER]\n      ) {\n        res.setHeader(\n          NEXT_CACHE_TAGS_HEADER,\n          cachedData.headers[NEXT_CACHE_TAGS_HEADER] as string\n        )\n      }\n\n      // If the request is a data request, then we shouldn't set the status code\n      // from the response because it should always be 200. This should be gated\n      // behind the experimental PPR flag.\n      if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n        res.statusCode = cachedData.status\n      }\n\n      // Mark that the request did postpone if this is a data request.\n      if (cachedData.postponed && isRSCRequest) {\n        res.setHeader(NEXT_DID_POSTPONE_HEADER, '1')\n      }\n\n      // we don't go through this block when preview mode is true\n      // as preview mode is a dynamic request (bypasses cache) and doesn't\n      // generate both HTML and payloads in the same request so continue to just\n      // return the generated payload\n      if (isRSCRequest && !isPreviewMode) {\n        // If this is a dynamic RSC request, then stream the response.\n        if (typeof cachedData.rscData === 'undefined') {\n          if (cachedData.postponed) {\n            throw new Error('Invariant: Expected postponed to be undefined')\n          }\n\n          return {\n            type: 'rsc',\n            body: cachedData.html,\n            // Dynamic RSC responses cannot be cached, even if they're\n            // configured with `force-static` because we have no way of\n            // distinguishing between `force-static` and pages that have no\n            // postponed state.\n            // TODO: distinguish `force-static` from pages with no postponed state (static)\n            revalidate: isDynamicRSCRequest ? 0 : cacheEntry.revalidate,\n          }\n        }\n\n        // As this isn't a prefetch request, we should serve the static flight\n        // data.\n        return {\n          type: 'rsc',\n          body: RenderResult.fromStatic(cachedData.rscData),\n          revalidate: cacheEntry.revalidate,\n        }\n      }\n\n      // This is a request for HTML data.\n      let body = cachedData.html\n\n      // If there's no postponed state, we should just serve the HTML. This\n      // should also be the case for a resume request because it's completed\n      // as a server render (rather than a static render).\n      if (!cachedData.postponed || this.minimalMode) {\n        return {\n          type: 'html',\n          body,\n          revalidate: cacheEntry.revalidate,\n        }\n      }\n\n      // If we're debugging the static shell or the dynamic API accesses, we\n      // should just serve the HTML without resuming the render. The returned\n      // HTML will be the static shell so all the Dynamic API's will be used\n      // during static generation.\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        // Since we're not resuming the render, we need to at least add the\n        // closing body and html tags to create valid HTML.\n        body.chain(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n              controller.close()\n            },\n          })\n        )\n\n        return { type: 'html', body, revalidate: 0 }\n      }\n\n      // This request has postponed, so let's create a new transformer that the\n      // dynamic data can pipe to that will attach the dynamic data to the end\n      // of the response.\n      const transformer = new TransformStream<Uint8Array, Uint8Array>()\n      body.chain(transformer.readable)\n\n      // Perform the render again, but this time, provide the postponed state.\n      // We don't await because we want the result to start streaming now, and\n      // we've already chained the transformer's readable to the render result.\n      doRender({ postponed: cachedData.postponed })\n        .then(async (result) => {\n          if (!result) {\n            throw new Error('Invariant: expected a result to be returned')\n          }\n\n          if (result.value?.kind !== 'APP_PAGE') {\n            throw new Error(\n              `Invariant: expected a page response, got ${result.value?.kind}`\n            )\n          }\n\n          // Pipe the resume result to the transformer.\n          await result.value.html.pipeTo(transformer.writable)\n        })\n        .catch((err) => {\n          // An error occurred during piping or preparing the render, abort\n          // the transformers writer so we can terminate the stream.\n          transformer.writable.abort(err).catch((e) => {\n            console.error(\"couldn't abort transformer\", e)\n          })\n        })\n\n      return {\n        type: 'html',\n        body,\n        // We don't want to cache the response if it has postponed data because\n        // the response being sent to the client it's dynamic parts are streamed\n        // to the client on the same request.\n        revalidate: 0,\n      }\n    } else if (isNextDataRequest) {\n      return {\n        type: 'json',\n        body: RenderResult.fromStatic(JSON.stringify(cachedData.pageData)),\n        revalidate: cacheEntry.revalidate,\n      }\n    } else {\n      return {\n        type: 'html',\n        body: cachedData.html,\n        revalidate: cacheEntry.revalidate,\n      }\n    }\n  }\n\n  private stripNextDataPath(path: string, stripLocale = true) {\n    if (path.includes(this.buildId)) {\n      const splitPath = path.substring(\n        path.indexOf(this.buildId) + this.buildId.length\n      )\n\n      path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n    }\n\n    if (this.localeNormalizer && stripLocale) {\n      return this.localeNormalizer.normalize(path)\n    }\n    return path\n  }\n\n  // map the route to the actual bundle name\n  protected getOriginalAppPaths(route: string) {\n    if (this.enabledDirectories.app) {\n      const originalAppPath = this.appPathRoutes?.[route]\n\n      if (!originalAppPath) {\n        return null\n      }\n\n      return originalAppPath\n    }\n    return null\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const { query, pathname } = ctx\n\n    const appPaths = this.getOriginalAppPaths(pathname)\n    const isAppPath = Array.isArray(appPaths)\n\n    let page = pathname\n    if (isAppPath) {\n      // the last item in the array is the root page, if there are parallel routes\n      page = appPaths[appPaths.length - 1]\n    }\n\n    const result = await this.findPageComponents({\n      page,\n      query,\n      params: ctx.renderOpts.params || {},\n      isAppPath,\n      sriEnabled: !!this.nextConfig.experimental.sri?.algorithm,\n      appPaths,\n      // Ensuring for loading page component routes is done via the matcher.\n      shouldEnsure: false,\n    })\n    if (result) {\n      getTracer().getRootSpanAttributes()?.set('next.route', pathname)\n      try {\n        return await this.renderToResponseWithComponents(ctx, result)\n      } catch (err) {\n        const isNoFallbackError = err instanceof NoFallbackError\n\n        if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n          throw err\n        }\n      }\n    }\n    return false\n  }\n\n  private async renderToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponse,\n      {\n        spanName: `rendering page`,\n        attributes: {\n          'next.route': ctx.pathname,\n        },\n      },\n      async () => {\n        return this.renderToResponseImpl(ctx)\n      }\n    )\n  }\n\n  protected abstract getMiddleware(): MiddlewareRoutingItem | undefined\n  protected abstract getFallbackErrorComponents(\n    url?: string\n  ): Promise<LoadComponentsReturnType | null>\n  protected abstract getRoutesManifest(): NormalizedRouteManifest | undefined\n\n  private async renderToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    const { res, query, pathname } = ctx\n    let page = pathname\n    const bubbleNoFallback = !!query._nextBubbleNoFallback\n    delete query[NEXT_RSC_UNION_QUERY]\n    delete query._nextBubbleNoFallback\n\n    const options: MatchOptions = {\n      i18n: this.i18nProvider?.fromQuery(pathname, query),\n    }\n\n    try {\n      for await (const match of this.matchers.matchAll(pathname, options)) {\n        // when a specific invoke-output is meant to be matched\n        // ensure a prior dynamic route/page doesn't take priority\n        const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput')\n        if (\n          !this.minimalMode &&\n          typeof invokeOutput === 'string' &&\n          isDynamicRoute(invokeOutput || '') &&\n          invokeOutput !== match.definition.pathname\n        ) {\n          continue\n        }\n\n        const result = await this.renderPageComponent(\n          {\n            ...ctx,\n            pathname: match.definition.pathname,\n            renderOpts: {\n              ...ctx.renderOpts,\n              params: match.params,\n            },\n          },\n          bubbleNoFallback\n        )\n        if (result !== false) return result\n      }\n\n      // currently edge functions aren't receiving the x-matched-path\n      // header so we need to fallback to matching the current page\n      // when we weren't able to match via dynamic route to handle\n      // the rewrite case\n      // @ts-expect-error extended in child class web-server\n      if (this.serverOptions.webServerConfig) {\n        // @ts-expect-error extended in child class web-server\n        ctx.pathname = this.serverOptions.webServerConfig.page\n        const result = await this.renderPageComponent(ctx, bubbleNoFallback)\n        if (result !== false) return result\n      }\n    } catch (error) {\n      const err = getProperError(error)\n\n      if (error instanceof MissingStaticPage) {\n        console.error(\n          'Invariant: failed to load static page',\n          JSON.stringify(\n            {\n              page,\n              url: ctx.req.url,\n              matchedPath: ctx.req.headers['x-matched-path'],\n              initUrl: getRequestMeta(ctx.req, 'initURL'),\n              didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n              rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL'),\n            },\n            null,\n            2\n          )\n        )\n        throw err\n      }\n\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError || err instanceof NormalizeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(ctx, err)\n      }\n\n      res.statusCode = 500\n\n      // if pages/500 is present we still need to trigger\n      // /_error `getInitialProps` to allow reporting error\n      if (await this.hasPage('/500')) {\n        ctx.query.__nextCustomErrorRender = '1'\n        await this.renderErrorToResponse(ctx, err)\n        delete ctx.query.__nextCustomErrorRender\n      }\n\n      const isWrappedError = err instanceof WrappedBuildError\n\n      if (!isWrappedError) {\n        if (\n          (this.minimalMode && process.env.NEXT_RUNTIME !== 'edge') ||\n          this.renderOpts.dev\n        ) {\n          if (isError(err)) err.page = page\n          throw err\n        }\n        this.logError(getProperError(err))\n      }\n      const response = await this.renderErrorToResponse(\n        ctx,\n        isWrappedError ? (err as WrappedBuildError).innerError : err\n      )\n      return response\n    }\n\n    if (\n      this.getMiddleware() &&\n      !!ctx.req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${query.__nextLocale ? `/${query.__nextLocale}` : ''}${pathname}`\n      )\n      res.statusCode = 200\n      res.setHeader('content-type', 'application/json')\n      res.body('{}')\n      res.send()\n      return null\n    }\n\n    res.statusCode = 404\n    return this.renderErrorToResponse(ctx, null)\n  }\n\n  public async renderToHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return getTracer().trace(BaseServerSpan.renderToHTML, async () => {\n      return this.renderToHTMLImpl(req, res, pathname, query)\n    })\n  }\n\n  private async renderToHTMLImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.renderError, async () => {\n      return this.renderErrorImpl(err, req, res, pathname, query, setHeaders)\n    })\n  }\n\n  private async renderErrorImpl(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    return this.pipe(\n      async (ctx) => {\n        const response = await this.renderErrorToResponse(ctx, err)\n        if (this.minimalMode && res.statusCode === 500) {\n          throw err\n        }\n        return response\n      },\n      { req, res, pathname, query }\n    )\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    Log.warn(\n      `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n    )\n  })\n\n  private async renderErrorToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(BaseServerSpan.renderErrorToResponse, async () => {\n      return this.renderErrorToResponseImpl(ctx, err)\n    })\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n    // Since favicon.ico is automatically requested by the browser.\n    if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n      return {\n        type: 'html',\n        body: RenderResult.fromStatic(''),\n      }\n    }\n    const { res, query } = ctx\n\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      if (is404) {\n        if (this.enabledDirectories.app) {\n          // Use the not-found entry in app directory\n          result = await this.findPageComponents({\n            page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n            query,\n            params: {},\n            isAppPath: true,\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n\n        if (!result && (await this.hasPage('/404'))) {\n          result = await this.findPageComponents({\n            page: '/404',\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 404 route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (\n        !ctx.query.__nextCustomErrorRender &&\n        !result &&\n        STATIC_STATUS_PAGES.includes(statusPage)\n      ) {\n        // skip ensuring /500 in dev mode as it isn't used and the\n        // dev overlay is used instead\n        if (statusPage !== '/500' || !this.renderOpts.dev) {\n          result = await this.findPageComponents({\n            page: statusPage,\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 500\n            // route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n        }\n      }\n\n      if (!result) {\n        result = await this.findPageComponents({\n          page: '/_error',\n          query,\n          params: {},\n          isAppPath: false,\n          // Ensuring can't be done here because you never \"match\" an error\n          // route.\n          shouldEnsure: true,\n          url: ctx.req.url,\n        })\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      if (!result) {\n        // this can occur when a project directory has been moved/deleted\n        // which is handled in the parent process in development\n        if (this.renderOpts.dev) {\n          return {\n            type: 'html',\n            // wait for dev-server to restart before refreshing\n            body: RenderResult.fromStatic(\n              `\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`\n            ),\n          }\n        }\n\n        throw new WrappedBuildError(\n          new Error('missing required error components')\n        )\n      }\n\n      // If the page has a route module, use it for the new match. If it doesn't\n      // have a route module, remove the match.\n      if (result.components.routeModule) {\n        addRequestMeta(ctx.req, 'match', {\n          definition: result.components.routeModule.definition,\n          params: undefined,\n        })\n      } else {\n        removeRequestMeta(ctx.req, 'match')\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: statusPage,\n            renderOpts: {\n              ...ctx.renderOpts,\n              err,\n            },\n          },\n          result\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (error) {\n      const renderToHtmlError = getProperError(error)\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents(\n        ctx.req.url\n      )\n\n      if (fallbackComponents) {\n        // There was an error, so use it's definition from the route module\n        // to add the match to the request.\n        addRequestMeta(ctx.req, 'match', {\n          definition: fallbackComponents.routeModule!.definition,\n          params: undefined,\n        })\n\n        return this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: '/_error',\n            renderOpts: {\n              ...ctx.renderOpts,\n              // We render `renderToHtmlError` here because `err` is\n              // already captured in the stacktrace.\n              err: isWrappedError\n                ? renderToHtmlError.innerError\n                : renderToHtmlError,\n            },\n          },\n          {\n            query,\n            components: fallbackComponents,\n          }\n        )\n      }\n      return {\n        type: 'html',\n        body: RenderResult.fromStatic('Internal Server Error'),\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async render404(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: Pick<NextUrlWithParsedQuery, 'pathname' | 'query'>,\n    setHeaders = true\n  ): Promise<void> {\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url!, true)\n\n    if (this.nextConfig.i18n) {\n      query.__nextLocale ||= this.nextConfig.i18n.defaultLocale\n      query.__nextDefaultLocale ||= this.nextConfig.i18n.defaultLocale\n    }\n\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n}\n","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","import { isIPv6 } from './is-ipv6'\n\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */\nexport function formatHostname(hostname: string): string {\n  return isIPv6(hostname) ? `[${hostname}]` : hostname\n}\n","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, it the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n","import { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\ntype PatchableResponse = {\n  setHeader(key: string, value: string | string[]): PatchableResponse\n}\n\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */\nexport function patchSetHeaderWithCookieSupport(\n  req: NextIncomingMessage,\n  res: PatchableResponse\n) {\n  const setHeader = res.setHeader.bind(res)\n  res.setHeader = (\n    name: string,\n    value: string | string[]\n  ): PatchableResponse => {\n    // When renders /_error after page is failed, it could attempt to set\n    // headers after headers.\n    if ('headersSent' in res && res.headersSent) {\n      return res\n    }\n\n    if (name.toLowerCase() === 'set-cookie') {\n      const middlewareValue = getRequestMeta(req, 'middlewareCookie')\n\n      if (\n        !middlewareValue ||\n        !Array.isArray(value) ||\n        !value.every((item, idx) => item === middlewareValue[idx])\n      ) {\n        value = [\n          // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n          ...new Set([\n            ...(middlewareValue || []),\n            ...(typeof value === 'string'\n              ? [value]\n              : Array.isArray(value)\n                ? value\n                : []),\n          ]),\n        ]\n      }\n    }\n\n    return setHeader(name, value)\n  }\n}\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\n\nexport function normalizeVercelUrl(\n  req: BaseNextRequest,\n  trustQuery: boolean,\n  paramKeys?: string[],\n  pageIsDynamic?: boolean,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  // make sure to normalize req.url on Vercel to strip dynamic params\n  // from the query which are added during routing\n  if (pageIsDynamic && trustQuery && defaultRouteRegex) {\n    const _parsedUrl = parseUrl(req.url!, true)\n    delete (_parsedUrl as any).search\n\n    for (const key of Object.keys(_parsedUrl.query)) {\n      const isNextQueryPrefix =\n        key !== NEXT_QUERY_PARAM_PREFIX &&\n        key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n      const isNextInterceptionMarkerPrefix =\n        key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n        key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n      if (\n        isNextQueryPrefix ||\n        isNextInterceptionMarkerPrefix ||\n        (paramKeys || Object.keys(defaultRouteRegex.groups)).includes(key)\n      ) {\n        delete _parsedUrl.query[key]\n      }\n    }\n    req.url = formatUrl(_parsedUrl)\n  }\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    const paramIdx = pathname!.indexOf(builtParam)\n\n    if (paramIdx > -1) {\n      let paramValue: string\n      const value = params[param]\n\n      if (Array.isArray(value)) {\n        paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n      } else if (value) {\n        paramValue = encodeURIComponent(value)\n      } else {\n        paramValue = ''\n      }\n\n      pathname =\n        pathname.slice(0, paramIdx) +\n        paramValue +\n        pathname.slice(paramIdx + builtParam.length)\n    }\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  params: ParsedUrlQuery,\n  ignoreOptional?: boolean,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined,\n  defaultRouteMatches?: ParsedUrlQuery | undefined\n) {\n  let hasValidParams = true\n  if (!defaultRouteRegex) return { params, hasValidParams: false }\n\n  params = Object.keys(defaultRouteRegex.groups).reduce((prev, key) => {\n    let value: string | string[] | undefined = params[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    }\n    if (Array.isArray(value)) {\n      value = value.map((val) => {\n        if (typeof val === 'string') {\n          val = normalizeRscURL(val)\n        }\n        return val\n      })\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreOptional))\n    ) {\n      hasValidParams = false\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)))\n    ) {\n      value = undefined\n      delete params[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      prev[key] = value\n    }\n    return prev\n  }, {} as ParsedUrlQuery)\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: {\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, false)\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(req: BaseNextRequest, parsedUrl: UrlWithParsedQuery) {\n    const rewriteParams = {}\n    let fsPathname = parsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: Rewrite): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n      let params = matcher(parsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          rewrite.has,\n          rewrite.missing\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: parsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(parsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        Object.assign(parsedUrl, parsedDestination)\n\n        fsPathname = parsedUrl.pathname\n\n        if (basePath) {\n          fsPathname =\n            fsPathname!.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const destLocalePathResult = normalizeLocalePath(\n            fsPathname!,\n            i18n.locales\n          )\n          fsPathname = destLocalePathResult.pathname\n          parsedUrl.query.nextInternalLocale =\n            destLocalePathResult.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            parsedUrl.query = {\n              ...parsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n    return rewriteParams\n  }\n\n  function getParamsFromRouteMatches(\n    req: BaseNextRequest,\n    renderOpts?: any,\n    detectedLocale?: string\n  ) {\n    return getRouteMatcher(\n      (function () {\n        const { groups, routeKeys } = defaultRouteRegex!\n\n        return {\n          re: {\n            // Simulate a RegExp match from the \\`req.url\\` input\n            exec: (str: string) => {\n              const obj = Object.fromEntries(new URLSearchParams(str))\n              const matchesHasLocale =\n                i18n && detectedLocale && obj['1'] === detectedLocale\n\n              for (const key of Object.keys(obj)) {\n                const value = obj[key]\n\n                if (\n                  key !== NEXT_QUERY_PARAM_PREFIX &&\n                  key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n                ) {\n                  const normalizedKey = key.substring(\n                    NEXT_QUERY_PARAM_PREFIX.length\n                  )\n                  obj[normalizedKey] = value\n                  delete obj[key]\n                }\n              }\n\n              // favor named matches if available\n              const routeKeyNames = Object.keys(routeKeys || {})\n              const filterLocaleItem = (val: string | string[] | undefined) => {\n                if (i18n) {\n                  // locale items can be included in route-matches\n                  // for fallback SSG pages so ensure they are\n                  // filtered\n                  const isCatchAll = Array.isArray(val)\n                  const _val = isCatchAll ? val[0] : val\n\n                  if (\n                    typeof _val === 'string' &&\n                    i18n.locales.some((item) => {\n                      if (item.toLowerCase() === _val.toLowerCase()) {\n                        detectedLocale = item\n                        renderOpts.locale = detectedLocale\n                        return true\n                      }\n                      return false\n                    })\n                  ) {\n                    // remove the locale item from the match\n                    if (isCatchAll) {\n                      ;(val as string[]).splice(0, 1)\n                    }\n\n                    // the value is only a locale item and\n                    // shouldn't be added\n                    return isCatchAll ? val.length === 0 : true\n                  }\n                }\n                return false\n              }\n\n              if (routeKeyNames.every((name) => obj[name])) {\n                return routeKeyNames.reduce((prev, keyName) => {\n                  const paramName = routeKeys?.[keyName]\n\n                  if (paramName && !filterLocaleItem(obj[keyName])) {\n                    prev[groups[paramName].pos] = obj[keyName]\n                  }\n                  return prev\n                }, {} as any)\n              }\n\n              return Object.keys(obj).reduce((prev, key) => {\n                if (!filterLocaleItem(obj[key])) {\n                  let normalizedKey = key\n\n                  if (matchesHasLocale) {\n                    normalizedKey = parseInt(key, 10) - 1 + ''\n                  }\n                  return Object.assign(prev, {\n                    [normalizedKey]: obj[key],\n                  })\n                }\n                return prev\n              }, {})\n            },\n          },\n          groups,\n        }\n      })() as any\n    )(req.headers['x-now-route-matches'] as string) as ParsedUrlQuery\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    getParamsFromRouteMatches,\n    normalizeDynamicRouteParams: (\n      params: ParsedUrlQuery,\n      ignoreOptional?: boolean\n    ) =>\n      normalizeDynamicRouteParams(\n        params,\n        ignoreOptional,\n        defaultRouteRegex,\n        defaultRouteMatches\n      ),\n    normalizeVercelUrl: (\n      req: BaseNextRequest,\n      trustQuery: boolean,\n      paramKeys?: string[]\n    ) =>\n      normalizeVercelUrl(\n        req,\n        trustQuery,\n        paramKeys,\n        pageIsDynamic,\n        defaultRouteRegex\n      ),\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n  }\n}\n","import { BLOCKED_PAGES } from '../shared/lib/constants'\n\nexport function isBlockedPage(page: string): boolean {\n  return BLOCKED_PAGES.includes(page)\n}\n\nexport function cleanAmpPath(pathname: string): string {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?')\n  }\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, '')\n  }\n  pathname = pathname.replace(/\\?$/, '')\n  return pathname\n}\n\ntype AnyFunc<T> = (this: T, ...args: any) => any\nexport function debounce<T, F extends AnyFunc<T>>(\n  fn: F,\n  ms: number,\n  maxWait = Infinity\n) {\n  let timeoutId: undefined | NodeJS.Timeout\n\n  // The time the debouncing function was first called during this debounce queue.\n  let startTime = 0\n  // The time the debouncing function was last called.\n  let lastCall = 0\n\n  // The arguments and this context of the last call to the debouncing function.\n  let args: Parameters<F>, context: T\n\n  // A helper used to that either invokes the debounced function, or\n  // reschedules the timer if a more recent call was made.\n  function run() {\n    const now = Date.now()\n    const diff = lastCall + ms - now\n\n    // If the diff is non-positive, then we've waited at least `ms`\n    // milliseconds since the last call. Or if we've waited for longer than the\n    // max wait time, we must call the debounced function.\n    if (diff <= 0 || startTime + maxWait >= now) {\n      // It's important to clear the timeout id before invoking the debounced\n      // function, in case the function calls the debouncing function again.\n      timeoutId = undefined\n      fn.apply(context, args)\n    } else {\n      // Else, a new call was made after the original timer was scheduled. We\n      // didn't clear the timeout (doing so is very slow), so now we need to\n      // reschedule the timer for the time difference.\n      timeoutId = setTimeout(run, diff)\n    }\n  }\n\n  return function (this: T, ...passedArgs: Parameters<F>) {\n    // The arguments and this context of the most recent call are saved so the\n    // debounced function can be invoked with them later.\n    args = passedArgs\n    context = this\n\n    // Instead of constantly clearing and scheduling a timer, we record the\n    // time of the last call. If a second call comes in before the timer fires,\n    // then we'll reschedule in the run function. Doing this is considerably\n    // faster.\n    lastCall = Date.now()\n\n    // Only schedule a new timer if we're not currently waiting.\n    if (timeoutId === undefined) {\n      startTime = lastCall\n      timeoutId = setTimeout(run, ms)\n    }\n  }\n}\n","import type { ServerRuntime } from '../types'\nimport { SERVER_RUNTIME } from './constants'\n\nexport function isEdgeRuntime(value?: string): value is ServerRuntime {\n  return (\n    value === SERVER_RUNTIME.experimentalEdge || value === SERVER_RUNTIME.edge\n  )\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION.toLowerCase()) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION.toLowerCase()] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isServerAction,\n  }\n}\n\nexport function getIsServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isServerAction\n}\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import { appendMutableCookies } from '../../web/spec-extension/adapters/request-cookies'\nimport type { ResponseCookies } from '../../web/spec-extension/cookies'\n\nexport function handleRedirectResponse(\n  url: string,\n  mutableCookies: ResponseCookies,\n  status: number\n): Response {\n  const headers = new Headers({ location: url })\n\n  appendMutableCookies(headers, mutableCookies)\n\n  return new Response(null, { status, headers })\n}\n\nexport function handleBadRequestResponse(): Response {\n  return new Response(null, { status: 400 })\n}\n\nexport function handleNotFoundResponse(): Response {\n  return new Response(null, { status: 404 })\n}\n\nexport function handleMethodNotAllowedResponse(): Response {\n  return new Response(null, { status: 405 })\n}\n\nexport function handleInternalServerErrorResponse(): Response {\n  return new Response(null, { status: 500 })\n}\n","import { RedirectStatusCode } from '../client/components/redirect-status-code'\n\nexport const allowedStatusCodes = new Set([301, 302, 303, 307, 308])\n\nexport function getRedirectStatus(route: {\n  statusCode?: number\n  permanent?: boolean\n}): number {\n  return (\n    route.statusCode ||\n    (route.permanent\n      ? RedirectStatusCode.PermanentRedirect\n      : RedirectStatusCode.TemporaryRedirect)\n  )\n}\n\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex: string, restrictedPaths?: string[]) {\n  if (restrictedPaths) {\n    regex = regex.replace(\n      /\\^/,\n      `^(?!${restrictedPaths\n        .map((path) => path.replace(/\\//g, '\\\\/'))\n        .join('|')})`\n    )\n  }\n  regex = regex.replace(/\\$$/, '(?:\\\\/)?$')\n  return regex\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"vm\");","import type { DeepReadonly } from './deep-readonly'\n\n/**\n * Recursively freezes an object and all of its properties. This prevents the\n * object from being modified at runtime. When the JS runtime is running in\n * strict mode, any attempts to modify a frozen object will throw an error.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n * @param obj The object to freeze.\n */\nexport function deepFreeze<T extends object>(obj: T): DeepReadonly<T> {\n  // If the object is already frozen, there's no need to freeze it again.\n  if (Object.isFrozen(obj)) return obj as DeepReadonly<T>\n\n  // An array is an object, but we also want to freeze each element in the array\n  // as well.\n  if (Array.isArray(obj)) {\n    for (const item of obj) {\n      if (!item || typeof item !== 'object') continue\n      deepFreeze(item)\n    }\n\n    return Object.freeze(obj) as DeepReadonly<T>\n  }\n\n  for (const value of Object.values(obj)) {\n    if (!value || typeof value !== 'object') continue\n    deepFreeze(value)\n  }\n\n  return Object.freeze(obj) as DeepReadonly<T>\n}\n","import type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nimport { readFileSync } from 'fs'\nimport { runInNewContext } from 'vm'\nimport { deepFreeze } from '../shared/lib/deep-freeze'\n\nconst sharedCache = new Map<string, unknown>()\n\n/**\n * Load a manifest file from the file system. Optionally cache the manifest in\n * memory to avoid reading the file multiple times using the provided cache or\n * defaulting to a shared module cache. The manifest is frozen to prevent\n * modifications if it is cached.\n *\n * @param path the path to the manifest file\n * @param shouldCache whether to cache the manifest in memory\n * @param cache the cache to use for storing the manifest\n * @returns the manifest object\n */\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache: false\n): T\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache?: boolean,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache?: true,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache: boolean = true,\n  cache = sharedCache\n): T {\n  const cached = shouldCache && cache.get(path)\n  if (cached) {\n    return cached as T\n  }\n\n  let manifest = JSON.parse(readFileSync(path, 'utf8'))\n\n  // Freeze the manifest so it cannot be modified if we're caching it.\n  if (shouldCache) {\n    manifest = deepFreeze(manifest)\n  }\n\n  if (shouldCache) {\n    cache.set(path, manifest)\n  }\n\n  return manifest\n}\n\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache: false\n): T\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache?: boolean,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache?: true,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache: boolean = true,\n  cache = sharedCache\n): T {\n  const cached = shouldCache && cache.get(path)\n  if (cached) {\n    return cached as T\n  }\n\n  const content = readFileSync(path, 'utf8')\n  if (content.length === 0) {\n    throw new Error('Manifest file is empty')\n  }\n\n  let contextObject = {}\n  runInNewContext(content, contextObject)\n\n  // Freeze the context object so it cannot be modified if we're caching it.\n  if (shouldCache) {\n    contextObject = deepFreeze(contextObject)\n  }\n\n  if (shouldCache) {\n    cache.set(path, contextObject)\n  }\n\n  return contextObject as T\n}\n\nexport function clearManifestCache(path: string, cache = sharedCache): boolean {\n  return cache.delete(path)\n}\n","import path from 'path'\nimport {\n  AUTOMATIC_FONT_OPTIMIZATION_MANIFEST,\n  PAGES_MANIFEST,\n  SERVER_DIRECTORY,\n  APP_PATHS_MANIFEST,\n} from '../shared/lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { PageNotFoundError, MissingStaticPage } from '../shared/lib/utils'\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport { loadManifest } from './load-manifest'\nimport { promises } from 'fs'\nimport type { FontManifest } from './font-utils'\n\nconst isDev = process.env.NODE_ENV === 'development'\nconst pagePathCache = !isDev\n  ? new LRUCache<string, string | null>({\n      max: 1000,\n    })\n  : null\n\nexport function getMaybePagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string | null {\n  const cacheKey = `${page}:${distDir}:${locales}:${isAppPath}`\n\n  let pagePath = pagePathCache?.get(cacheKey)\n\n  // If we have a cached path, we can return it directly.\n  if (pagePath) return pagePath\n\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  let appPathsManifest: undefined | PagesManifest\n\n  if (isAppPath) {\n    appPathsManifest = loadManifest(\n      path.join(serverBuildPath, APP_PATHS_MANIFEST),\n      !isDev\n    ) as PagesManifest\n  }\n  const pagesManifest = loadManifest(\n    path.join(serverBuildPath, PAGES_MANIFEST),\n    !isDev\n  ) as PagesManifest\n\n  try {\n    page = denormalizePagePath(normalizePagePath(page))\n  } catch (err) {\n    console.error(err)\n    throw new PageNotFoundError(page)\n  }\n\n  const checkManifest = (manifest: PagesManifest) => {\n    let curPath = manifest[page]\n\n    if (!manifest[curPath] && locales) {\n      const manifestNoLocales: typeof pagesManifest = {}\n\n      for (const key of Object.keys(manifest)) {\n        manifestNoLocales[normalizeLocalePath(key, locales).pathname] =\n          pagesManifest[key]\n      }\n      curPath = manifestNoLocales[page]\n    }\n    return curPath\n  }\n\n  if (appPathsManifest) {\n    pagePath = checkManifest(appPathsManifest)\n  }\n\n  if (!pagePath) {\n    pagePath = checkManifest(pagesManifest)\n  }\n\n  if (!pagePath) {\n    pagePathCache?.set(cacheKey, null)\n    return null\n  }\n\n  pagePath = path.join(serverBuildPath, pagePath)\n\n  pagePathCache?.set(cacheKey, pagePath)\n  return pagePath\n}\n\nexport function getPagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string {\n  const pagePath = getMaybePagePath(page, distDir, locales, isAppPath)\n\n  if (!pagePath) {\n    throw new PageNotFoundError(page)\n  }\n\n  return pagePath\n}\n\nexport async function requirePage(\n  page: string,\n  distDir: string,\n  isAppPath: boolean\n): Promise<any> {\n  const pagePath = getPagePath(page, distDir, undefined, isAppPath)\n  if (pagePath.endsWith('.html')) {\n    return promises.readFile(pagePath, 'utf8').catch((err) => {\n      throw new MissingStaticPage(page, err.message)\n    })\n  }\n\n  // since require is synchronous we can set the specific runtime\n  // we are requiring for the require-hook and then clear after\n  try {\n    process.env.__NEXT_PRIVATE_RUNTIME_TYPE = isAppPath ? 'app' : 'pages'\n    const mod = process.env.NEXT_MINIMAL\n      ? // @ts-ignore\n        __non_webpack_require__(pagePath)\n      : require(pagePath)\n    return mod\n  } finally {\n    process.env.__NEXT_PRIVATE_RUNTIME_TYPE = ''\n  }\n}\n\nexport function requireFontManifest(distDir: string) {\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  const fontManifest = loadManifest(\n    path.join(serverBuildPath, AUTOMATIC_FONT_OPTIMIZATION_MANIFEST)\n  ) as FontManifest\n  return fontManifest\n}\n","export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","/**\n * Wait for a given number of milliseconds and then resolve.\n *\n * @param ms the number of milliseconds to wait\n */\nexport async function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type { ClientReferenceManifest } from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\n\n// Keep the key in memory as it should never change during the lifetime of the server in\n// both development and production.\nlet __next_encryption_key_generation_promise: Promise<\n  [CryptoKey, string]\n> | null = null\nlet __next_loaded_action_key: CryptoKey\nlet __next_internal_development_raw_action_key: string\n\nexport function arrayBufferToString(buffer: ArrayBuffer) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport async function generateEncryptionKeyBase64(dev?: boolean) {\n  // For development, we just keep one key in memory for all actions.\n  // This makes things faster.\n  if (dev) {\n    if (typeof __next_internal_development_raw_action_key !== 'undefined') {\n      return __next_internal_development_raw_action_key\n    }\n  }\n\n  // This avoids it being generated multiple times in parallel.\n  if (!__next_encryption_key_generation_promise) {\n    __next_encryption_key_generation_promise = new Promise(\n      async (resolve, reject) => {\n        try {\n          const key = await crypto.subtle.generateKey(\n            {\n              name: 'AES-GCM',\n              length: 256,\n            },\n            true,\n            ['encrypt', 'decrypt']\n          )\n          const exported = await crypto.subtle.exportKey('raw', key)\n          const b64 = btoa(arrayBufferToString(exported))\n\n          resolve([key, b64])\n        } catch (error) {\n          reject(error)\n        }\n      }\n    )\n  }\n\n  const [key, b64] = await __next_encryption_key_generation_promise\n\n  __next_loaded_action_key = key\n  if (dev) {\n    __next_internal_development_raw_action_key = b64\n  }\n\n  return b64\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-ignore\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifest,\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new Error(\n      'Missing manifest for Server Actions. This is a bug in Next.js'\n    )\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestSingleton() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new Error(\n      'Missing manifest for Server Actions. This is a bug in Next.js'\n    )\n  }\n\n  return serverActionsManifestSingleton.clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new Error(\n      'Missing manifest for Server Actions. This is a bug in Next.js'\n    )\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new Error('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n","import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathName, LoadableManifest>`\n * where pathName is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function loadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // Make sure to avoid loading the manifest for Route Handlers\n  const hasClientManifest =\n    isAppPath && (page.endsWith('/page') || page === UNDERSCORE_NOT_FOUND_ROUTE)\n\n  // Load the manifest files first\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(join(distDir, BUILD_MANIFEST)),\n    loadManifestWithRetries<ReactLoadableManifest>(\n      join(distDir, REACT_LOADABLE_MANIFEST)\n    ),\n    hasClientManifest\n      ? loadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_')\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json')\n        ).catch(() => null)\n      : null,\n  ])\n\n  // Before requring the actual page module, we have to set the reference manifests\n  // to our global store so Server Action's encryption util can access to them\n  // at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n        pageName: page,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    reactLoadableManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n  pageName,\n}: {\n  serverActionsManifest: ActionManifest\n  pageName: string\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        return {\n          id: serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ][id].workers[normalizeWorkerPageName(pageName)],\n          name: id,\n          chunks: [],\n        }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"stream\");","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    process.nextTick(cb)\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n","import type { IncrementalCacheItem, ResponseCacheEntry } from './types'\n\nimport RenderResult from '../render-result'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalCacheItem> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === 'PAGE'\n        ? {\n            kind: 'PAGE',\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === 'APP_PAGE'\n          ? {\n              kind: 'APP_PAGE',\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalCacheItem\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  if (response.value?.kind === 'FETCH') {\n    throw new Error(\n      'Invariant: unexpected cachedResponse of kind fetch in response cache'\n    )\n  }\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    revalidate: response.revalidate,\n    value:\n      response.value?.kind === 'PAGE'\n        ? {\n            kind: 'PAGE',\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          }\n        : response.value?.kind === 'APP_PAGE'\n          ? {\n              kind: 'APP_PAGE',\n              html: RenderResult.fromStatic(response.value.html),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n            }\n          : response.value,\n  }\n}\n","import type {\n  IncrementalCache,\n  ResponseCacheEntry,\n  ResponseGenerator,\n  IncrementalCacheItem,\n  ResponseCacheBase,\n  IncrementalCacheKindHint,\n} from './types'\nimport { RouteKind } from '../route-kind'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { fromResponseCacheEntry, toResponseCacheEntry } from './utils'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalCacheItem | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalCacheItem | null\n    expiresAt: number\n  }\n\n  private minimalMode?: boolean\n\n  constructor(minimalMode: boolean) {\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind?: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) return responseGenerator(false, null)\n\n    const { incrementalCache, isOnDemandRevalidate = false } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      async (cacheKey, resolve) => {\n        // We keep the previous cache entry around to leverage when the\n        // incremental cache is disabled in minimal mode.\n        if (\n          this.minimalMode &&\n          this.previousCacheItem?.key === cacheKey &&\n          this.previousCacheItem.expiresAt > Date.now()\n        ) {\n          return this.previousCacheItem.entry\n        }\n\n        // Coerce the kindHint into a given kind for the incremental cache.\n        let kindHint: IncrementalCacheKindHint | undefined\n        if (\n          context.routeKind === RouteKind.APP_PAGE ||\n          context.routeKind === RouteKind.APP_ROUTE\n        ) {\n          kindHint = 'app'\n        } else if (context.routeKind === RouteKind.PAGES) {\n          kindHint = 'pages'\n        }\n\n        let resolved = false\n        let cachedResponse: IncrementalCacheItem = null\n        try {\n          cachedResponse = !this.minimalMode\n            ? await incrementalCache.get(key, {\n                kindHint,\n                isRoutePPREnabled: context.isRoutePPREnabled,\n              })\n            : null\n\n          if (cachedResponse && !isOnDemandRevalidate) {\n            if (cachedResponse.value?.kind === 'FETCH') {\n              throw new Error(\n                `invariant: unexpected cachedResponse of kind fetch in response cache`\n              )\n            }\n\n            resolve({\n              ...cachedResponse,\n              revalidate: cachedResponse.curRevalidate,\n            })\n            resolved = true\n\n            if (!cachedResponse.isStale || context.isPrefetch) {\n              // The cached value is still valid, so we don't need\n              // to update it yet.\n              return null\n            }\n          }\n\n          const cacheEntry = await responseGenerator(\n            resolved,\n            cachedResponse,\n            true\n          )\n\n          // If the cache entry couldn't be generated, we don't want to cache\n          // the result.\n          if (!cacheEntry) {\n            // Unset the previous cache item if it was set.\n            if (this.minimalMode) this.previousCacheItem = undefined\n            return null\n          }\n\n          const resolveValue = await fromResponseCacheEntry({\n            ...cacheEntry,\n            isMiss: !cachedResponse,\n          })\n          if (!resolveValue) {\n            // Unset the previous cache item if it was set.\n            if (this.minimalMode) this.previousCacheItem = undefined\n            return null\n          }\n\n          // For on-demand revalidate wait to resolve until cache is set.\n          // Otherwise resolve now.\n          if (!isOnDemandRevalidate && !resolved) {\n            resolve(resolveValue)\n            resolved = true\n          }\n\n          if (typeof resolveValue.revalidate !== 'undefined') {\n            if (this.minimalMode) {\n              this.previousCacheItem = {\n                key: cacheKey,\n                entry: resolveValue,\n                expiresAt: Date.now() + 1000,\n              }\n            } else {\n              await incrementalCache.set(key, resolveValue.value, {\n                revalidate: resolveValue.revalidate,\n                isRoutePPREnabled: context.isRoutePPREnabled,\n              })\n            }\n          }\n\n          return resolveValue\n        } catch (err) {\n          // When a getStaticProps path is erroring we automatically re-set the\n          // existing cache under a new expiration to prevent non-stop retrying.\n          if (cachedResponse) {\n            await incrementalCache.set(key, cachedResponse.value, {\n              revalidate: Math.min(\n                Math.max(cachedResponse.revalidate || 3, 3),\n                30\n              ),\n              isRoutePPREnabled: context.isRoutePPREnabled,\n            })\n          }\n\n          // While revalidating in the background we can't reject as we already\n          // resolved the cache entry so log the error here.\n          if (resolved) {\n            console.error(err)\n            return null\n          }\n\n          // We haven't resolved yet, so let's throw to indicate an error.\n          throw err\n        }\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","import type { PrerenderManifest } from '../../../build'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\nimport type { Revalidate } from '../revalidate'\n\n/**\n * A shared cache of revalidate timings for routes. This cache is used so we\n * don't have to modify the prerender manifest when we want to update the\n * revalidate timings for a route.\n */\nexport class SharedRevalidateTimings {\n  /**\n   * The in-memory cache of revalidate timings for routes. This cache is\n   * populated when the cache is updated with new timings.\n   */\n  private static readonly timings = new Map<string, Revalidate>()\n\n  constructor(\n    /**\n     * The prerender manifest that contains the initial revalidate timings for\n     * routes.\n     */\n    private readonly prerenderManifest: DeepReadonly<\n      Pick<PrerenderManifest, 'routes'>\n    >\n  ) {}\n\n  /**\n   * Try to get the revalidate timings for a route. This will first try to get\n   * the timings from the in-memory cache. If the timings are not present in the\n   * in-memory cache, then the timings will be sourced from the prerender\n   * manifest.\n   *\n   * @param route the route to get the revalidate timings for\n   * @returns the revalidate timings for the route, or undefined if the timings\n   *          are not present in the in-memory cache or the prerender manifest\n   */\n  public get(route: string): Revalidate | undefined {\n    // This is a copy on write cache that is updated when the cache is updated.\n    // If the cache is never written to, then the timings will be sourced from\n    // the prerender manifest.\n    let revalidate = SharedRevalidateTimings.timings.get(route)\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    revalidate = this.prerenderManifest.routes[route]?.initialRevalidateSeconds\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    return undefined\n  }\n\n  /**\n   * Set the revalidate timings for a route.\n   *\n   * @param route the route to set the revalidate timings for\n   * @param revalidate the revalidate timings for the route\n   */\n  public set(route: string, revalidate: Revalidate) {\n    SharedRevalidateTimings.timings.set(route, revalidate)\n  }\n\n  /**\n   * Clear the in-memory cache of revalidate timings for routes.\n   */\n  public clear() {\n    SharedRevalidateTimings.timings.clear()\n  }\n}\n","import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport type {\n  IncrementalCacheValue,\n  IncrementalCacheEntry,\n  IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKindHint,\n} from '../../response-cache'\nimport type { Revalidate } from '../revalidate'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FetchCache from './fetch-cache'\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedRevalidateTimings } from './shared-revalidate-timings'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _appDir: boolean\n  _pagesDir: boolean\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    ..._args: Parameters<IncrementalCache['get']>\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    ..._args: Parameters<IncrementalCache['set']>\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly requestProtocol?: 'http' | 'https'\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n\n  private readonly locks = new Map<string, Promise<void>>()\n  private readonly unlocks = new Map<string, () => Promise<void>>()\n\n  /**\n   * The revalidate timings for routes. This will source the timings from the\n   * prerender manifest until the in-memory cache is updated with new timings.\n   */\n  private readonly revalidateTimings: SharedRevalidateTimings\n\n  constructor({\n    fs,\n    dev,\n    appDir,\n    pagesDir,\n    flushToDisk,\n    fetchCache,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    requestProtocol,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    appDir?: boolean\n    pagesDir?: boolean\n    fetchCache?: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    requestProtocol?: 'http' | 'https'\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n    if (!CurCacheHandler) {\n      if (fs && serverDistDir) {\n        if (debug) {\n          console.log('using filesystem cache handler')\n        }\n        CurCacheHandler = FileSystemCache\n      }\n      if (\n        FetchCache.isAvailable({ _requestHeaders: requestHeaders }) &&\n        minimalMode &&\n        fetchCache\n      ) {\n        if (debug) {\n          console.log('using fetch cache handler')\n        }\n        CurCacheHandler = FetchCache\n      }\n    } else if (debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.requestProtocol = requestProtocol\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.revalidateTimings = new SharedRevalidateTimings(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (\n      minimalMode &&\n      typeof requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n      requestHeaders[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] ===\n        this.prerenderManifest?.preview?.previewModeId\n    ) {\n      revalidatedTags =\n        requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _pagesDir: !!pagesDir,\n        _appDir: !!appDir,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev?: boolean\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev) return new Date().getTime() - 1000\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second.\n    const initialRevalidateSeconds =\n      this.revalidateTimings.get(toRoute(pathname)) ?? 1\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async unlock(cacheKey: string) {\n    const unlock = this.unlocks.get(cacheKey)\n    if (unlock) {\n      unlock()\n      this.locks.delete(cacheKey)\n      this.unlocks.delete(cacheKey)\n    }\n  }\n\n  async lock(cacheKey: string) {\n    let unlockNext: () => Promise<void> = () => Promise.resolve()\n    const existingLock = this.locks.get(cacheKey)\n\n    if (existingLock) {\n      await existingLock\n    } else {\n      const newLock = new Promise<void>((resolve) => {\n        unlockNext = async () => {\n          resolve()\n        }\n      })\n\n      this.locks.set(cacheKey, newLock)\n      this.unlocks.set(cacheKey, unlockNext)\n    }\n\n    return unlockNext\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag?.(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async fetchCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle ReadableStream body\n      if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    if ('traceparent' in headers) delete headers['traceparent']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  // get data from cache if available\n  async get(\n    cacheKey: string,\n    ctx: {\n      kindHint?: IncrementalCacheKindHint\n      revalidate?: Revalidate\n      fetchUrl?: string\n      fetchIdx?: number\n      tags?: string[]\n      softTags?: string[]\n      isRoutePPREnabled?: boolean\n    } = {}\n  ): Promise<IncrementalCacheEntry | null> {\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kindHint !== 'fetch' ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    cacheKey = this._getPathname(cacheKey, ctx.kindHint === 'fetch')\n    let entry: IncrementalCacheEntry | null = null\n    let revalidate = ctx.revalidate\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (cacheData?.value?.kind === 'FETCH') {\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some((tag) => {\n          return this.revalidatedTags?.includes(tag)\n        })\n      ) {\n        return null\n      }\n\n      revalidate = revalidate || cacheData.value.revalidate\n      const age = (Date.now() - (cacheData.lastModified || 0)) / 1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale: isStale,\n        value: {\n          kind: 'FETCH',\n          data,\n          revalidate: revalidate,\n        },\n        revalidateAfter: Date.now() + revalidate * 1000,\n      }\n    }\n\n    const curRevalidate = this.revalidateTimings.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || Date.now(),\n        this.dev && ctx.kindHint !== 'fetch'\n      )\n      isStale =\n        revalidateAfter !== false && revalidateAfter < Date.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        curRevalidate,\n        revalidateAfter,\n        value: cacheData.value,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        curRevalidate,\n        revalidateAfter,\n      }\n      this.set(cacheKey, entry.value, ctx)\n    }\n    return entry\n  }\n\n  // populate the incremental cache with new data\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: {\n      revalidate?: Revalidate\n      fetchCache?: boolean\n      fetchUrl?: string\n      fetchIdx?: number\n      tags?: string[]\n      isRoutePPREnabled?: boolean\n    }\n  ) {\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      // we don't show this error/warning when a custom cache handler is being used\n      // as it might not have this limit\n      !this.hasCustomCacheHandler &&\n      itemSize > 2 * 1024 * 1024\n    ) {\n      if (this.dev) {\n        throw new Error(\n          `Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`\n        )\n      }\n      return\n    }\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    try {\n      // Set the value for the revalidate seconds so if it changes we can\n      // update the cache with the new value.\n      if (typeof ctx.revalidate !== 'undefined' && !ctx.fetchCache) {\n        this.revalidateTimings.set(toRoute(pathname), ctx.revalidate)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https\");","import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n","import type {\n  ServerResponse,\n  OutgoingHttpHeaders,\n  OutgoingHttpHeader,\n  IncomingMessage,\n  IncomingHttpHeaders,\n} from 'http'\nimport type { Socket } from 'net'\nimport type { TLSSocket } from 'tls'\n\nimport Stream from 'stream'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../web/utils'\n\ninterface MockedRequestOptions {\n  url: string\n  headers: IncomingHttpHeaders\n  method: string\n  readable?: Stream.Readable\n  socket?: Socket | null\n}\n\nexport class MockedRequest extends Stream.Readable implements IncomingMessage {\n  public url: string\n  public readonly statusCode?: number | undefined\n  public readonly statusMessage?: string | undefined\n  public readonly headers: IncomingHttpHeaders\n  public readonly method: string\n\n  // This is hardcoded for now, but can be updated to be configurable if needed.\n  public readonly httpVersion = '1.0'\n  public readonly httpVersionMajor = 1\n  public readonly httpVersionMinor = 0\n\n  private bodyReadable?: Stream.Readable\n\n  // If we don't actually have a socket, we'll just use a mock one that\n  // always returns false for the `encrypted` property and undefined for the\n  // `remoteAddress` property.\n  public socket: Socket = new Proxy<TLSSocket>({} as TLSSocket, {\n    get: (_target, prop) => {\n      if (prop !== 'encrypted' && prop !== 'remoteAddress') {\n        throw new Error('Method not implemented')\n      }\n\n      if (prop === 'remoteAddress') return undefined\n      // For this mock request, always ensure we just respond with the encrypted\n      // set to false to ensure there's no odd leakages.\n      return false\n    },\n  })\n\n  constructor({\n    url,\n    headers,\n    method,\n    socket = null,\n    readable,\n  }: MockedRequestOptions) {\n    super()\n\n    this.url = url\n    this.headers = headers\n    this.method = method\n\n    if (readable) {\n      this.bodyReadable = readable\n      this.bodyReadable.on('end', () => this.emit('end'))\n      this.bodyReadable.on('close', () => this.emit('close'))\n    }\n\n    if (socket) {\n      this.socket = socket\n    }\n  }\n\n  public get headersDistinct(): NodeJS.Dict<string[]> {\n    const headers: NodeJS.Dict<string[]> = {}\n    for (const [key, value] of Object.entries(this.headers)) {\n      if (!value) continue\n\n      headers[key] = Array.isArray(value) ? value : [value]\n    }\n\n    return headers\n  }\n\n  public _read(size: number): void {\n    if (this.bodyReadable) {\n      return this.bodyReadable._read(size)\n    } else {\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket {\n    return this.socket\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get aborted(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get complete(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailers(): NodeJS.Dict<string> {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailersDistinct(): NodeJS.Dict<string[]> {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawTrailers(): string[] {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawHeaders(): string[] {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\nexport interface MockedResponseOptions {\n  statusCode?: number\n  socket?: Socket | null\n  headers?: OutgoingHttpHeaders\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n}\n\nexport class MockedResponse extends Stream.Writable implements ServerResponse {\n  public statusCode: number\n  public statusMessage: string = ''\n  public finished = false\n  public headersSent = false\n  public readonly socket: Socket | null\n\n  /**\n   * A promise that resolves to `true` when the response has been streamed.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly hasStreamed: Promise<boolean>\n\n  /**\n   * A list of buffers that have been written to the response.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly buffers: Buffer[] = []\n\n  /**\n   * The headers object that contains the headers that were initialized on the\n   * response and any that were added subsequently.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly headers: Headers\n\n  private resWriter: MockedResponseOptions['resWriter']\n\n  public readonly headPromise: Promise<void>\n  private headPromiseResolve?: () => void\n\n  constructor(res: MockedResponseOptions = {}) {\n    super()\n\n    this.statusCode = res.statusCode ?? 200\n    this.socket = res.socket ?? null\n    this.headers = res.headers\n      ? fromNodeOutgoingHttpHeaders(res.headers)\n      : new Headers()\n\n    this.headPromise = new Promise<void>((resolve) => {\n      this.headPromiseResolve = resolve\n    })\n\n    // Attach listeners for the `finish`, `end`, and `error` events to the\n    // `MockedResponse` instance.\n    this.hasStreamed = new Promise<boolean>((resolve, reject) => {\n      this.on('finish', () => resolve(true))\n      this.on('end', () => resolve(true))\n      this.on('error', (err) => reject(err))\n    }).then((val) => {\n      this.headPromiseResolve?.()\n      return val\n    })\n\n    if (res.resWriter) {\n      this.resWriter = res.resWriter\n    }\n  }\n\n  public appendHeader(name: string, value: string | string[]): this {\n    const values = Array.isArray(value) ? value : [value]\n    for (const v of values) {\n      this.headers.append(name, v)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns true if the response has been sent, false otherwise.\n   *\n   * @internal - used internally by Next.js\n   */\n  public get isSent() {\n    return this.finished || this.headersSent\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket | null {\n    return this.socket\n  }\n\n  public write(chunk: Uint8Array | Buffer | string) {\n    if (this.resWriter) {\n      return this.resWriter(chunk)\n    }\n    this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n\n    return true\n  }\n\n  public end() {\n    this.finished = true\n    return super.end(...arguments)\n  }\n\n  /**\n   * This method is a no-op because the `MockedResponse` instance is not\n   * actually connected to a socket. This method is not specified on the\n   * interface type for `ServerResponse` but is called by Node.js.\n   *\n   * @see https://github.com/nodejs/node/pull/7949\n   */\n  public _implicitHeader() {}\n\n  public _write(\n    chunk: Buffer | string,\n    _encoding: string,\n    callback: () => void\n  ) {\n    this.write(chunk)\n\n    // According to Node.js documentation, the callback MUST be invoked to\n    // signal that the write completed successfully. If this callback is not\n    // invoked, the 'finish' event will not be emitted.\n    //\n    // https://nodejs.org/docs/latest-v16.x/api/stream.html#writable_writechunk-encoding-callback\n    callback()\n  }\n\n  public writeHead(\n    statusCode: number,\n    statusMessage?: string | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    statusMessage?:\n      | string\n      | OutgoingHttpHeaders\n      | OutgoingHttpHeader[]\n      | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this {\n    if (!headers && typeof statusMessage !== 'string') {\n      headers = statusMessage\n    } else if (typeof statusMessage === 'string' && statusMessage.length > 0) {\n      this.statusMessage = statusMessage\n    }\n\n    if (headers) {\n      // When headers have been set with response.setHeader(), they will be\n      // merged with any headers passed to response.writeHead(), with the\n      // headers passed to response.writeHead() given precedence.\n      //\n      // https://nodejs.org/api/http.html#responsewriteheadstatuscode-statusmessage-headers\n      //\n      // For this reason, we need to only call `set` to ensure that this will\n      // overwrite any existing headers.\n      if (Array.isArray(headers)) {\n        // headers may be an Array where the keys and values are in the same list.\n        // It is not a list of tuples. So, the even-numbered offsets are key\n        // values, and the odd-numbered offsets are the associated values. The\n        // array is in the same format as request.rawHeaders.\n        for (let i = 0; i < headers.length; i += 2) {\n          // The header key is always a string according to the spec.\n          this.setHeader(headers[i] as string, headers[i + 1])\n        }\n      } else {\n        for (const [key, value] of Object.entries(headers)) {\n          // Skip undefined values\n          if (typeof value === 'undefined') continue\n\n          this.setHeader(key, value)\n        }\n      }\n    }\n\n    this.statusCode = statusCode\n    this.headersSent = true\n    this.headPromiseResolve?.()\n\n    return this\n  }\n\n  public hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  public getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  public getHeaderNames(): string[] {\n    return Array.from(this.headers.keys())\n  }\n\n  public setHeader(name: string, value: OutgoingHttpHeader) {\n    if (Array.isArray(value)) {\n      // Because `set` here should override any existing values, we need to\n      // delete the existing values before setting the new ones via `append`.\n      this.headers.delete(name)\n\n      for (const v of value) {\n        this.headers.append(name, v)\n      }\n    } else if (typeof value === 'number') {\n      this.headers.set(name, value.toString())\n    } else {\n      this.headers.set(name, value)\n    }\n\n    return this\n  }\n\n  public removeHeader(name: string): void {\n    this.headers.delete(name)\n  }\n\n  public flushHeaders(): void {\n    // This is a no-op because we don't actually have a socket to flush the\n    // headers to.\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get strictContentLength(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeEarlyHints() {\n    throw new Error('Method not implemented.')\n  }\n\n  public get req(): IncomingMessage {\n    throw new Error('Method not implemented.')\n  }\n\n  public assignSocket() {\n    throw new Error('Method not implemented.')\n  }\n\n  public detachSocket(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeContinue(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeProcessing(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public get upgrading(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get chunkedEncoding(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get shouldKeepAlive(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get useChunkedEncodingByDefault(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get sendDate(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n\n  public addTrailers(): void {\n    throw new Error('Method not implemented.')\n  }\n}\n\ninterface RequestResponseMockerOptions {\n  url: string\n  headers?: IncomingHttpHeaders\n  method?: string\n  bodyReadable?: Stream.Readable\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n  socket?: Socket | null\n}\n\nexport function createRequestResponseMocks({\n  url,\n  headers = {},\n  method = 'GET',\n  bodyReadable,\n  resWriter,\n  socket = null,\n}: RequestResponseMockerOptions) {\n  return {\n    req: new MockedRequest({\n      url,\n      headers,\n      method,\n      socket,\n      readable: bodyReadable,\n    }),\n    res: new MockedResponse({ socket, resWriter }),\n  }\n}\n","import type { ModuleLoader } from './module-loader'\n\n/**\n * Loads a module using `await require(id)`.\n */\nexport class NodeModuleLoader implements ModuleLoader {\n  public async load<M>(id: string): Promise<M> {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      // Need to `await` to cover the case that route is marked ESM modules by ESM escalation.\n      return await (process.env.NEXT_MINIMAL\n        ? // @ts-ignore\n          __non_webpack_require__(id)\n        : require(id))\n    }\n\n    throw new Error('NodeModuleLoader is not supported in edge runtime.')\n  }\n}\n","import type { RouteModule } from '../../route-modules/route-module'\nimport type { ModuleLoader } from './module-loader'\n\nimport { NodeModuleLoader } from './node-module-loader'\n\nexport interface AppLoaderModule<M extends RouteModule = RouteModule> {\n  routeModule: M\n}\n\nexport class RouteModuleLoader {\n  static async load<M extends RouteModule>(\n    id: string,\n    loader: ModuleLoader = new NodeModuleLoader()\n  ): Promise<M> {\n    const module: AppLoaderModule<M> = await loader.load(id)\n    if ('routeModule' in module) {\n      return module.routeModule\n    }\n\n    throw new Error(`Module \"${id}\" does not export a routeModule.`)\n  }\n}\n","import path from 'path'\nimport { pathToFileURL } from 'url'\n\n/**\n * The path for a dynamic route must be URLs with a valid scheme.\n *\n * When an absolute Windows path is passed to it, it interprets the beginning of the path as a protocol (`C:`).\n * Therefore, it is important to always construct a complete path.\n * @param dir File directory\n * @param filePath Absolute or relative path\n */\nexport const formatDynamicImportPath = (dir: string, filePath: string) => {\n  const absoluteFilePath = path.isAbsolute(filePath)\n    ? filePath\n    : path.join(dir, filePath)\n  const formattedFilePath = pathToFileURL(absoluteFilePath).toString()\n\n  return formattedFilePath\n}\n","import { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { NEXT_URL } from '../client/components/app-router-headers'\nimport {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../server/lib/interception-routes'\nimport type { Rewrite } from './load-custom-routes'\n\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path: string): string {\n  return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture) => {\n    // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n    const paramName = capture.replace(/\\W+/g, '_')\n\n    // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n    if (paramName.startsWith('...')) {\n      return `:${paramName.slice(3)}*`\n    }\n    return ':' + paramName\n  })\n}\n\nexport function generateInterceptionRoutesRewrites(\n  appPaths: string[],\n  basePath = ''\n): Rewrite[] {\n  const rewrites: Rewrite[] = []\n\n  for (const appPath of appPaths) {\n    if (isInterceptionRouteAppPath(appPath)) {\n      const { interceptingRoute, interceptedRoute } =\n        extractInterceptionRouteInformation(appPath)\n\n      const normalizedInterceptingRoute = `${\n        interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''\n      }/(.*)?`\n\n      const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute)\n      const normalizedAppPath = toPathToRegexpPath(appPath)\n\n      // pathToRegexp returns a regex that matches the path, but we need to\n      // convert it to a string that can be used in a header value\n      // to the format that Next/the proxy expects\n      let interceptingRouteRegex = pathToRegexp(normalizedInterceptingRoute)\n        .toString()\n        .slice(2, -3)\n\n      rewrites.push({\n        source: `${basePath}${normalizedInterceptedRoute}`,\n        destination: `${basePath}${normalizedAppPath}`,\n        has: [\n          {\n            type: 'header',\n            key: NEXT_URL,\n            value: interceptingRouteRegex,\n          },\n        ],\n      })\n    }\n  }\n\n  return rewrites\n}\n\nexport function isInterceptionRouteRewrite(route: Rewrite) {\n  // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n  return route.has?.[0]?.key === NEXT_URL\n}\n","import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { FetchMetric } from './base-http'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from '../shared/lib/router/utils/route-matcher'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath, requireFontManifest } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport type { FontManifest } from './font-utils'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport {\n  INSTRUMENTATION_HOOK_FILENAME,\n  RSC_PREFETCH_SUFFIX,\n} from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport { stripNextRscUnionQuery } from '../lib/url'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nfunction writeStdoutLine(text: string) {\n  process.stdout.write(' ' + text + '\\n')\n}\n\nfunction formatRequestUrl(url: string, maxLength: number | undefined) {\n  return maxLength !== undefined && url.length > maxLength\n    ? url.substring(0, maxLength) + '..'\n    : url\n}\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(\n        this.renderOpts.optimizeFonts\n      )\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({ distDir: this.distDir, page, isAppPath: true })\n        .then(async ({ ComponentMod }) => {\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    if (\n      !this.serverOptions.dev &&\n      this.nextConfig.experimental.instrumentationHook\n    ) {\n      try {\n        const instrumentationHook = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n\n        await instrumentationHook.register?.()\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          err.message = `An error occurred while loading instrumentation hook: ${err.message}`\n          throw err\n        }\n      }\n    }\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      pagesDir: this.enabledDirectories.pages,\n      appDir: this.enabledDirectories.app,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      swrDelta: SwrDelta | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate,\n      swrDelta: options.swrDelta,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n    delete query.__nextInferredLocaleFromDefault\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(req, res, pathname, query, renderOpts)\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult\n  ): Promise<{ buffer: Buffer; contentType: string; maxAge: number }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(\n        imageUpstream,\n        paramsResult,\n        this.nextConfig,\n        this.renderOpts.dev\n      )\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (query.__nextLocale) {\n      pagePaths.unshift(\n        ...pagePaths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        )\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n        })\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                  __nextDataReq: query.__nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getFontManifest(): FontManifest {\n    return requireFontManifest(this.distDir)\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected getFallback(page: string): Promise<string> {\n    page = normalizePagePath(page)\n    const cacheFs = this.getCacheFilesystem()\n    return cacheFs.readFile(\n      join(this.serverDistDir, 'pages', `${page}.html`),\n      'utf8'\n    )\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { getHash, sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async () => {\n            const { buffer, contentType, maxAge } = await this.imageOptimizer(\n              req,\n              res,\n              paramsResult\n            )\n            const etag = getHash([buffer])\n\n            return {\n              value: {\n                kind: 'IMAGE',\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n              },\n              revalidate: maxAge,\n            }\n          },\n          {\n            incrementalCache: imageOptimizerCache,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== 'IMAGE') {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    query._nextBubbleNoFallback = '1'\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromQuery(pathname, query),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query._nextBubbleNoFallback\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        const handled = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.page,\n          match,\n          appPaths: null,\n        })\n\n        // If we handled the request, we can return early.\n        if (handled) return true\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        delete query._nextBubbleNoFallback\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          await this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): Promise<void> {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getPrefetchRsc(pathname: string): Promise<string> {\n    return this.getCacheFilesystem().readFile(\n      join(this.serverDistDir, 'app', `${pathname}${RSC_PREFETCH_SUFFIX}`),\n      'utf8'\n    )\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  private normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  private normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection wil be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      const normalizedReq = this.normalizeReq(req)\n      const normalizedRes = this.normalizeRes(res)\n\n      const loggingFetchesConfig = this.nextConfig.logging?.fetches\n      const enabledVerboseLogging = !!loggingFetchesConfig\n      const shouldTruncateUrl = !loggingFetchesConfig?.fullUrl\n\n      if (this.renderOpts.dev) {\n        const { blue, green, yellow, red, gray, white } =\n          require('../lib/picocolors') as typeof import('../lib/picocolors')\n\n        const { originalResponse } = normalizedRes\n\n        const reqStart = Date.now()\n        const isMiddlewareRequest = getRequestMeta(req, 'middlewareInvoke')\n\n        const reqCallback = () => {\n          // we don't log for non-route requests\n          const routeMatch = getRequestMeta(req).match\n\n          if (!routeMatch || isMiddlewareRequest) return\n\n          // NOTE: this is only attached after handle has started, this runs\n          // after the response has been sent, so it should have it set.\n          const isRSC = getRequestMeta(normalizedReq, 'isRSCRequest')\n\n          const reqEnd = Date.now()\n          const fetchMetrics = normalizedReq.fetchMetrics || []\n          const reqDuration = reqEnd - reqStart\n\n          const statusColor = (status?: number) => {\n            if (!status || status < 200) return white\n            else if (status < 300) return green\n            else if (status < 400) return blue\n            else if (status < 500) return yellow\n            return red\n          }\n\n          const color = statusColor(res.statusCode)\n          const method = req.method || 'GET'\n          const requestUrl = req.url || ''\n          const loggingUrl = isRSC\n            ? stripNextRscUnionQuery(requestUrl)\n            : requestUrl\n\n          writeStdoutLine(\n            `${method} ${loggingUrl} ${color(\n              res.statusCode.toString()\n            )} in ${reqDuration}ms`\n          )\n\n          if (fetchMetrics.length && enabledVerboseLogging) {\n            const calcNestedLevel = (\n              prevMetrics: FetchMetric[],\n              start: number\n            ): string => {\n              let nestedLevel = 0\n\n              for (let i = 0; i < prevMetrics.length; i++) {\n                const metric = prevMetrics[i]\n                const prevMetric = prevMetrics[i - 1]\n\n                if (\n                  metric.end <= start &&\n                  !(prevMetric && prevMetric.start < metric.end)\n                ) {\n                  nestedLevel += 1\n                }\n              }\n              return nestedLevel === 0 ? ' ' : ' │ '.repeat(nestedLevel)\n            }\n\n            for (let i = 0; i < fetchMetrics.length; i++) {\n              const metric = fetchMetrics[i]\n              let { cacheStatus, cacheReason } = metric\n              let cacheReasonStr = ''\n\n              let cacheColor\n              const duration = metric.end - metric.start\n              if (cacheStatus === 'hit') {\n                cacheColor = green\n              } else {\n                cacheColor = yellow\n                const status = cacheStatus === 'skip' ? 'skipped' : 'missed'\n                cacheReasonStr = gray(\n                  `Cache ${status} reason: (${white(cacheReason)})`\n                )\n              }\n              let url = metric.url\n\n              if (url.length > 48) {\n                const parsed = new URL(url)\n                const truncatedHost = formatRequestUrl(\n                  parsed.host,\n                  shouldTruncateUrl ? 16 : undefined\n                )\n                const truncatedPath = formatRequestUrl(\n                  parsed.pathname,\n                  shouldTruncateUrl ? 24 : undefined\n                )\n                const truncatedSearch = formatRequestUrl(\n                  parsed.search,\n                  shouldTruncateUrl ? 16 : undefined\n                )\n\n                url =\n                  parsed.protocol +\n                  '//' +\n                  truncatedHost +\n                  truncatedPath +\n                  truncatedSearch\n              }\n\n              const status = cacheColor(`(cache ${cacheStatus})`)\n              const newLineLeadingChar = '│'\n              const nestedIndent = calcNestedLevel(\n                fetchMetrics.slice(0, i + 1),\n                metric.start\n              )\n\n              writeStdoutLine(\n                `${newLineLeadingChar}${nestedIndent}${white(\n                  metric.method\n                )} ${white(url)} ${metric.status} in ${duration}ms ${status}`\n              )\n              if (cacheReasonStr) {\n                const nextNestedIndent = calcNestedLevel(\n                  fetchMetrics.slice(0, i + 1),\n                  metric.start\n                )\n\n                writeStdoutLine(\n                  `${newLineLeadingChar}${nextNestedIndent}${newLineLeadingChar} ${cacheReasonStr}`\n                )\n              }\n            }\n          }\n          delete normalizedReq.fetchMetrics\n          originalResponse.off('close', reqCallback)\n        }\n        originalResponse.on('close', reqCallback)\n      }\n      return handler(normalizedReq, normalizedRes, parsedUrl)\n    }\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) return null\n    const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n    return manifest\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected getMiddleware(): MiddlewareRoutingItem | undefined {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = params.parsed.query.__nextLocale\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    if (!middlewareInfo) {\n      throw new MiddlewareNotFoundError()\n    }\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n          experimental: this.nextConfig.experimental,\n        },\n        url: url,\n        page,\n        body: getRequestMeta(params.request, 'clonableBody'),\n        signal: signalFromNodeResponse(params.response.originalResponse),\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n    })\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    for (let [key, value] of result.response.headers) {\n      if (key.toLowerCase() !== 'set-cookie') continue\n\n      // Clear existing header.\n      result.response.headers.delete(key)\n\n      // Append each cookie individually.\n      const cookies = splitCookiesString(value)\n      for (const cookie of cookies) {\n        result.response.headers.append(key, cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: any) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = !!query.__nextDataReq\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n}\n","import type { RouteMatch } from './route-match'\nimport type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\n\nimport { RouteKind } from '../route-kind'\n\nexport interface PagesAPIRouteMatch\n  extends RouteMatch<PagesAPIRouteDefinition> {}\n\n/**\n * Checks if the given match is a Pages API route match.\n * @param match the match to check\n * @returns true if the match is a Pages API route match, false otherwise\n */\nexport function isPagesAPIRouteMatch(\n  match: RouteMatch\n): match is PagesAPIRouteMatch {\n  return match.definition.kind === RouteKind.PAGES_API\n}\n","import type { NextConfig } from '../types'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\n\nexport function setHttpClientAndAgentOptions(config: {\n  httpAgentOptions?: NextConfig['httpAgentOptions']\n}) {\n  if (globalThis.__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to reuse the same agent for all requests.\n    return\n  }\n\n  if (!config) {\n    throw new Error('Expected config.httpAgentOptions to be an object')\n  }\n\n  globalThis.__NEXT_HTTP_AGENT_OPTIONS = config.httpAgentOptions\n  globalThis.__NEXT_HTTP_AGENT = new HttpAgent(config.httpAgentOptions)\n  globalThis.__NEXT_HTTPS_AGENT = new HttpsAgent(config.httpAgentOptions)\n}\n","import type { BaseNextRequest } from '../../../../server/base-http'\nimport type { MiddlewareMatcher } from '../../../../build/analysis/get-page-static-info'\nimport type { Params } from './route-matcher'\nimport { matchHas } from './prepare-destination'\n\nexport interface MiddlewareRouteMatch {\n  (\n    pathname: string | null | undefined,\n    request: BaseNextRequest,\n    query: Params\n  ): boolean\n}\n\nexport function getMiddlewareRouteMatcher(\n  matchers: MiddlewareMatcher[]\n): MiddlewareRouteMatch {\n  return (\n    pathname: string | null | undefined,\n    req: BaseNextRequest,\n    query: Params\n  ) => {\n    for (const matcher of matchers) {\n      const routeMatch = new RegExp(matcher.regexp).exec(pathname!)\n      if (!routeMatch) {\n        continue\n      }\n\n      if (matcher.has || matcher.missing) {\n        const hasParams = matchHas(req, query, matcher.has, matcher.missing)\n        if (!hasParams) {\n          continue\n        }\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Readable } from 'stream'\nimport { PassThrough } from 'stream'\n\nexport function requestToBodyStream(\n  context: { ReadableStream: typeof ReadableStream },\n  KUint8Array: typeof Uint8Array,\n  stream: Readable\n) {\n  return new context.ReadableStream({\n    start: async (controller) => {\n      for await (const chunk of stream) {\n        controller.enqueue(new KUint8Array(chunk))\n      }\n      controller.close()\n    },\n  })\n}\n\nfunction replaceRequestBody<T extends IncomingMessage>(\n  base: T,\n  stream: Readable\n): T {\n  for (const key in stream) {\n    let v = stream[key as keyof Readable] as any\n    if (typeof v === 'function') {\n      v = v.bind(base)\n    }\n    base[key as keyof T] = v\n  }\n\n  return base\n}\n\nexport interface CloneableBody {\n  finalize(): Promise<void>\n  cloneBodyStream(): Readable\n}\n\nexport function getCloneableBody<T extends IncomingMessage>(\n  readable: T\n): CloneableBody {\n  let buffered: Readable | null = null\n\n  const endPromise = new Promise<void | { error?: unknown }>(\n    (resolve, reject) => {\n      readable.on('end', resolve)\n      readable.on('error', reject)\n    }\n  ).catch((error) => {\n    return { error }\n  })\n\n  return {\n    /**\n     * Replaces the original request body if necessary.\n     * This is done because once we read the body from the original request,\n     * we can't read it again.\n     */\n    async finalize(): Promise<void> {\n      if (buffered) {\n        const res = await endPromise\n\n        if (res && typeof res === 'object' && res.error) {\n          throw res.error\n        }\n        replaceRequestBody(readable, buffered)\n        buffered = readable\n      }\n    },\n    /**\n     * Clones the body stream\n     * to pass into a middleware\n     */\n    cloneBodyStream() {\n      const input = buffered ?? readable\n      const p1 = new PassThrough()\n      const p2 = new PassThrough()\n      input.on('data', (chunk) => {\n        p1.push(chunk)\n        p2.push(chunk)\n      })\n      input.on('end', () => {\n        p1.push(null)\n        p2.push(null)\n      })\n      buffered = p2\n      return p1\n    },\n  }\n}\n"],"names":["e","exports","j","t","ignoreProcessEnv","process","env","n","parsed","r","Object","prototype","hasOwnProperty","call","_interpolate","_searchLast","Array","from","matchAll","length","slice","index","i","o","match","s","replace","a","c","version","l","_debug","console","log","_dotenvKey","DOTENV_KEY","_vaultPath","resolve","cwd","path","endsWith","p","configDotenv","Boolean","debug","join","homedir","encoding","parse","readFileSync","processEnv","populate","message","error","_configVault","_parseVault","split","trim","_instructions","URL","code","password","searchParams","get","toUpperCase","ciphertext","key","decrypt","config","existsSync","Buffer","createDecipheriv","setAuthTag","update","final","RangeError","toString","exec","override","keys","JSON","__nccwpck_require__","undefined","__esModule","d","defineProperty","enumerable","Symbol","toStringTag","value","ab","__dirname","initialEnv","updateInitialEnv","resetEnv","loadEnvConfig","u","assign","replaceProcessEnv","forEach","startsWith","entries","__NEXT_PROCESSED_ENV","_","contents","some","combinedEnv","loadedEnvFiles","filter","statSync","isFile","push","module","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","src_exports","stringifyCookie","_a","attrs","expires","Date","toUTCString","maxAge","domain","secure","httpOnly","sameSite","partitioned","priority","stringified","name","encodeURIComponent","parseCookie","cookie","map","Map","pair","splitAt","indexOf","set","decodeURIComponent","parseSetCookie","setCookie","string","attributes","httponly","maxage","samesite","fromEntries","value2","toLowerCase","compact","newT","Number","SAME_SITE","includes","PRIORITY","__export","target","all","RequestCookies","ResponseCookies","__copyProps","to","except","desc","constructor","requestHeaders","_parsed","_headers","header","iterator","size","args","getAll","has","delete","names","result","isArray","clear","for","stringify","values","v","responseHeaders","_b","_c","getSetCookie","cookieString","splitCookiesString","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","substring","normalizeCookie","now","bag","headers","serialized","append","decode","f","substr","tryDecode","serialize","encode","isNaN","isFinite","Math","floor","parseHttpDate","NaN","parseTokenList","charCodeAt","h","naiveLength","isStale","del","unshiftNode","tail","prev","removeNode","Entry","forEachStep","max","Infinity","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","allowStale","lengthCalculator","itemCount","rforEach","head","next","toArray","dump","k","dumpLru","unshift","peek","pop","load","prune","Yallist","arguments","Node","list","create","pushNode","shift","forEachReverse","getReverse","mapReverse","reduce","reduceReverse","toArrayReverse","sliceReverse","splice","insert","reverse","str","options","tokens","lexer","char","type","count","pattern","prefixes","defaultPattern","escapeString","delimiter","tryConsume","mustConsume","consumeText","prefix","suffix","modifier","flags","sensitive","reFlags","validate","matches","token","data","optional","repeat","segment","String","typeOfMessage","re","pathname","m","params","pathToRegexp","RegExp","regexpToRegexp","groups","source","parts","tokensToRegexp","strict","end","route","mod","endToken","isEndDelimited","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SUFFIX","ACTION_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_SOFT_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","CACHE_ONE_YEAR","INSTRUMENTATION_HOOK_FILENAME","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","api","middleware","instrument","edgeAsset","appPagesBrowser","appMetadataRoute","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","checkIsOnDemandRevalidate","req","previewProps","HeadersAdapter","isOnDemandRevalidate","previewModeId","revalidateOnlyGenerated","COOKIE_NAME_PRERENDER_BYPASS","COOKIE_NAME_PRERENDER_DATA","SYMBOL_PREVIEW_DATA","SYMBOL_CLEARED_COOKIES","clearPreviewData","res","require","previous","getHeader","setHeader","tryGetPreviewData","cookies","encryptedPreviewData","tokenPreviewData","jsonwebtoken","verify","previewModeSigningKey","decryptWithSecret","decryptedPreviewData","previewModeEncryptionKey","CIPHER_ALGORITHM","encryptWithSecret","secret","iv","crypto","salt","cipher","encrypted","concat","tag","getAuthTag","encryptedData","buffer","CIPHER_SALT_LENGTH","decipher","BaseServerSpan","LoadComponentsSpan","NextServerSpan","NextNodeServerSpan","StartServerSpan","RenderSpan","AppRenderSpan","RouterSpan","NodeSpan","AppRouteRouteHandlersSpan","ResolveMetadataSpan","MiddlewareSpan","AsyncLocalStorage","globalThis","WebSocket","global","webcrypto","configurable","ReflectAdapter","prop","receiver","Reflect","bind","deleteProperty","ReadonlyHeadersError","Error","callable","Headers","Proxy","lowercased","original","find","seal","existing","merge","callbackfn","thisArg","webpackEmptyContext","id","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","obj","memoryCache","tagsManifest","originalRequire","resolveFilename","_resolveFilename","__non_webpack_require__","hookPropertyMap","normalizeRepeatedSlashes","url","urlParts","urlNoQuery","addHookAliases","aliases","dirname","originalResolveFilename","requestMap","request","parent","isMain","hookResolved","basename","SP","performance","every","method","DecodeError","NormalizeError","PageNotFoundError","page","MissingStaticPage","getRouteMatcher","routeMatch","param","g","slugName","entry","NEXT_REQUEST_META","getRequestMeta","meta","addRequestMeta","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","PAGES_MANIFEST","APP_PATHS_MANIFEST","SERVER_DIRECTORY","BLOCKED_PAGES","STATIC_STATUS_PAGES","findDir","dir","curDir","fs","getCookieParser","parseCookieFn","RedirectStatusCode","BaseNextRequest","body","_cookies","BaseNextResponse","destination","redirect","statusCode","PermanentRedirect","NodeNextRequest","_req","fetchMetrics","streaming","originalRequest","ReadableStream","on","controller","enqueue","Uint8Array","chunk","close","err","NodeNextResponse","originalResponse","_res","textBody","sent","finished","headersSent","statusMessage","removeHeader","getHeaderValues","hasHeader","getHeaders","appendHeader","currentValues","send","onClose","callback","fnv1a52","len","t0","v0","t1","v1","t2","v2","t3","v3","generateETag","payload","weak","formatRevalidate","revalidate","swrDelta","swrHeader","ACTION","NEXT_ROUTER_STATE_TREE","NEXT_ROUTER_PREFETCH_HEADER","NEXT_URL","FLIGHT_PARAMETERS","NEXT_RSC_UNION_QUERY","sendRenderResult","generateEtags","poweredByHeader","root","isDynamic","toUnchunkedString","etagPayload","sort","scriptTags","querySelector","querySelectorAll","node","hasAttribute","innerHTML","b","localeCompare","script","remove","appendChild","etag","fresh","contentType","byteLength","pipeToNodeResponse","searchParamsToUrlQuery","query","parseUrl","parseRelativeUrl","base","parseQuery","globalBase","resolvedBase","search","hash","href","origin","parsedURL","hostname","port","protocol","stdout","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","nextIndex","formatter","open","input","bold","red","green","yellow","magenta","white","wait","warn","ready","info","event","trace","LOGGING_METHOD","prefixedLog","prefixType","consoleMethod","bootstrap","warnOnceMessages","Set","warnOnce","add","v4Seg","v4Str","v6Seg","IPv6Reg","ensureLeadingSlash","normalizeAppPath","segments","normalizeRscURL","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","TEST_ROUTE","isDynamicRoute","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","BOT_UA_RE","isBot","userAgent","voidCatch","encoder","TextEncoder","streamFromBuffer","streamToBuffer","stream","buffers","streamToString","decoder","TextDecoder","fatal","fromNodeOutgoingHttpHeaders","nodeHeaders","toNodeOutgoingHttpHeaders","removeTrailingSlash","parsePath","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","pathHasPrefix","getHostname","host","normalizeLocalePath","locales","detectedLocale","pathnameParts","locale","removePathPrefix","withoutPrefix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","REGEX_LOCALHOST_HOSTNAME","parseURL","Internal","NextURL","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","detectDomainLocale","domainItems","item","defaultLocale","domains","formatPathname","addLocale","ignorePrefix","lower","forceLocale","formatSearch","username","toJSON","clone","RemovedPageError","RemovedUAError","INTERNALS","NextRequest","Request","init","validateURL","cause","nextUrl","geo","ip","bodyUsed","cache","credentials","integrity","keepalive","mode","referrer","referrerPolicy","signal","ua","isNodeNextRequest","isNodeNextResponse","ResponseAbortedName","ResponseAborted","createAbortController","response","AbortController","once","writableFinished","abort","NextRequestAdapter","fromBaseNextRequest","fromNodeNextRequest","duplex","aborted","fromWebNextRequest","DetachedPromise","reject","promise","Promise","rej","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","isAbortError","readable","waitUntilForEnd","errored","destroyed","writer","createWriterFromResponse","started","drained","onDrain","off","WritableStream","write","NEXT_OTEL_PERFORMANCE_PREFIX","metrics","getClientComponentLoaderMetrics","measure","flushHeaders","getTracer","startResponse","spanName","ok","flush","destroy","pipeTo","RenderResult","fromStatic","metadata","waitUntil","assignMetadata","isNull","toUnchunkedBuffer","isBuffer","chainStreams","streams","writable","TransformStream","preventClose","nextStream","then","lastStream","catch","responses","denormalizePagePath","_page","getPathMatch","regexp","matcher","regexpToFunction","regexModifier","removeUnnamedParams","reHasRegExp","reReplaceRegExp","escapeStringRegexp","PARAMETER_PATTERN","parseMatchedParameter","getRouteRegex","normalizedRoute","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","paramMatches","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","cleanedKey","invalidKey","parseInt","interceptionPrefix","unescapeSegments","matchHas","missing","hasMatch","hasItem","getSafeParamName","paramName","newParamName","charCode","groupKey","compileNonPath","compile","isError","getProperError","isPlainObject","getObjectClassLabel","getPrototypeOf","LocaleRouteNormalizer","provider","UrlNode","urlPath","_insert","smoosh","_smoosh","childrenPaths","children","restSlugName","optionalRestSlugName","routes","curr","placeholder","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","slug","RouteMatcher","dynamic","identity","LocaleRouteMatcher","DefaultRouteMatcherManager","compilationID","providers","waitTillReady","waitTillReadyPromise","reload","matchers","providersMatchers","duplicates","providerMatchers","duplicated","duplicate","others","previousMatchers","cachedMatcher","static","reference","pathnames","indexes","sorted","getSortedRoutes","normalizedPages","pagePath","sortedDynamicMatchers","dynamicMatches","lastCompilationID","inferredFromDefault","skipDynamic","Normalizers","normalizers","normalizer","normalize","normalized","PrefixingNormalizer","normalizePagePath","posix","resolvedPage","AppBundlePathNormalizer","AppFilenameNormalizer","distDir","manifestFilename","wrapNormalizerFn","fn","PAGE_TYPES","UnderscoreNormalizer","AppPathnameNormalizer","AppNormalizers","filename","bundlePath","RouteKind","AppPageRouteMatcher","CachedRouteMatcherProvider","loader","cached","compare","transform","ManifestRouteMatcherProvider","manifestName","manifestLoader","left","right","AppPageRouteMatcherProvider","manifest","pages","allAppPaths","appPaths","kind","APP_PAGE","AppRouteRouteMatcher","AppRouteRouteMatcherProvider","APP_ROUTE","isAPIRoute","PagesAPIRouteMatcher","PagesAPILocaleRouteMatcher","PagesBundlePathNormalizer","PagesFilenameNormalizer","PagesNormalizers","PagesAPIRouteMatcherProvider","PAGES_API","PagesRouteMatcher","PagesLocaleRouteMatcher","PagesRouteMatcherProvider","PAGES","ServerManifestLoader","I18NProvider","lowerCaseLocales","lowerCaseDomains","http","__nextLocale","analysis","__nextInferredLocaleFromDefault","sendResponse","status","statusText","SuffixPathnameNormalizer","matched","RSCPathnameNormalizer","PrefixPathnameNormalizer","PostponedPathnameNormalizer","ActionPathnameNormalizer","stripFlightHeaders","isAppPageRouteModule","routeModule","isPagesRouteModule","PrefetchRSCPathnameNormalizer","NextDataPathnameNormalizer","buildID","toRoute","NEXT_REQUEST_CONTEXT_SYMBOL","VERCEL_REQUEST_CONTEXT_SYMBOL","NoFallbackError","WrappedBuildError","innerError","Server","handleRSCRequest","parsedUrl","prefetchRSC","RSC_HEADER","rsc","formatUrl","handleNextDataRequest","getMiddleware","matchNextDataPathname","render404","lastParam","getRouteFromAssetPath","assetPath","ext","localePathResult","__nextDefaultLocale","__nextDataReq","handleNextImageRequest","handleCatchallRenderRequest","handleCatchallMiddlewareRequest","postponed","action","normalizeAndAttachMetadata","enabledDirectories","prepared","preparedPromise","customErrorNo404Warn","execOnce","used","Log","quiet","conf","dev","minimalMode","customServer","experimentalTestProxy","serverOptions","fetchHostname","formatHostname","isIPv6","publicDir","getPublicDir","hasStaticDir","getHasStaticDir","localeNormalizer","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","getBuildId","NEXT_PRIVATE_MINIMAL_MODE","getEnabledDirectories","isAppPPREnabled","app","checkIsAppPPREnabled","experimental","ppr","nextFontManifest","getNextFontManifest","NEXT_DEPLOYMENT_ID","deploymentId","renderOpts","supportsDynamicResponse","strictNextHead","canonicalBase","amp","getPrerenderManifest","preview","ampOptimizerConfig","optimizer","images","optimizeFonts","fontManifest","getFontManifest","optimizeCss","nextConfigOutput","output","nextScriptWorkers","disableOptimizedLoading","domainLocales","serverComponents","enableTainting","taint","crossOrigin","largePageDataBytes","runtimeConfig","isExperimentalCompile","clientTraceMetadata","after","setConfig","pagesManifest","getPagesManifest","appPathsManifest","getAppPathsManifest","appPathRoutes","getAppPathRoutes","interceptionRoutePatterns","getinterceptionRoutePatterns","getRouteMatchers","setAssetPrefix","responseCache","getResponseCache","reloadMatchers","logError","handleRequest","prepare","tracer","withPropagatedContext","SpanKind","SERVER","span","handleRequestImpl","finally","isRSCRequest","setAttributes","rootSpanAttributes","getRootSpanAttributes","updateName","utils","patchSetHeaderWithCookieSupport","middlewareValue","idx","cleanUrl","URLSearchParams","xForwardedProto","isHttps","socket","remoteAddress","attachRequestMeta","parseUrlUtil","pathnameInfo","useMatchedPathHeader","matchedPath","urlPathname","normalizedUrlPath","stripNextDataPath","localeAnalysisResult","srcPathname","pageIsDynamic","getUtils","rewrites","caseSensitive","defaultRouteRegex","dynamicRouteMatcher","defaultRouteMatches","getNamedRouteRegex","prefixRouteKey","getNamedParametrizedRoute","prefixRouteKeys","routeKey","fromCharCode","namedParameterizedRoute","hasInterceptionMarker","usedMarker","namedRegex","handleRewrites","rewriteParams","fsPathname","checkRewrite","rewrite","hasParams","parsedDestination","destQuery","prepareDestination","newUrl","escapedDestination","destPath","destHostname","destPathParamKeys","destHostnameParamKeys","destParams","destPathCompiler","destHostnameCompiler","strOrArray","paramKeys","appendParamsToQuery","destLocalePathResult","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","matchesPage","fsPathnameNoSlash","fallback","getParamsFromRouteMatches","matchesHasLocale","routeKeyNames","filterLocaleItem","val","_val","keyName","normalizedKey","normalizeDynamicRouteParams","ignoreOptional","hasValidParams","defaultValue","isDefaultValue","defaultVal","normalizeVercelUrl","trustQuery","_parsedUrl","isNextQueryPrefix","isNextInterceptionMarkerPrefix","interpolateDynamicPath","builtParam","paramIdx","paramValue","getRoutesManifest","caseSensitiveRoutes","pathnameBeforeRewrite","rewriteParamKeys","didRewrite","routeParamKeys","normalizeNextQueryParam","onKeyNormalized","paramsResult","matcherParams","curParamsResult","routeParams","renderError","webServerConfig","parsedFullUrl","incrementalCache","getIncrementalCache","requestProtocol","resetRequestCache","__incrementalCache","invokePath","invokeStatus","invokeQuery","parsedMatchedPath","invokePathnameInfo","normalizeResult","Response","bubble","run","handler","getRequestHandler","prepareImpl","normalizedPath","runImpl","pipe","partialContext","pipeImpl","isBotRequest","ctx","originalStatus","getStaticHTML","render","internalRender","renderImpl","getWaitUntil","builtinRequestContext","getBuiltinRequestContext","_globalThis","__NEXT_TEST_MODE","noopWaitUntil","hasPage","renderToResponse","getStaticPaths","fallbackField","dynamicRoutes","staticPaths","fallbackMode","renderToResponseWithComponents","requestContext","findComponentsResult","renderToResponseWithComponentsImpl","pathCouldBeIntercepted","resolvedPathname","setVaryHeader","isAppPath","baseVaryHeader","addedNextUrlToVary","components","prerenderManifest","cacheEntry","cachedData","is404Page","is500Page","hasServerProps","getServerSideProps","hasStaticPaths","isServerAction","getServerActionRequestMetadata","actionId","isURLEncodedAction","isMultipartAction","isFetchAction","hasGetInitialProps","Component","getInitialProps","isSSG","getStaticProps","resolvedUrlPathname","hasFallback","pathsResult","resolvedWithoutSlash","isNextDataRequest","isPrefetchRSCRequest","couldSupportPPR","hasDebugStaticShellQuery","__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING","__nextppronly","isRoutePPREnabled","experimentalPPR","isDebugStaticShell","isDebugDynamicAccesses","minimalPostponed","isDynamicRSCRequest","isSupportedDocument","Document","NEXT_BUILTIN_DOCUMENT","isPreviewMode","previewData","runtime","ssgCacheKey","seg","doRender","origQuery","hadTrailingSlash","resolvedUrl","isRevalidate","serverActions","resolvedAsPath","isDraftMode","nextExport","isStaticGeneration","context","signalFromNodeResponse","AbortSignal","handle","cacheTags","fetchTags","blob","store","arrayBuffer","pendingWaitUntil","clientReferenceManifest","renderHTML","staticBailoutInfo","description","stack","isNotFound","isRedirect","props","pageData","flightData","html","rscData","responseGenerator","hasResolved","previousCacheEntry","isRevalidating","staticPathKey","routeKind","isPrefetch","purpose","notFoundRevalidate","onCacheEntry","handleRedirect","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","permanent","TemporaryRedirect","stripLocale","splitPath","getOriginalAppPaths","renderPageComponent","bubbleNoFallback","findPageComponents","sriEnabled","sri","algorithm","shouldEnsure","isNoFallbackError","renderToResponseImpl","_nextBubbleNoFallback","fromQuery","initUrl","rewroteUrl","renderErrorToResponse","__nextCustomErrorRender","isWrappedError","renderToHTML","renderToHTMLImpl","setHeaders","renderErrorImpl","renderErrorToResponseImpl","statusPage","removeRequestMeta","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","deepFreeze","isFrozen","freeze","sharedCache","loadManifest","shouldCache","pagePathCache","LRUCache","getMaybePagePath","cacheKey","serverBuildPath","checkManifest","curPath","manifestNoLocales","getPagePath","requirePage","promises","readFile","__NEXT_PRIVATE_RUNTIME_TYPE","interopDefault","default","ms","setTimeout","SERVER_ACTION_MANIFESTS_SINGLETON","loadManifestWithRetries","manifestPath","attempts","evalManifestWithRetries","evalManifest","content","contextObject","runInNewContext","loadClientReferenceManifest","entryName","__RSC_MANIFEST","loadComponentsImpl","DocumentMod","AppMod","hasClientManifest","buildManifest","reactLoadableManifest","serverActionsManifest","SERVER_REFERENCE_MANIFEST","setReferenceManifestsSingleton","serverModuleMap","createServerModuleMap","pageName","workers","chunks","ComponentMod","App","pageConfig","loadComponents","wrap","Batcher","cacheKeyFn","schedulerFn","pending","batch","scheduleOnNextTick","nextTick","cb","fromResponseCacheEntry","toResponseCacheEntry","isMiss","ResponseCache","batcher","previousCacheItem","expiresAt","resolved","cachedResponse","resolveValue","min","rateLimitedUntil","CACHE_TAGS_HEADER","CACHE_HEADERS_HEADER","CACHE_REVALIDATE_HEADER","CACHE_FETCH_URL_HEADER","DEBUG","NEXT_PRIVATE_DEBUG_CACHE","fetchRetryWithTimeout","retryIndex","timeout","fetch","clearTimeout","FetchCache","hasMatchingTags","arr1","arr2","set1","set2","isAvailable","_requestHeaders","SUSPENSE_CACHE_URL","newHeaders","scHost","scBasePath","SUSPENSE_CACHE_BASEPATH","SUSPENSE_CACHE_AUTH_TOKEN","scProto","SUSPENSE_CACHE_PROTO","cacheEndpoint","maxMemoryCacheSize","revalidateTag","tags","internal","retryAfter","softTags","kindHint","fetchIdx","fetchUrl","hasFetchKindAndMatchingTags","fetchType","text","json","cacheState","age","lastModified","newValue","existingCache","existingValue","field","fetchCache","FileSystemCache","flushToDisk","serverDistDir","appDir","_appDir","pagesDir","_pagesDir","revalidatedTags","tagsManifestPath","loadTagsManifestSync","loadTagsManifest","items","revalidatedAt","mkdir","writeFile","filePath","getFilePath","fileData","mtime","stat","getTime","detectFileKind","parsedData","storedTags","tagsHeader","combinedTags","htmlPath","SharedRevalidateTimings","timings","initialRevalidateSeconds","IncrementalCache","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","unlocks","hasCustomCacheHandler","__NEXT_TEST_MAX_ISR_CACHE","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","revalidateTimings","cacheHandler","calculateRevalidate","fromTime","_getPathname","unlock","lock","unlockNext","existingLock","newLock","fetchCacheKey","bodyChunks","getReader","readableBody","total","arr","offset","_ogBody","formData","Blob","cacheString","createHash","digest","cacheData","revalidateAfter","curRevalidate","notFoundRoutes","itemSize","nodeFs","recursive","MockedRequest","Stream","httpVersion","httpVersionMajor","httpVersionMinor","_target","bodyReadable","emit","headersDistinct","_read","connection","complete","trailers","trailersDistinct","rawTrailers","rawHeaders","MockedResponse","headPromise","headPromiseResolve","hasStreamed","resWriter","isSent","_write","_encoding","writeHead","getHeaderNames","strictContentLength","writeEarlyHints","assignSocket","detachSocket","writeContinue","writeProcessing","upgrading","chunkedEncoding","shouldKeepAlive","useChunkedEncodingByDefault","sendDate","addTrailers","NodeModuleLoader","RouteModuleLoader","formatDynamicImportPath","absoluteFilePath","pathToFileURL","isInterceptionRouteRewrite","dynamicImportEsmDefault","dynamicRequire","MiddlewareMatcherCache","WeakMap","NextNodeServer","BaseServer","edgeFunctionsPage","getEdgeFunctionsPages","runEdgeFunction","handleApiRequest","isMiddlewareInvoke","handleFinished","normalizedPathname","bubblingResult","ensureMiddleware","runMiddleware","BubbledError","__NEXT_OPTIMIZE_FONTS","__NEXT_OPTIMIZE_CSS","__NEXT_SCRIPT_WORKERS","appDocumentPreloading","regex","setHttpClientAndAgentOptions","__NEXT_HTTP_AGENT","__NEXT_HTTP_AGENT_OPTIONS","httpAgentOptions","HttpAgent","__NEXT_HTTPS_AGENT","HttpsAgent","middlewareManifestPath","unstable_preloadEntries","webpackRequire","__next_app__","handleUpgrade","instrumentationHook","register","forceReload","silent","CacheHandler","getCacheFilesystem","cacheMaxMemorySize","routesManifest","buildIdFile","runApi","trustHostHeader","renderHTMLImpl","imageOptimizer","edgeFunctionsPages","findPageComponentsImpl","_url","pagePaths","requireFontManifest","NEXT_FONT_MANIFEST","getFallback","cacheFs","logErrorWithOriginalStack","_err","_type","ensurePage","_opts","getPrefetchRsc","normalizeReq","normalizeRes","makeRequestHandler","normalizedReq","normalizedRes","loggingFetchesConfig","logging","fetches","fullUrl","revalidateHeaders","mocked","createRequestResponseMocks","unstable_onlyGenerated","getMiddlewareManifest","getMiddlewareMatcher","stored","functions","foundPage","pageInfo","files","file","wasm","binding","assets","hasMiddleware","getEdgeFunctionInfo","ensureEdgeFunction","_params","_cachedPreviewManifest","NEXT_PHASE","isUpgradeReq","getCloneableBody","buffered","endPromise","finalize","replaceRequestBody","cloneBodyStream","p1","PassThrough","p2","_serverDistDir"],"sourceRoot":""}