{"version":3,"sources":["../../src/server/next-server.ts"],"sourcesContent":["import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { FetchMetric } from './base-http'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from '../shared/lib/router/utils/route-matcher'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath, requireFontManifest } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport type { FontManifest } from './font-utils'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport {\n  INSTRUMENTATION_HOOK_FILENAME,\n  RSC_PREFETCH_SUFFIX,\n} from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport { stripNextRscUnionQuery } from '../lib/url'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nfunction writeStdoutLine(text: string) {\n  process.stdout.write(' ' + text + '\\n')\n}\n\nfunction formatRequestUrl(url: string, maxLength: number | undefined) {\n  return maxLength !== undefined && url.length > maxLength\n    ? url.substring(0, maxLength) + '..'\n    : url\n}\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(\n        this.renderOpts.optimizeFonts\n      )\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({ distDir: this.distDir, page, isAppPath: true })\n        .then(async ({ ComponentMod }) => {\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    if (\n      !this.serverOptions.dev &&\n      this.nextConfig.experimental.instrumentationHook\n    ) {\n      try {\n        const instrumentationHook = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n\n        await instrumentationHook.register?.()\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          err.message = `An error occurred while loading instrumentation hook: ${err.message}`\n          throw err\n        }\n      }\n    }\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      pagesDir: this.enabledDirectories.pages,\n      appDir: this.enabledDirectories.app,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      swrDelta: SwrDelta | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate,\n      swrDelta: options.swrDelta,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n    delete query.__nextInferredLocaleFromDefault\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(req, res, pathname, query, renderOpts)\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult\n  ): Promise<{ buffer: Buffer; contentType: string; maxAge: number }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(\n        imageUpstream,\n        paramsResult,\n        this.nextConfig,\n        this.renderOpts.dev\n      )\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (query.__nextLocale) {\n      pagePaths.unshift(\n        ...pagePaths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        )\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n        })\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                  __nextDataReq: query.__nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getFontManifest(): FontManifest {\n    return requireFontManifest(this.distDir)\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected getFallback(page: string): Promise<string> {\n    page = normalizePagePath(page)\n    const cacheFs = this.getCacheFilesystem()\n    return cacheFs.readFile(\n      join(this.serverDistDir, 'pages', `${page}.html`),\n      'utf8'\n    )\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { getHash, sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async () => {\n            const { buffer, contentType, maxAge } = await this.imageOptimizer(\n              req,\n              res,\n              paramsResult\n            )\n            const etag = getHash([buffer])\n\n            return {\n              value: {\n                kind: 'IMAGE',\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n              },\n              revalidate: maxAge,\n            }\n          },\n          {\n            incrementalCache: imageOptimizerCache,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== 'IMAGE') {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    query._nextBubbleNoFallback = '1'\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromQuery(pathname, query),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query._nextBubbleNoFallback\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        const handled = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.page,\n          match,\n          appPaths: null,\n        })\n\n        // If we handled the request, we can return early.\n        if (handled) return true\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        delete query._nextBubbleNoFallback\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          await this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): Promise<void> {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getPrefetchRsc(pathname: string): Promise<string> {\n    return this.getCacheFilesystem().readFile(\n      join(this.serverDistDir, 'app', `${pathname}${RSC_PREFETCH_SUFFIX}`),\n      'utf8'\n    )\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  private normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  private normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection wil be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      const normalizedReq = this.normalizeReq(req)\n      const normalizedRes = this.normalizeRes(res)\n\n      const loggingFetchesConfig = this.nextConfig.logging?.fetches\n      const enabledVerboseLogging = !!loggingFetchesConfig\n      const shouldTruncateUrl = !loggingFetchesConfig?.fullUrl\n\n      if (this.renderOpts.dev) {\n        const { blue, green, yellow, red, gray, white } =\n          require('../lib/picocolors') as typeof import('../lib/picocolors')\n\n        const { originalResponse } = normalizedRes\n\n        const reqStart = Date.now()\n        const isMiddlewareRequest = getRequestMeta(req, 'middlewareInvoke')\n\n        const reqCallback = () => {\n          // we don't log for non-route requests\n          const routeMatch = getRequestMeta(req).match\n\n          if (!routeMatch || isMiddlewareRequest) return\n\n          // NOTE: this is only attached after handle has started, this runs\n          // after the response has been sent, so it should have it set.\n          const isRSC = getRequestMeta(normalizedReq, 'isRSCRequest')\n\n          const reqEnd = Date.now()\n          const fetchMetrics = normalizedReq.fetchMetrics || []\n          const reqDuration = reqEnd - reqStart\n\n          const statusColor = (status?: number) => {\n            if (!status || status < 200) return white\n            else if (status < 300) return green\n            else if (status < 400) return blue\n            else if (status < 500) return yellow\n            return red\n          }\n\n          const color = statusColor(res.statusCode)\n          const method = req.method || 'GET'\n          const requestUrl = req.url || ''\n          const loggingUrl = isRSC\n            ? stripNextRscUnionQuery(requestUrl)\n            : requestUrl\n\n          writeStdoutLine(\n            `${method} ${loggingUrl} ${color(\n              res.statusCode.toString()\n            )} in ${reqDuration}ms`\n          )\n\n          if (fetchMetrics.length && enabledVerboseLogging) {\n            const calcNestedLevel = (\n              prevMetrics: FetchMetric[],\n              start: number\n            ): string => {\n              let nestedLevel = 0\n\n              for (let i = 0; i < prevMetrics.length; i++) {\n                const metric = prevMetrics[i]\n                const prevMetric = prevMetrics[i - 1]\n\n                if (\n                  metric.end <= start &&\n                  !(prevMetric && prevMetric.start < metric.end)\n                ) {\n                  nestedLevel += 1\n                }\n              }\n              return nestedLevel === 0 ? ' ' : ' │ '.repeat(nestedLevel)\n            }\n\n            for (let i = 0; i < fetchMetrics.length; i++) {\n              const metric = fetchMetrics[i]\n              let { cacheStatus, cacheReason } = metric\n              let cacheReasonStr = ''\n\n              let cacheColor\n              const duration = metric.end - metric.start\n              if (cacheStatus === 'hit') {\n                cacheColor = green\n              } else {\n                cacheColor = yellow\n                const status = cacheStatus === 'skip' ? 'skipped' : 'missed'\n                cacheReasonStr = gray(\n                  `Cache ${status} reason: (${white(cacheReason)})`\n                )\n              }\n              let url = metric.url\n\n              if (url.length > 48) {\n                const parsed = new URL(url)\n                const truncatedHost = formatRequestUrl(\n                  parsed.host,\n                  shouldTruncateUrl ? 16 : undefined\n                )\n                const truncatedPath = formatRequestUrl(\n                  parsed.pathname,\n                  shouldTruncateUrl ? 24 : undefined\n                )\n                const truncatedSearch = formatRequestUrl(\n                  parsed.search,\n                  shouldTruncateUrl ? 16 : undefined\n                )\n\n                url =\n                  parsed.protocol +\n                  '//' +\n                  truncatedHost +\n                  truncatedPath +\n                  truncatedSearch\n              }\n\n              const status = cacheColor(`(cache ${cacheStatus})`)\n              const newLineLeadingChar = '│'\n              const nestedIndent = calcNestedLevel(\n                fetchMetrics.slice(0, i + 1),\n                metric.start\n              )\n\n              writeStdoutLine(\n                `${newLineLeadingChar}${nestedIndent}${white(\n                  metric.method\n                )} ${white(url)} ${metric.status} in ${duration}ms ${status}`\n              )\n              if (cacheReasonStr) {\n                const nextNestedIndent = calcNestedLevel(\n                  fetchMetrics.slice(0, i + 1),\n                  metric.start\n                )\n\n                writeStdoutLine(\n                  `${newLineLeadingChar}${nextNestedIndent}${newLineLeadingChar} ${cacheReasonStr}`\n                )\n              }\n            }\n          }\n          delete normalizedReq.fetchMetrics\n          originalResponse.off('close', reqCallback)\n        }\n        originalResponse.on('close', reqCallback)\n      }\n      return handler(normalizedReq, normalizedRes, parsedUrl)\n    }\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) return null\n    const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n    return manifest\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected getMiddleware(): MiddlewareRoutingItem | undefined {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = params.parsed.query.__nextLocale\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    if (!middlewareInfo) {\n      throw new MiddlewareNotFoundError()\n    }\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n          experimental: this.nextConfig.experimental,\n        },\n        url: url,\n        page,\n        body: getRequestMeta(params.request, 'clonableBody'),\n        signal: signalFromNodeResponse(params.response.originalResponse),\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n    })\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    for (let [key, value] of result.response.headers) {\n      if (key.toLowerCase() !== 'set-cookie') continue\n\n      // Clear existing header.\n      result.response.headers.delete(key)\n\n      // Append each cookie individually.\n      const cookies = splitCookiesString(value)\n      for (const cookie of cookies) {\n        result.response.headers.append(key, cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: any) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = !!query.__nextDataReq\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n}\n"],"names":["DecodeError","PageNotFoundError","MiddlewareNotFoundError","fs","join","resolve","getRouteMatcher","addRequestMeta","getRequestMeta","PAGES_MANIFEST","BUILD_ID_FILE","MIDDLEWARE_MANIFEST","PRERENDER_MANIFEST","ROUTES_MANIFEST","CLIENT_PUBLIC_FILES_PATH","APP_PATHS_MANIFEST","SERVER_DIRECTORY","NEXT_FONT_MANIFEST","PHASE_PRODUCTION_BUILD","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","findDir","NodeNextRequest","NodeNextResponse","sendRenderResult","parseUrl","Log","BaseServer","NoFallbackError","getMaybePagePath","getPagePath","requireFontManifest","denormalizePagePath","normalizePagePath","loadComponents","isError","getProperError","splitCookiesString","toNodeOutgoingHttpHeaders","getMiddlewareRouteMatcher","loadEnvConfig","urlQueryToSearchParams","removeTrailingSlash","getNextPathnameInfo","getCloneableBody","checkIsOnDemandRevalidate","ResponseCache","IncrementalCache","normalizeAppPath","setHttpClientAndAgentOptions","isPagesAPIRouteMatch","INSTRUMENTATION_HOOK_FILENAME","RSC_PREFETCH_SUFFIX","BubbledError","getTracer","NextNodeServerSpan","nodeFs","getRouteRegex","pipeToNodeResponse","createRequestResponseMocks","NEXT_RSC_UNION_QUERY","signalFromNodeResponse","RouteModuleLoader","loadManifest","lazyRenderAppPage","lazyRenderPagesPage","interopDefault","formatDynamicImportPath","isInterceptionRouteRewrite","stripNextRscUnionQuery","dynamicImportEsmDefault","process","env","NEXT_MINIMAL","id","then","mod","default","dynamicRequire","__non_webpack_require__","require","writeStdoutLine","text","stdout","write","formatRequestUrl","url","maxLength","undefined","length","substring","MiddlewareMatcherCache","WeakMap","getMiddlewareMatcher","info","stored","get","Array","isArray","matchers","Error","JSON","stringify","matcher","set","NextNodeServer","constructor","options","handleNextImageRequest","req","res","parsedUrl","pathname","startsWith","minimalMode","nextConfig","output","statusCode","body","send","ImageOptimizerCache","imageOptimizerCache","distDir","getHash","sendResponse","ImageError","imageResponseCache","imagesConfig","images","loader","unoptimized","render404","paramsResult","validateParams","originalRequest","query","renderOpts","dev","errorMessage","cacheKey","getCacheKey","cacheEntry","getExtension","buffer","contentType","maxAge","imageOptimizer","etag","value","kind","extension","revalidate","incrementalCache","originalResponse","href","isStatic","isMiss","isStale","Boolean","err","message","handleCatchallRenderRequest","_nextBubbleNoFallback","i18n","i18nProvider","fromQuery","match","render","edgeFunctionsPages","getEdgeFunctionsPages","edgeFunctionsPage","definition","page","handled","runEdgeFunction","params","appPaths","handleApiRequest","formatServerError","logErrorWithOriginalStack","logError","renderError","handleCatchallMiddlewareRequest","parsed","isMiddlewareInvoke","handleFinished","middleware","getMiddleware","initUrl","pathnameInfo","normalizedPathname","result","bubblingResult","ensureMiddleware","runMiddleware","request","response","key","Object","entries","headers","setHeader","status","end","code","error","console","finished","optimizeFonts","__NEXT_OPTIMIZE_FONTS","optimizeCss","__NEXT_OPTIMIZE_CSS","nextScriptWorkers","__NEXT_SCRIPT_WORKERS","NEXT_DEPLOYMENT_ID","deploymentId","appDocumentPreloading","experimental","isDefaultEnabled","isAppPath","catch","preloadEntriesOnStart","unstable_preloadEntries","dynamicRoutes","getRoutesManifest","map","r","regex","re","serverOptions","experimentalTestProxy","NEXT_PRIVATE_TEST_PROXY","interceptTestApis","middlewareManifestPath","serverDistDir","prepare","appPathsManifest","getAppPathsManifest","pagesManifest","getPagesManifest","keys","ComponentMod","webpackRequire","__next_app__","m","handleUpgrade","prepareImpl","instrumentationHook","dir","conf","register","forceReload","silent","getIncrementalCache","requestHeaders","requestProtocol","CacheHandler","cacheHandler","getCacheFilesystem","pagesDir","enabledDirectories","pages","appDir","app","allowedRevalidateHeaderKeys","fetchCache","fetchCacheKeyPrefix","maxMemoryCacheSize","cacheMaxMemorySize","flushToDisk","isrFlushToDisk","getPrerenderManifest","CurCacheHandler","getResponseCache","getPublicDir","getHasStaticDir","existsSync","getinterceptionRoutePatterns","routesManifest","rewrites","beforeFiles","filter","rewrite","RegExp","hasPage","locales","getBuildId","buildIdFile","readFileSync","trim","getEnabledDirectories","type","generateEtags","poweredByHeader","swrDelta","runApi","handledAsEdgeFunction","module","load","filename","__nextLocale","__nextDefaultLocale","__nextInferredLocaleFromDefault","previewProps","bind","trustHostHeader","hostname","fetchHostname","renderHTML","trace","renderHTMLImpl","nextFontManifest","fetchExternalImage","fetchInternalImage","handleInternalReq","newReq","newRes","routerServerHandler","isAbsolute","imageUpstream","renderPageComponent","ctx","bubbleNoFallback","getOriginalAppPaths","findPageComponents","spanName","attributes","findPageComponentsImpl","_url","pagePaths","amp","unshift","path","pagePath","components","Component","isExperimentalCompile","getStaticProps","__nextDataReq","getFontManifest","getNextFontManifest","getFallback","cacheFs","readFile","_err","_type","ensurePage","_opts","getPrefetchRsc","normalizeReq","normalizeRes","getRequestHandler","handler","makeRequestHandler","wrapRequestHandlerNode","normalizedReq","normalizedRes","loggingFetchesConfig","logging","fetches","enabledVerboseLogging","shouldTruncateUrl","fullUrl","blue","green","yellow","red","gray","white","reqStart","Date","now","isMiddlewareRequest","reqCallback","routeMatch","isRSC","reqEnd","fetchMetrics","reqDuration","statusColor","color","method","requestUrl","loggingUrl","toString","calcNestedLevel","prevMetrics","start","nestedLevel","i","metric","prevMetric","repeat","cacheStatus","cacheReason","cacheReasonStr","cacheColor","duration","URL","truncatedHost","host","truncatedPath","truncatedSearch","search","protocol","newLineLeadingChar","nestedIndent","slice","nextNestedIndent","off","on","urlPath","revalidateHeaders","opts","mocked","hasStreamed","getHeader","unstable_onlyGenerated","internal","renderToHTML","renderErrorToResponseImpl","is404","clientOnly","includes","setHeaders","renderErrorToHTML","getMiddlewareManifest","manifest","functions","getEdgeFunctionInfo","foundPage","pageInfo","name","paths","files","file","wasm","binding","filePath","assets","hasMiddleware","ensureEdgeFunction","_params","isOnDemandRevalidate","Response","skipMiddlewareUrlNormalize","locale","port","middlewareInfo","toUpperCase","run","edgeFunctionEntry","basePath","trailingSlash","signal","useCache","onWarning","waitUntil","toLowerCase","delete","cookies","cookie","append","_cachedPreviewManifest","NODE_ENV","NEXT_PHASE","version","routes","notFoundRoutes","preview","previewModeId","randomBytes","previewModeSigningKey","previewModeEncryptionKey","afterFiles","fallback","attachRequestMeta","isUpgradeReq","edgeInfo","isNextDataRequest","initialUrl","queryString","fromEntries","searchParams","onError","globalThis","__incrementalCache","statusMessage","statusText","forEach","appendHeader","_serverDistDir","getFallbackErrorComponents"],"mappings":"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"}